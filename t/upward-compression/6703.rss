<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Upward compression?</title>
    <link>http://community.axoloti.com/t/upward-compression/6703</link>
    <description>Hi all,

I like using this plugin on the Linux Desktop in &quot;upward&quot; mode:
https://lsp-plug.in/?page=manuals&amp;section=compressor_mono

The way I understand it, it works the reverse way as a common &quot;downward&quot; compressor.
Now I am wondering if/how it is possible to recreate the &quot;upwardness&quot; in an Axoloti object by modifying an existing object.
I know how to code and have been tweaking objects, but I am not super experienced in the dsp-domain.

Any help is appreciated, thanks</description>
    
    <lastBuildDate>Sun, 28 Jun 2020 16:27:50 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="http://community.axoloti.com/t/upward-compression/6703.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Upward compression?</title>
        <dc:creator><![CDATA[@ivofx Ivo Grigull]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/ivofx">@ivofx</a> wrote:</p>
          <blockquote>
              <p>I went for the compander, it works well</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/upward-compression/6703/4">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/upward-compression/6703/4</link>
        <pubDate>Sun, 28 Jun 2020 16:27:50 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6703-4</guid>
        <source url="http://community.axoloti.com/t/upward-compression/6703.rss">Upward compression?</source>
      </item>
      <item>
        <title>Upward compression?</title>
        <dc:creator><![CDATA[@ivofx Ivo Grigull]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/ivofx">@ivofx</a> wrote:</p>
          <blockquote>
              <p>Awesome, thank you. When browsing through the objects that you mention, I got confused by the term expander because when I googled, it said an expander would make quiet sounds quieter to increase the dynamic range, for that reason I did not try them out.<br>It sounds like they do what I need from what you wrote, which is great, I will try them.<br>I also started playing with your Factotum object today, very nice! <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/upward-compression/6703/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/upward-compression/6703/3</link>
        <pubDate>Sun, 28 Jun 2020 12:05:14 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6703-3</guid>
        <source url="http://community.axoloti.com/t/upward-compression/6703.rss">Upward compression?</source>
      </item>
      <item>
        <title>Upward compression?</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>Take a look into my sss/dyn folder. There are a couple of compressor modules that boost the signal if it's below the treshold (expand) and attenuates it when it goes above (compress) .<br>The factory dyn/comp module has a clipper that limits the gain to only ducking the signal, but removing this limitation allows you to also use it as an expander. One small thing to keep in mind, it does need to attenuate it's gain when the incoming signal's amplitude goes towards 0 or it will "try" adding unlimited gain (which of course it can't and doesn't have enough bits for it, creating all kinds of errors). So what I did was to limit the "low input" of the added expander gain and multiply it with the envelope follower, making sure it's forced back to zero when the input becomes zero.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/upward-compression/6703/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/upward-compression/6703/2</link>
        <pubDate>Sun, 28 Jun 2020 11:07:01 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6703-2</guid>
        <source url="http://community.axoloti.com/t/upward-compression/6703.rss">Upward compression?</source>
      </item>
      <item>
        <title>Upward compression?</title>
        <dc:creator><![CDATA[@ivofx Ivo Grigull]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/ivofx">@ivofx</a> wrote:</p>
          <blockquote>
              <p>Hi all,</p>

<p>I like using this plugin on the Linux Desktop in "upward" mode:<br><a href="https://lsp-plug.in/?page=manuals&amp;section=compressor_mono" class="onebox" target="_blank" rel="nofollow noopener">https://lsp-plug.in/?page=manuals&amp;section=compressor_mono</a></p>

<p>The way I understand it, it works the reverse way as a common "downward" compressor.<br>Now I am wondering if/how it is possible to recreate the "upwardness" in an Axoloti object by modifying an existing object.<br>I know how to code and have been tweaking objects, but I am not super experienced in the dsp-domain.</p>

<p>Any help is appreciated, thanks</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/upward-compression/6703/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/upward-compression/6703/1</link>
        <pubDate>Sun, 28 Jun 2020 09:02:39 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6703-1</guid>
        <source url="http://community.axoloti.com/t/upward-compression/6703.rss">Upward compression?</source>
      </item>
  </channel>
</rss>
