<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>A first approach to physical modelling</title>
    <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636</link>
    <description>I&#39;m trying to program a physical model for a spring - mass - spring - mass system.

It looks like this:
&lt;img src=&quot;/uploads/default/original/2X/0/0f3d2e4823251b0d68a7998d0a31e97145552206.png&quot; width=&quot;690&quot; height=&quot;175&quot;&gt;

No friction and no gravity for now, only horizontal components of acceleration, referring to hooke&#39;s law.

This is the current object i&#39;m working on
&lt;a class=&quot;attachment&quot; href=&quot;/uploads/default/original/2X/a/a825ede2f333561b420dd0ebf41e6ff1923ba500.axo&quot;&gt;chaotic osc.axo&lt;/a&gt; (2.9 KB)

There are several knobs: time allows to edit the timefactor for the simulation (you should set this to something different than 0 if you want to use the object)
x0 sets the initial displacement for M2 mass.
k, h represent the elastic constants for the two springs
m1, m2 represent the two masses 

when the reset inlet is triggered the system restarts the simulation from the x0 position.


The core of the code is this:

    A1=(param_h*DX2-param_k*DX1)*281474976710656/M1; //calculating the acceleration in function of the displacement of the spring
    A2=-param_h*DX2*281474976710656/M2;

    V1+=___SMMUL(A1,param_time); //calculating the resulting speed (i&#39;m doing a quite dumb integration here)
    V2+=___SMMUL(A2,param_time);

    X1+=___SMMUL(V1,param_time);  //calculating the resulting displacement of the mass (i&#39;m doing another dumb integration here)
    X2+=___SMMUL(V2,param_time);

    DX1=X1-LA&lt;&lt;4;  //calculating the displacement of the spring relative to the rest position
    DX2=X2-X1-LB&lt;&lt;4; 


Now, the system is well defined with these equations, there are only some tweaks to be done (i know this because i previously implemented the object with float operations and it worked well, set aside the enormous cpu load).

However, i need to tweak the parameters (and bitshift here and there), but i don&#39;t even know where to start. 
I already tried some configurations, but they did result in unexpected behaviour (kinda like extremely fast fluctuatioons or absurd dynamic range or bizarre overflowing and acceleration going from +64 to -64 in just 1 cycle.

Can someone help me figure this out?</description>
    
    <lastBuildDate>Thu, 09 Jun 2016 17:37:27 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@bafonso]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/bafonso">@bafonso</a> wrote:</p>
          <blockquote>
              <p>Hey,</p>

<p>I can look at this once I get my axoloti. I will either get it from someone in the US that is not using it or I'll wait for the thonk kit as my interest is coupled to being able to control parameters not using a computer <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"> </p>

<p>I can have a look at this once I get it. I just googled harmonic oscillator C code and found this:</p>

<p><a href="http://www.maths.tcd.ie/~ryan/TeachingArchive/161/teaching/harm_osc_rk.c.html" class="onebox" target="_blank" rel="nofollow">http://www.maths.tcd.ie/~ryan/TeachingArchive/161/teaching/harm_osc_rk.c.html</a></p>

<p>Looks like it's using a 4th order runge kutta and I'd guess trivial do implement in the axoloti C framework. </p>

<p>My interests lie more in the 2D physical modeling but would love to get started in 1D for sure. Matrices in Max (gen) and reaktor are a pain this is why I got interested in axoloti. The main issue will likely be to make changes to create optimal code that the M4 likes and is able to cope with and this is where the CMSIS library will likely be very very useful <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>The M4 will never reach the power of a dedicated DSP with clever programming but aleph didn't take off with developers or users for that matter. I cannot find almost any examples of aleph making music on youtube, whereas lots of interesting videos of people exploring the axoloti platform !</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/44">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/44</link>
        <pubDate>Thu, 09 Jun 2016 17:37:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-44</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="41" data-topic="1636"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/k/7bcc69/40.png" class="avatar">Karpo72:</div>
<blockquote><p>C code like this won't work?https://drive.google.com/open?id=0B16rrKKNzh9WUDRKUjJQQWVINFk</p></blockquote></aside>

<p>It might do. It depends if it requires external functions that aren't available to the Axoloti compiler, and if the processor is powerful enough to do the work required.</p>

<p>You'd also need to work around the fixed sample-rate of the Axoloti, and the limited RAM available.</p>

<p>These are some of the reasons I've taken my first baby steps in Axoloti object coding by working on ports of lo-fi vintage digital sound-generators and Arduino sketches, rather than trying to back-port code designed for desktop computers.</p>

<p>That's not to say that more complex physical model stuff wouldn't also be very cool. It's just I don't have the maths skills to attempt anything like that myself, sadly.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/43">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/43</link>
        <pubDate>Wed, 08 Jun 2016 08:20:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-43</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Your objects can include external files, so you can keep common functions in a separate file, and call them from different objects.</p>

<p>You can also use functions from the <a href="http://www.keil.com/pack/doc/CMSIS/General/html/index.html" rel="nofollow">CMSIS</a> DSP library, and there are a number of utility functions provided by <a class="mention" href="/users/johannes">@johannes</a> to do various common tasks. They're undocumented, but it's usually possible to work out what they do by looking at the Factory library objects.<br>You can also make use of the <a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0553a/CIHJJEIH.html" rel="nofollow">builtin maths functions</a> provided by the CortexM4 MCU.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/42">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/42</link>
        <pubDate>Wed, 08 Jun 2016 08:15:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-42</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p>ok just a second I think the problem is, that I missunderstood the development. Major functions need to be implemented within the firmaware I guess. <a class="mention" href="/users/johannes">@johannes</a> So if you would like to add some kind of a damped harmonic oscillator how would you implement that? And what the best strategy for physical modelling in this case? As far as I see there is now way build up complex codes in a object? Is the code directly c? Perhaps somebody can explain me the way of implementation.So it doesn't help me to create complex code in c from matlab, because it has to be implemented in the firmware?</p>

<p>C code like this won't work?<br><a href="https://drive.google.com/open?id=0B16rrKKNzh9WUDRKUjJQQWVINFk" class="onebox" target="_blank" rel="nofollow">https://drive.google.com/open?id=0B16rrKKNzh9WUDRKUjJQQWVINFk</a></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/41">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/41</link>
        <pubDate>Wed, 08 Jun 2016 07:51:36 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-41</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Objects are coded in C/C++.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/40">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/40</link>
        <pubDate>Wed, 08 Jun 2016 07:47:37 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-40</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/users/sputnki">@Sputnki</a> Hey I tried to get a overview about creating axoloti objects. It uses C operators but is it also C?  Or is it some kind of own code implementation. What if I've a complex code? Are there any examples working with complex code? Or has every complex function to be included in the firmware? I.e: The harmonic oscillator would be a implementation within the firmware?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/39">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/39</link>
        <pubDate>Wed, 08 Jun 2016 07:38:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-39</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/users/bafonso">@bafonso</a> I've found an matlab example for a harmonic oscillator. I generated the code, but it uses it own defined data types, because of a generic code generation. Until now I didn't had time to step into the axoloti development. But if you like, it should'nt be not a problem to change the code and make it run. I think the first step might be a harmonic oscillator. It might take some weeks until I'mprepared to try my own development. Just take a look. I guess if you've some experience you could implement an axoloti object within some hours. </p>

<p><a href="https://drive.google.com/open?id=0B16rrKKNzh9WTXdXZFJuN1IyX1E" class="onebox" target="_blank" rel="nofollow">https://drive.google.com/open?id=0B16rrKKNzh9WTXdXZFJuN1IyX1E</a></p>

<p>By the way the ode45 implementation should work within the first step. It would be interesting to test the performance on the axoloti. As far as I know it is some kind of runge kutta implementation which is not very accurate, but perhaps fast enough in the calculation. As far I know  it implents some values about error tolerance.</p>

<p>Steps to take: Make it run, test performance, optimizing <img src="/images/emoji/emoji_one/wink.png?v=2" title=":wink:" class="emoji" alt=":wink:"> I guess also <a class="mention" href="/users/sputnki">@Sputnki</a> has nothing against some help <img src="/images/emoji/emoji_one/wink.png?v=2" title=":wink:" class="emoji" alt=":wink:"> I compiled c++ files, if needed I can also generate c code. Perhaps it would be a good idea to seperate the ode45 function later in some kind of a own math function to give other developer the chance to reuse it.</p>

<p>The example has two outputs. If not needed I can remove one output. The v output is the velocity wave. It wasn't used in the example, but I wasn't shure if it may be needed.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/38">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/38</link>
        <pubDate>Wed, 08 Jun 2016 06:13:43 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-38</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@bafonso]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/bafonso">@bafonso</a> wrote:</p>
          <blockquote>
              <p>Dammit, now I really want an axoloti, physical modeling in a standalone box has been one of my main interests in these open-ended software boxes. Had high hopes using aleph but developing code for that seems too hard..</p>

<p>Using matrices will always be computationally useful, even if you're just dealing in one dimension since then you can interpolate between parallel computations.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/37">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/37</link>
        <pubDate>Tue, 07 Jun 2016 15:49:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-37</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/users/sputnki">@Sputnki</a> Would you please take a look at this example? <a href="https://drive.google.com/open?id=0B16rrKKNzh9WT3g4RTg1dGNPc3c" rel="nofollow">https://drive.google.com/open?id=0B16rrKKNzh9WT3g4RTg1dGNPc3c</a></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/36">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/36</link>
        <pubDate>Tue, 07 Jun 2016 13:40:15 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-36</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I lack the mathematical background to make sense of the functions, unfortunately.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/35">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/35</link>
        <pubDate>Mon, 06 Jun 2016 11:40:55 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-35</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p>I see. Does sombody ever tried this lib with axoloti object?  Seems to have a lot of complex calculations.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/34">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/34</link>
        <pubDate>Mon, 06 Jun 2016 11:26:36 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-34</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="31" data-topic="1636"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/sputnki/40/175_1.png" class="avatar">Sputnki:</div>
<blockquote><p>Yes, matlab works with matrix data types (which are not directly available in axoloti)</p></blockquote></aside>

<p>I think  the <a href="http://www.keil.com/pack/doc/CMSIS/DSP/html/index.html" rel="nofollow">CMSIS</a> library has both vector and matrix support, which should be available to you custom objects.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/33">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/33</link>
        <pubDate>Mon, 06 Jun 2016 11:15:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-33</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p>Hey have some input about the transfer function.... take a look at this generated code files, perhaps it helps:</p>

<p><a href="https://drive.google.com/open?id=0B16rrKKNzh9WQjBvd3h0aERSUU0" class="onebox" target="_blank" rel="nofollow">https://drive.google.com/open?id=0B16rrKKNzh9WQjBvd3h0aERSUU0</a></p>

<p><a class="mention" href="/users/johannes">@johannes</a> I#ve learnd..the zip is now somewhere else <img src="/images/emoji/emoji_one/wink.png?v=2" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/32">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/32</link>
        <pubDate>Mon, 06 Jun 2016 10:40:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-32</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="30" data-topic="1636"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/k/7bcc69/40.png" class="avatar">Karpo72:</div>
<blockquote><p>The script contains also a line which generates a error -&gt; v=F/(2*R0); It seems that he make a division on a matrix, but v  should be a verctor to process the data.</p></blockquote></aside>

<p>Yes, matlab works with matrix data types (which are not directly available in axoloti).<br>I can see a problem here: if you want to do 1-dimensional modeling, that's fine (because you have to calculate integrals in only one dimension).That might be the case for springs (or strings, if you want). <br>If instead you wish to model something like a plate (which is a 2-dimensional object), that brings in the need to calculate integrals in multidimensional space, which probably requires a jacobian matrix, and that goes way over my skills, both math and programming. I also think some more advanced trig functions are needed (like inverse functions, at least an arctan)</p>

<p>I see you're really interested in seeing something come out of my experiments, i promise i'll get back to this when i finish my current project!</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/31">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/31</link>
        <pubDate>Mon, 06 Jun 2016 10:34:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-31</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p>To tell you the truth I didn't step to deep in it. I think you know much more than me about it. I just try to support you somehow because physical modelling is quite a interesting function. It would be nice if we would find a solution to have some sort of harmonic oscillator, bowed string simulation, string hammer simulation, picked string simulation. I just read a project about piano <a href="http://www.acoustics.ed.ac.uk/wp-content/uploads/AMT_MSc_FinalProjects/2012__Teng__AMT_MSc_FinalProject_PianoSynthesis.pdf" rel="nofollow">http://www.acoustics.ed.ac.uk/wp-content/uploads/AMT_MSc_FinalProjects/2012__Teng__AMT_MSc_FinalProject_PianoSynthesis.pdf</a>. </p>

<p>The guy implemented it in matlab. I ask a friend if it is possible to generate code from this experiment. But it uses to functions wihich don't allow code conversion out of the box <a href="http://de.mathworks.com/help/control/ref/tf.html" rel="nofollow">http://de.mathworks.com/help/control/ref/tf.html</a>  <a href="http://de.mathworks.com/help/control/ref/tfdata.html" rel="nofollow">http://de.mathworks.com/help/control/ref/tfdata.html</a>. These functions seem to be a critical point within the script, because they need to be implemented very carefull because of cpu usage. There are possible ways to implement a Transfer Function <img src="/images/emoji/emoji_one/left_right_arrow.png?v=2" title=":left_right_arrow:" class="emoji" alt=":left_right_arrow:"> State Space function. </p>

<p>The script contains also a line which generates a error -&gt; v=F/(2*R0); It seems that he make a division on a matrix, but v  should be a verctor to process the data. Actually I wrote the guy if he may like to help and pointed him also on the axoloti project <img src="/images/emoji/emoji_one/wink.png?v=2" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/30">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/30</link>
        <pubDate>Mon, 06 Jun 2016 09:45:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-30</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@pierstitus]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/pierstitus">@pierstitus</a> wrote:</p>
          <blockquote>
              <p>Generating Axoloti objects from Faust would be nice indeed. In this case especially when combined with Synth-a-Modeler, a physical modelling framework built on Faust. See <a href="http://computermusic.us/samdesigner/" rel="nofollow">http://computermusic.us/samdesigner/</a></p>

<p>Faust does everything as float, which works fine for me on STM32F4, you just should be careful not to use any math function calls, as they are very costly, and also divides and square roots take 14 cycles versus 3 cycles for multiplication and 1 cycle for addition/subtraction.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/29">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/29</link>
        <pubDate>Sun, 05 Jun 2016 23:32:15 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-29</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Really cool examples, thanks! I really need to learn simulink, it's so powerful.</p>

<p>I'm curious however, is that code directly usable in axoloti?<br>I mean, yes it's c, but aren't there external libs in the examples?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/28">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/28</link>
        <pubDate>Sun, 05 Jun 2016 18:14:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-28</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="26" data-topic="1636"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/k/7bcc69/40.png" class="avatar">Karpo72:</div>
<blockquote><p>I'm not sure why it is not allowed to upload zip files.</p></blockquote></aside>

<p>Zip files could contain malware, copyrighted or inappropriate content. I'll tolerate this one for once... Hosting it somewhere else and linking to it is preferred.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/27">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/27</link>
        <pubDate>Sun, 05 Jun 2016 16:37:19 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-27</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/1/14fc384cbdc7ef9c0094749ceca596fc9b08daca.axo">test.axo</a> (619.6 KB)</p>

<p>Hey found some c examples that were generated with mathlab...sorry to tricking that forum, but it is a zip file. Rename it to zip. I'm not sure why it is not allowed to upload zip files. The zip contains just public example code.It should run on ARM Cortex M4. Perhaps there are some pieces of code that are interesting for you.</p>

<p><a class="mention" href="/users/sputnki">@Sputnki</a> by the way I have read now a lot of papers about a possible solution and compared also some tests with different solvers. If it is suitable you should look for a ode45 implementation. I guess that would be the best solution for the CPU</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/26">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/26</link>
        <pubDate>Sun, 05 Jun 2016 14:04:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-26</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="22" data-topic="1636"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/sputnki/40/175_1.png" class="avatar">Sputnki:</div>
<blockquote><p>I've read Johannes implemented runge-kutta integration for some object (i can't remember which one, though)</p></blockquote></aside>

<p>They're in the 1.0.10 community library: patches/jt/devel/filter-4pole-v2.axp, contains both a floating point and fixed point adaptation of Miller Puckette's Runge-Kutta 4-pole filter for comparison. Still work in progress, I think generally it sounds fine to my ears, but there is an upper limit on the cutoff frequency beyond which it is completely unstable. The cutoff frequency limit can be extended by "double pumping" the filter. To get it towards release I think the best approach is to make 2 separate objects, one "cheap" single iteration version with limited cutoff frequency, one more expensive double pumped version.</p>

<p><a class="mention" href="/users/karpo72">@Karpo72</a> I don't have a Matlab license, and I believe it's quite expensive.<br>Perhaps an alternative path is generating axoloti objects with Faust. <a class="mention" href="/users/pierstitus">@pierstitus</a> has experience with Faust and made a Cortex M4 backend. There has been some discussion on this forum about generating axoloti objects from Faust, but I do not know the actual status of those efforts.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/25">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/25</link>
        <pubDate>Fri, 03 Jun 2016 21:14:50 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-25</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/users/johannes">@johannes</a> <a class="mention" href="/users/sputnki">@Sputnki</a>  </p>

<p>I'm wondering if somebody tried to use matlab to generate code for the axoloti objects and  how it works. Matlab has a code generator which can generate optimized code for the ARM Cortex M4. Might be easier to start with complex physical structures. At least it would be a good idea having complex physical calculation function within a lib.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/24">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/24</link>
        <pubDate>Fri, 03 Jun 2016 11:42:33 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-24</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p>Well this might help you:</p>

<p><a href="http://www.codeforge.com/article/212966" class="onebox" target="_blank" rel="nofollow">http://www.codeforge.com/article/212966</a></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/23">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/23</link>
        <pubDate>Sat, 28 May 2016 13:45:47 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-23</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Yeah, the idea was to build a chaotic oscillator, but actually a spring-mass system (even with two springs and two masses) is a harmonic oscillator.</p>

<p>A truly chaotic oscillator would be the double pendulum, however i felt the need to try something simpler before moving to that (because a double pendulum involves forces directed in two dimensions) and i still don't have proper padronance of trig functions.</p>

<p>What i did was more of a resonator (a sufficiently long chain of such objects with a working friction implementation could model a spring reverb).</p>

<p>Now, the problem is that i don't have a background in low-level programming, i'm improvising and surfing on the notions i learned on some courses in this semester (notions of numeric calculus and analytical mechanics).</p>

<p>The problem is that making the stuff work for a microcontroller involves using a limited set of instructions and optimizing the hell out of the code. (that's a lot of stuff!)</p>

<p>I recently got some ideas to overcome the integration problem (basically using a more refined method than euler's (which suffers heavily of rounding errors) like the midpoint method, see <a href="https://en.wikipedia.org/wiki/Euler_method" rel="nofollow">https://en.wikipedia.org/wiki/Euler_method</a> for some insight) . I've read Johannes implemented runge-kutta integration for some object (i can't remember which one, though)</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/22">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/22</link>
        <pubDate>Fri, 27 May 2016 18:15:41 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-22</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p>I tried to get a little bit into that. You wrote about a spring mass solutionen. So what is the difference between your chaotic oscillator and a harmonic oscillator. As far as I know a harmonic oscillator is based on a spring mass system like described here (http://www.ryanjuckett.com/programming/damped-springs/)</p>

<p>Also nice is this description about modelling and instruments:</p>

<p><a href="http://www.icacommission.org/Proceedings/ICA2001Rome/8_05.pdf" class="onebox" target="_blank" rel="nofollow">http://www.icacommission.org/Proceedings/ICA2001Rome/8_05.pdf</a></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/21">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/21</link>
        <pubDate>Fri, 27 May 2016 15:22:31 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-21</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
      <item>
        <title>A first approach to physical modelling</title>
        <dc:creator><![CDATA[@Karpo72]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/karpo72">@Karpo72</a> wrote:</p>
          <blockquote>
              <p>By the way I found some code regarding mass spring system. I'm not sure if that works for you:</p>

<p><a href="http://jean-pierre.moreau.pagesperso-orange.fr/c_mechanics.html" class="onebox" target="_blank" rel="nofollow">http://jean-pierre.moreau.pagesperso-orange.fr/c_mechanics.html</a></p>

<p>And also a good source might be this free lib:</p>

<p><a href="http://run.usc.edu/vega/" class="onebox" target="_blank" rel="nofollow">http://run.usc.edu/vega/</a></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/20">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636/20</link>
        <pubDate>Fri, 27 May 2016 09:59:29 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1636-20</guid>
        <source url="http://community.axoloti.com/t/a-first-approach-to-physical-modelling/1636.rss">A first approach to physical modelling</source>
      </item>
  </channel>
</rss>
