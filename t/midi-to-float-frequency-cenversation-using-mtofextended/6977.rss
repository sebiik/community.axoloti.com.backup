<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Midi to (float) frequency cenversation using mtofextended</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977</link>
    <description>Hi,
For some kind of thesis I&#39;m currently working on physical modelling algorithms (mainly Digital Waveguide) and I&#39;m trying to implement some of this on a Axoloti board. It works quite well so far but since I code everything in float, I sometimes struggle with conversions to fixed point.
Basically I want to convert a pitch parameter (which should be a midi note) to the corresponding frequency in float. I want to use MTOFEXTENDED() for that to avoid a power calculation but I wasn&#39;t able to get good results there. Here is my piece of code: 

`uint32_t p = midi_note*(1&lt;&lt;27);
MTOFEXTENDED(p, freq);
freq_float = freq*(float)(1.0f/(1&lt;&lt;27))*sample_rate;
LogTextMessage(&quot;freq = %f \n&quot;, freq_float);` 

So in the first line I want to convert a midi note (integer range 0 to 127) to q5.27 fixed point, then I call mtofextended and in the third line I convert to float and multiply with the sampling frequency to get from a phase increment to an actual frequency. As an output I just get super high numbers, which don&#39;t make sense at all. Can anyone tell me what I&#39;m getting wrong here? Is mtofextended probably expecting an other fixed point format than q5.27?
Thanks in advance for your help!
Best, Flori</description>
    
    <lastBuildDate>Thu, 03 Dec 2020 20:37:12 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Midi to (float) frequency cenversation using mtofextended</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>unfortunately i don't think that exists, at least no resource that i would be aware of. for your mentioned problem i would have probably looked at some midi in objects code to see how incoming midi notes are converted, and since you can see (with a disp/dial or similar) what range midi notes cover (-64 to 63) you can figure out the scaling and the math from there. at least this is how i did it. </p>

<p>as for releasing there are two ways i guess, the "better" approach would be to become a contributor and upload your stuff: <a href="//community.axoloti.com/t/contributor-access/1039">https://sebiik.github.io/community.axoloti.com.backup/t/contributor-access/1039</a></p>

<p>it may take some time until you get the access, so the second way would be to just embed your objects into patches and share the patch in a forum post. if you use includes though, that won't work...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/7</link>
        <pubDate>Thu, 03 Dec 2020 20:37:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6977-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977.rss">Midi to (float) frequency cenversation using mtofextended</source>
      </item>
      <item>
        <title>Midi to (float) frequency cenversation using mtofextended</title>
        <dc:creator><![CDATA[@lol3000 Flori]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lol3000">@lol3000</a> wrote:</p>
          <blockquote>
              <p>Yes I found that post as well but it just mentioned some lookup-table functions without specifying their parameters. I thought there could be probably something a bit more detailed especially about the datatypes that are used internally.</p>

<p>Yes for sure I could release what I'm working on, if there would be an interest in the community <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> <br>How would that work?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/6</link>
        <pubDate>Thu, 03 Dec 2020 13:34:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6977-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977.rss">Midi to (float) frequency cenversation using mtofextended</source>
      </item>
      <item>
        <title>Midi to (float) frequency cenversation using mtofextended</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>great! glad you got it sorted. yeah fixed point numbers can be a pain sometimes, and documentation is sparse... maybe here: <a href="//community.axoloti.com/t/coding-axoloti-objects/2606">https://sebiik.github.io/community.axoloti.com.backup/t/coding-axoloti-objects/2606</a></p>

<p>also, do you plan to release your axoloti work as objects?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/5</link>
        <pubDate>Thu, 03 Dec 2020 12:59:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6977-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977.rss">Midi to (float) frequency cenversation using mtofextended</source>
      </item>
      <item>
        <title>Midi to (float) frequency cenversation using mtofextended</title>
        <dc:creator><![CDATA[@lol3000 Flori]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lol3000">@lol3000</a> wrote:</p>
          <blockquote>
              <p>I solved it! <br>MTOFEXTENDED() seems to expect signed q11.21 values with an offset of 64. So here is my piece of code converting a midi note to a float frequency. </p>

<p><code>uint32_t p = (midi_note - 64)*(1&lt;&lt;21);<br>MTOFEXTENDED(p, freq);<br>freq_float = freq*(1.f/(4*(float)(1&lt;&lt;30)))*sample_rate;</code></p>

<p>Thanks for your advice again with the q0.32 output, it helped a lot. Still there is my question if there is some kind of documentation for these functions? Probably it is also because I did not work a lot with fixed point math so far, but it would be great not to guess all parameter formats <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/4</link>
        <pubDate>Thu, 03 Dec 2020 11:15:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6977-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977.rss">Midi to (float) frequency cenversation using mtofextended</source>
      </item>
      <item>
        <title>Midi to (float) frequency cenversation using mtofextended</title>
        <dc:creator><![CDATA[@lol3000 Flori]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lol3000">@lol3000</a> wrote:</p>
          <blockquote>
              <p>Hey, thanks for your reply. When I divide the result by 32 I get numbers between 0 an 24000, what makes kind of sense, so the output seems to be q0.32. But it doesn't represent the numbers of the input midi notes at all, so the input seems to be not q5.27 but something different. I will probably try some formats till it works, thanks for your help so far!<br>Is there actually some kind of documentation for built-in functions like mtof and others including input and output datatypes? I couldn't find anything like this.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/3</link>
        <pubDate>Thu, 03 Dec 2020 10:19:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6977-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977.rss">Midi to (float) frequency cenversation using mtofextended</source>
      </item>
      <item>
        <title>Midi to (float) frequency cenversation using mtofextended</title>
        <dc:creator><![CDATA[@Nosnibor]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/nosnibor">@Nosnibor</a> wrote:</p>
          <blockquote>
              <p>I'd expect the phase increment to be q0.32, i.e. a phase increment of 0x80000000 means half the sample rate. Are your numbers 32 times too high?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/2</link>
        <pubDate>Tue, 01 Dec 2020 22:40:22 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6977-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977.rss">Midi to (float) frequency cenversation using mtofextended</source>
      </item>
      <item>
        <title>Midi to (float) frequency cenversation using mtofextended</title>
        <dc:creator><![CDATA[@lol3000 Flori]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lol3000">@lol3000</a> wrote:</p>
          <blockquote>
              <p>Hi,<br>For some kind of thesis I'm currently working on physical modelling algorithms (mainly Digital Waveguide) and I'm trying to implement some of this on a Axoloti board. It works quite well so far but since I code everything in float, I sometimes struggle with conversions to fixed point.<br>Basically I want to convert a pitch parameter (which should be a midi note) to the corresponding frequency in float. I want to use MTOFEXTENDED() for that to avoid a power calculation but I wasn't able to get good results there. Here is my piece of code: </p>

<p><code>uint32_t p = midi_note*(1&lt;&lt;27);<br>MTOFEXTENDED(p, freq);<br>freq_float = freq*(float)(1.0f/(1&lt;&lt;27))*sample_rate;<br>LogTextMessage("freq = %f \n", freq_float);</code> </p>

<p>So in the first line I want to convert a midi note (integer range 0 to 127) to q5.27 fixed point, then I call mtofextended and in the third line I convert to float and multiply with the sampling frequency to get from a phase increment to an actual frequency. As an output I just get super high numbers, which don't make sense at all. Can anyone tell me what I'm getting wrong here? Is mtofextended probably expecting an other fixed point format than q5.27?<br>Thanks in advance for your help!<br>Best, Flori</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977/1</link>
        <pubDate>Tue, 01 Dec 2020 17:56:47 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6977-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/midi-to-float-frequency-cenversation-using-mtofextended/6977.rss">Midi to (float) frequency cenversation using mtofextended</source>
      </item>
  </channel>
</rss>
