<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Cortex code profiler?</title>
    <link>http://community.axoloti.com/t/cortex-code-profiler/3025</link>
    <description>is there a profiler? I&#39;d like to get a better understanding of what parts of my patches are expensive, and where there might be optimization opportunities.</description>
    
    <lastBuildDate>Thu, 09 Mar 2017 14:20:59 +0000</lastBuildDate>
    <category>Software</category>
    <atom:link href="http://community.axoloti.com/t/cortex-code-profiler/3025.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Cortex code profiler?</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p><em>(developer talk, assuming familiarity with embedded development tools)</em></p>

<p>It may be possible to do unobtrusive statistical real-time profiling without debugger, by programming a timer at random intervals, peeking at the program counter on the stack, and building a histogram of relevant program counter values, say, in sdram. Associating the program counter values to the C++ code may give a distorted view due to compiler optimizations, but I can imagine that this approach would be useful.<br>Instrumenting functions for function call counting would hurt performance a lot, and the results would be boring for the dsp code. <br><a href="https://mcuoneclipse.com/2015/08/23/tutorial-using-gnu-profiling-gprof-with-arm-cortex-m/">Here</a> is a tutorial about profiling, but I have not done this. </p>

<p>On the RTOS side, ChibiOS can be configured to keep per-thread <a href="http://www.chibios.org/dokuwiki/doku.php?id=chibios:book:kernel_debug">statistics</a>, and after firmware recompilation and flashing, those could be read out using an st-link debugger, or self-reported by an object similar to the <code>jt/debug_threads</code> object.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/cortex-code-profiler/3025/4">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/cortex-code-profiler/3025/4</link>
        <pubDate>Thu, 09 Mar 2017 14:20:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3025-4</guid>
        <source url="http://community.axoloti.com/t/cortex-code-profiler/3025.rss">Cortex code profiler?</source>
      </item>
      <item>
        <title>Cortex code profiler?</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>look at patch/cyclecounter (and its associated help)</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/cortex-code-profiler/3025/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/cortex-code-profiler/3025/3</link>
        <pubDate>Thu, 09 Mar 2017 10:20:11 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3025-3</guid>
        <source url="http://community.axoloti.com/t/cortex-code-profiler/3025.rss">Cortex code profiler?</source>
      </item>
      <item>
        <title>Cortex code profiler?</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>I don't think there is. Especially since axoloti isn't one big binary.</p>

<p>Your best bet is to look at the assembly code that is generated by the compiler. As the relevant code is executed at fixed intervals and in most cases doesn't branch a lot, it is possible to directly correlate the number of instructions/cycles to the CPU-time required. S rate code is executed 16times as often as k rate code, so take that into account.</p>

<p>If that is too technical and tedious, you can always simply remove some objects and see the effect on CPU usage.</p>

<p>Also note that with the current execution scheme, you can shave off some CPU usage by making sure that connections between objects always go down and to the right, never up or left. The latter will add a 16 sample delay in the processing chain and that adds CPU time (and memory footprint) as well.<br>In some of my polyphonic patches I was able to shave off 3% or more, just by dragging object around to make sure the connections go down and to the right.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/cortex-code-profiler/3025/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/cortex-code-profiler/3025/2</link>
        <pubDate>Thu, 09 Mar 2017 08:57:42 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3025-2</guid>
        <source url="http://community.axoloti.com/t/cortex-code-profiler/3025.rss">Cortex code profiler?</source>
      </item>
      <item>
        <title>Cortex code profiler?</title>
        <dc:creator><![CDATA[@evan Evan V-M]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/evan">@evan</a> wrote:</p>
          <blockquote>
              <p>is there a profiler? I'd like to get a better understanding of what parts of my patches are expensive, and where there might be optimization opportunities.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/cortex-code-profiler/3025/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/cortex-code-profiler/3025/1</link>
        <pubDate>Thu, 09 Mar 2017 03:14:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3025-1</guid>
        <source url="http://community.axoloti.com/t/cortex-code-profiler/3025.rss">Cortex code profiler?</source>
      </item>
  </channel>
</rss>
