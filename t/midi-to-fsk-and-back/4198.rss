<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>MIDI to FSK and back?</title>
    <link>http://community.axoloti.com/t/midi-to-fsk-and-back/4198</link>
    <description>Hi everyone,

I&#39;m interested in getting a 4-track casette recorder for some lo-fi sounds. I understand that people used to use frequency-shift keying, an algorithm for converting digital data to audio and vice versa, to encode midi clock etc on one track of a casette.

Rather than spend ages hunting down (for example) a Tascam MTS-30, I&#39;d rather just implement the same (or a similar) algorithm myself on an axoloti, as it strikes me that all the necessary hardware is already onboard.

Does anyone have detailed knowledge of whether/how this is possible? Or, can you provide me with details of where I might find the appropriate documentation?

From a brief glance at wikipedia, I feel like I make an encoding algorithm very easily (eg. using octave-switching of oscillators, and an array of band-pass filters/ a mixer) to encode different clock states (start, stop, 24ppq) as audio.

What I find more difficult to grasp is the decoding step: Clearly I can separate the oscillators using the same bandpass filters used to encode, but what are common ways to &quot;call&quot; when a frequency shift within a band has occured?

Has anyone else done this? Or have any useful advice?

EDIT:

Have just realised that one possible decoder solution might be to use 2 bandpass filters per encoded signal, centred on the expected frequencies that the carrier switches between, and compare the amplitudes of the outputs of these filters in order to find the 0 or 1. Am I on the right track?

Second EDIT:
Just did a first draft of  the implementation described above, which seems like it should function (although not tested).&lt;a class=&quot;attachment&quot; href=&quot;/uploads/default/original/2X/0/066915a53063d0dfcd7f29ea225cb00da7e3c88a.axp&quot;&gt;midi_fsk.axp&lt;/a&gt; (11.4 KB)</description>
    
    <lastBuildDate>Thu, 08 Feb 2018 00:38:15 +0000</lastBuildDate>
    <category>Hardware</category>
    <atom:link href="http://community.axoloti.com/t/midi-to-fsk-and-back/4198.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>MIDI to FSK and back?</title>
        <dc:creator><![CDATA[@Ott]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/ott">@Ott</a> wrote:</p>
          <blockquote>
              <p>Let me know how this project turns out! It sounds awesome.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/midi-to-fsk-and-back/4198/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/midi-to-fsk-and-back/4198/2</link>
        <pubDate>Thu, 08 Feb 2018 00:38:15 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4198-2</guid>
        <source url="http://community.axoloti.com/t/midi-to-fsk-and-back/4198.rss">MIDI to FSK and back?</source>
      </item>
      <item>
        <title>MIDI to FSK and back?</title>
        <dc:creator><![CDATA[@bard1234 Andrew Bard]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/bard1234">@bard1234</a> wrote:</p>
          <blockquote>
              <p>Hi everyone,</p>

<p>I'm interested in getting a 4-track casette recorder for some lo-fi sounds. I understand that people used to use frequency-shift keying, an algorithm for converting digital data to audio and vice versa, to encode midi clock etc on one track of a casette.</p>

<p>Rather than spend ages hunting down (for example) a Tascam MTS-30, I'd rather just implement the same (or a similar) algorithm myself on an axoloti, as it strikes me that all the necessary hardware is already onboard.</p>

<p>Does anyone have detailed knowledge of whether/how this is possible? Or, can you provide me with details of where I might find the appropriate documentation?</p>

<p>From a brief glance at wikipedia, I feel like I make an encoding algorithm very easily (eg. using octave-switching of oscillators, and an array of band-pass filters/ a mixer) to encode different clock states (start, stop, 24ppq) as audio.</p>

<p>What I find more difficult to grasp is the decoding step: Clearly I can separate the oscillators using the same bandpass filters used to encode, but what are common ways to "call" when a frequency shift within a band has occured?</p>

<p>Has anyone else done this? Or have any useful advice?</p>

<p>EDIT:</p>

<p>Have just realised that one possible decoder solution might be to use 2 bandpass filters per encoded signal, centred on the expected frequencies that the carrier switches between, and compare the amplitudes of the outputs of these filters in order to find the 0 or 1. Am I on the right track?</p>

<p>Second EDIT:<br>Just did a first draft of  the implementation described above, which seems like it should function (although not tested).<a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/0/066915a53063d0dfcd7f29ea225cb00da7e3c88a.axp">midi_fsk.axp</a> (11.4 KB)</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/midi-to-fsk-and-back/4198/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/midi-to-fsk-and-back/4198/1</link>
        <pubDate>Wed, 07 Feb 2018 15:12:22 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4198-1</guid>
        <source url="http://community.axoloti.com/t/midi-to-fsk-and-back/4198.rss">MIDI to FSK and back?</source>
      </item>
  </channel>
</rss>
