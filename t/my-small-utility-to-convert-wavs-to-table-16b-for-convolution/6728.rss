<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My small utility to convert WAVs to Table 16b (for convolution)</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728</link>
    <description>Hello good people of the community,

I just wanted to share with you a small Python utility that I wrote.   It&#39;s simple but very useful.   It reads a .WAV file (Mono, 16bit, 48khz) and spits out the first 1024 frames as a list/array that you can simply copy/paste your your table 16b block.   I use it for pre-loading an impulse response without having to fetch it from an SD Card.

Since I can&#39;t upload the .py file here, I&#39;ll simply copy the copy to a preformatted text box here:

    import wave
    import tkinter as tk
    from tkinter import filedialog, messagebox


    def conv_int(num):
        if num &gt; 32768:
            return -(65536 - num)
        else:
            return num


    def main():
        root = tk.Tk()
        root.withdraw()

        file_path = filedialog.askopenfilename()
        wave_obj = wave.open(file_path, mode=&#39;rb&#39;)

        # Is WAV file mono?
        if wave_obj.getnchannels() == 1 and wave_obj.getsampwidth() == 2:

            # Issue warning if not 48khz
            if wave_obj.getframerate() != 48000:
                print(&#39;Warning: Sample Rate not 48000.&#39;)

            # Issue Warning for too long
            if wave_obj.getnframes() &gt; 1024:
                print(&#39;Warning: Impulse WAV file is too long, it will be truncated at 1024 samples.&#39;)

            # Print Info
            print(f&#39;WAV File info: {wave_obj.getparams()}\n&#39;)

            # Read WAV byte content
            byte_content = wave_obj.readframes(1024)

            # Convert those into 16bit INTs
            list_16bits = [byte_content[i + 1] &lt;&lt; 8 | byte_content[i] for i in range(0, len(byte_content), 2)]

            for index, num in enumerate(list_16bits):
                num = conv_int(num)
                print(f&#39;array[{index}]={num};&#39;)

        # WAV file not mono.
        else:
            print(&#39;WAV file must be mono/one channel and 16 bit format.&#39;)

        messagebox.showinfo(title=&#39;Information&#39;, message=&#39;Done, please copy the output of the console to your table 16b object now.&#39;)


    main()

Let me know if it useful for you, cheers!

Marc aka  Khorus</description>
    
    <lastBuildDate>Wed, 09 Nov 2022 16:21:31 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My small utility to convert WAVs to Table 16b (for convolution)</title>
        <dc:creator><![CDATA[@ParanormalPatroler]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/paranormalpatroler">@ParanormalPatroler</a> wrote:</p>
          <blockquote>
              <p>Thanks, this looks pretty useful. I am not familiar with Python but I will give this a try and report back from the perspective of a total noob.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728/3</link>
        <pubDate>Wed, 09 Nov 2022 16:21:31 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6728-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728.rss">My small utility to convert WAVs to Table 16b (for convolution)</source>
      </item>
      <item>
        <title>My small utility to convert WAVs to Table 16b (for convolution)</title>
        <dc:creator><![CDATA[@aslanov Christian Herzog]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/aslanov">@aslanov</a> wrote:</p>
          <blockquote>
              <p>fantastic tool, works like a charm, thank you!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728/2</link>
        <pubDate>Fri, 04 Nov 2022 19:24:19 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6728-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728.rss">My small utility to convert WAVs to Table 16b (for convolution)</source>
      </item>
      <item>
        <title>My small utility to convert WAVs to Table 16b (for convolution)</title>
        <dc:creator><![CDATA[@Khorus Marc Girard]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/khorus">@Khorus</a> wrote:</p>
          <blockquote>
              <p>Hello good people of the community,</p>

<p>I just wanted to share with you a small Python utility that I wrote.   It's simple but very useful.   It reads a .WAV file (Mono, 16bit, 48khz) and spits out the first 1024 frames as a list/array that you can simply copy/paste your your table 16b block.   I use it for pre-loading an impulse response without having to fetch it from an SD Card.</p>

<p>Since I can't upload the .py file here, I'll simply copy the copy to a preformatted text box here:</p>

<pre><code>import wave
import tkinter as tk
from tkinter import filedialog, messagebox


def conv_int(num):
    if num &gt; 32768:
        return -(65536 - num)
    else:
        return num


def main():
    root = tk.Tk()
    root.withdraw()

    file_path = filedialog.askopenfilename()
    wave_obj = wave.open(file_path, mode='rb')

    # Is WAV file mono?
    if wave_obj.getnchannels() == 1 and wave_obj.getsampwidth() == 2:

        # Issue warning if not 48khz
        if wave_obj.getframerate() != 48000:
            print('Warning: Sample Rate not 48000.')

        # Issue Warning for too long
        if wave_obj.getnframes() &gt; 1024:
            print('Warning: Impulse WAV file is too long, it will be truncated at 1024 samples.')

        # Print Info
        print(f'WAV File info: {wave_obj.getparams()}\n')

        # Read WAV byte content
        byte_content = wave_obj.readframes(1024)

        # Convert those into 16bit INTs
        list_16bits = [byte_content[i + 1] &lt;&lt; 8 | byte_content[i] for i in range(0, len(byte_content), 2)]

        for index, num in enumerate(list_16bits):
            num = conv_int(num)
            print(f'array[{index}]={num};')

    # WAV file not mono.
    else:
        print('WAV file must be mono/one channel and 16 bit format.')

    messagebox.showinfo(title='Information', message='Done, please copy the output of the console to your table 16b object now.')


main()</code></pre>

<p>Let me know if it useful for you, cheers!</p>

<p>Marc aka  Khorus</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728/1</link>
        <pubDate>Tue, 14 Jul 2020 13:17:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6728-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/my-small-utility-to-convert-wavs-to-table-16b-for-convolution/6728.rss">My small utility to convert WAVs to Table 16b (for convolution)</source>
      </item>
  </channel>
</rss>
