<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Sine bank oscillator</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791</link>
    <description>hi there,

i had an idea for a anti aliased wavetable oscillator, but i would need some guidance/ideas.

basically i created a pd patch that spits out the 32 first harmonics of an arbitrary waveform. (hand drawn or generated) i thought i would save those values in a table and use them in axolotiland like this:

i would create an object with 32 sine oscillators running in the relation to the overtones. so: 

base frequency = oscillator1 
base frequency * 2 = oscillator2 
base frequency * 3 = oscillator3 etc.

with the info of the table i would then adjust the gain of each oscillator. now the clue for anti aliasing!
i would check in the code if the base frequency * x is above nyquist and if it is, i would simply set the gain of that oscillator (and any above) to 0. brilliant, no?

my main questions are, what is the most efficient way to create a 32-sine oscillator with adjustable gain for each oscillator? (a patch with 32 oscillators and 32 math objects takes 30%)

are there any other simpler ways of band limited wavetable playback?

cheers</description>
    
    <lastBuildDate>Thu, 28 Sep 2017 05:31:59 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Sine bank oscillator</title>
        <dc:creator><![CDATA[@Eskadrone Siegmar Kreie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/eskadrone">@Eskadrone</a> wrote:</p>
          <blockquote>
              <p>Strange, indeed. Even with a patch with only the analyser I get a:<br> "xpatch.cpp:50:39: error: invalid conversion from 'int' to 'arm_cfft_radix4_instance_q31*' [-fpermissive]<br> arm_rfft_init_q31(&amp;rfft, 128,0,1);"</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/6</link>
        <pubDate>Thu, 28 Sep 2017 05:31:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3791-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791.rss">Sine bank oscillator</source>
      </item>
      <item>
        <title>Sine bank oscillator</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>thanks for this! i will check it out soon. i could compile the patch even with the analyser, strange...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/5</link>
        <pubDate>Wed, 27 Sep 2017 19:51:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3791-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791.rss">Sine bank oscillator</source>
      </item>
      <item>
        <title>Sine bank oscillator</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Thanks for the report, i reuploaded the patch without the analyzer</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/4</link>
        <pubDate>Wed, 27 Sep 2017 18:01:03 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3791-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791.rss">Sine bank oscillator</source>
      </item>
      <item>
        <title>Sine bank oscillator</title>
        <dc:creator><![CDATA[@Eskadrone Siegmar Kreie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/eskadrone">@Eskadrone</a> wrote:</p>
          <blockquote>
              <p>To get this compiled, I had to delete the spectral analyser object.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/3</link>
        <pubDate>Wed, 27 Sep 2017 16:58:44 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3791-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791.rss">Sine bank oscillator</source>
      </item>
      <item>
        <title>Sine bank oscillator</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Turns out i've already done something like that (but never published it like most of the experiments i did this summer)<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/e/e064b6de5c0c9ae79d7ff5715debbf2fc2a6b131.axp">esperim spectr.axp</a> (7.7 KB)</p>

<p>The object that does the magic is that anonymous patch/object in the bottom side, while the coefficients are generated in the top left side of the patch and stored inside a table. The code is fairly simple and i'll let you study it</p>

<p><strong>Some considerations:</strong><br>1) in order to play more partials i used sine2t[] instead of SINE2TINTERP() to generate the partials, without interpolation. It doesn't sound awful at all and allows to play richer tones. <br>2) coefficient handling is done in k-rate, again for performance considerations. The partials playback is in s-rate and consists just of a for loop that scans from 0 to the highest partial. This means that dsp load is wildly variable (not really great)<br>3) coefficients (amplitudes of the partials) are kept inside an external table. This should allow for a better interaction of other axoloti objects. <br>4) partials are all played at phase 0, so the signal is very likely to clip.</p>

<p>Ask me anything if you need</p>

<p>EDIT: the object in itself is already functional, you should just figure a way to generate the amplitude coefficients and store them inside the table</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/2</link>
        <pubDate>Tue, 26 Sep 2017 16:12:40 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3791-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791.rss">Sine bank oscillator</source>
      </item>
      <item>
        <title>Sine bank oscillator</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>hi there,</p>

<p>i had an idea for a anti aliased wavetable oscillator, but i would need some guidance/ideas.</p>

<p>basically i created a pd patch that spits out the 32 first harmonics of an arbitrary waveform. (hand drawn or generated) i thought i would save those values in a table and use them in axolotiland like this:</p>

<p>i would create an object with 32 sine oscillators running in the relation to the overtones. so: </p>

<p>base frequency = oscillator1 <br>base frequency * 2 = oscillator2 <br>base frequency * 3 = oscillator3 etc.</p>

<p>with the info of the table i would then adjust the gain of each oscillator. now the clue for anti aliasing!<br>i would check in the code if the base frequency * x is above nyquist and if it is, i would simply set the gain of that oscillator (and any above) to 0. brilliant, no?</p>

<p>my main questions are, what is the most efficient way to create a 32-sine oscillator with adjustable gain for each oscillator? (a patch with 32 oscillators and 32 math objects takes 30%)</p>

<p>are there any other simpler ways of band limited wavetable playback?</p>

<p>cheers</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791/1</link>
        <pubDate>Tue, 26 Sep 2017 12:22:16 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3791-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sine-bank-oscillator/3791.rss">Sine bank oscillator</source>
      </item>
  </channel>
</rss>
