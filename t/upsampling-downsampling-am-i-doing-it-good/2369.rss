<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Upsampling / downsampling: am i doing it good?</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369</link>
    <description>My idea was to
1) linearly interpolate between current input sample and preceding one (dividing the interval in N points)
2) &quot;do stuff&quot; for every interpolated value (calculating a polynomial, in my case)
3) sum all the results from all interpolations and divide by N

This actually reduces aliasing a bit, but not really that much, however increasing a lot the dsp load..

Any tips for clevererer techniques?

Edit: also sometimes i fail to understand the discrete math notation (with all those Z[t-1] and stuff), is there someting fairly easy i could read to sort that out? Wikipedia is full of crazy dsp math, but it&#39;s like ancient aramaic to me</description>
    
    <lastBuildDate>Sun, 19 Feb 2017 12:00:23 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Upsampling / downsampling: am i doing it good?</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>I noticed the MI clouds implementation, includes a SR converter</p>

<p>clouds/dsp/sample_rate_converter.h</p>

<p>its used for downsampling and then upsampling... (i.e a pair of converters)  , for each you give it a ratio for conversion, and some filter coefficients.<br>(you can find its usage in the clouds code, when 'low fi' is activated, as this downsamples by 2x)</p>

<p>there is some python code which helps you calculate these co-effecitents, given a bunch of parameters (including sample rate and ratios) </p>

<p>the only thing is, it does appear to be quite expensive in cpu operation.<br>but it still might be interesting to look at</p>

<p>(sorry, I dont know enough about filters/downsampling to tell you what method it uses)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369/3</link>
        <pubDate>Sun, 19 Feb 2017 12:00:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2369-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369.rss">Upsampling / downsampling: am i doing it good?</source>
      </item>
      <item>
        <title>Upsampling / downsampling: am i doing it good?</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>Linear interpolation and moving average do not have great stopband attenuation. For small oversampling ratios, a  polyphase FIR is the most common topology I believe, for high ratios, CIC "Cascading Integrator Comb" filters are more efficient.<br>Here's a <a href="//community.axoloti.com/t/up-downsampling/1950">topic</a> about polyphase FIR with a reference to a test-object doing up-and downsampling, and here's a <a href="//community.axoloti.com/t/pdm-domain-processing/1712">topic</a> with a reference to a CIC downsampling test object.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369/2</link>
        <pubDate>Tue, 11 Oct 2016 00:19:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2369-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369.rss">Upsampling / downsampling: am i doing it good?</source>
      </item>
      <item>
        <title>Upsampling / downsampling: am i doing it good?</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>My idea was to<br>1) linearly interpolate between current input sample and preceding one (dividing the interval in N points)<br>2) "do stuff" for every interpolated value (calculating a polynomial, in my case)<br>3) sum all the results from all interpolations and divide by N</p>

<p>This actually reduces aliasing a bit, but not really that much, however increasing a lot the dsp load..</p>

<p>Any tips for clevererer techniques?</p>

<p>Edit: also sometimes i fail to understand the discrete math notation (with all those Z[t-1] and stuff), is there someting fairly easy i could read to sort that out? Wikipedia is full of crazy dsp math, but it's like ancient aramaic to me</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369/1</link>
        <pubDate>Mon, 10 Oct 2016 22:24:37 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2369-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/upsampling-downsampling-am-i-doing-it-good/2369.rss">Upsampling / downsampling: am i doing it good?</source>
      </item>
  </channel>
</rss>
