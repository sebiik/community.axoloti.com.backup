<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
    <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348</link>
    <description>Is there any way for an object to know (without having to patch something into an inlet) whether it&#39;s been placed inside a polyphonic sub-patch?

I&#39;m working on a couple of objects that won&#39;t really work properly in this setup, so I want them to warn the user in the console if this is the case.

a|x</description>
    
    <lastBuildDate>Mon, 19 Mar 2018 18:05:10 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/lokki">@lokki</a> and I have managed to implement data-sharing between objects, more or less as we want it, now.</p>

<p>I have some (noob) questions about C++, as it relates to Axoloti, specifically, which I'd love some advice on.</p>

<p>What are the relative advantages/disadvantages of the following methods of sharing data within an Axoloti patch?</p>

<ol>
<li>Singleton class</li>
<li>Standard class, instantiated as normal, but with all data members static</li>
<li>Uninstantiated class used as namespace for static members (what we went for)</li>
</ol>

<p>The aim is to have a single point where shared variables are stored, and which can be accessed by any object within the patch (including by objects within sub-patches).</p>

<p>I'm having some issues working out how to create a run-once class method to initialise data members in the last scenario. Any tips?</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/16">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/16</link>
        <pubDate>Mon, 19 Mar 2018 15:34:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-16</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="14" data-topic="4348"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>yes, this is possible too... if the variable is declared  in object A, the objRef will allow you to access it. ObjRef is really nothing more than a link to class instance used for the object. its really got nothing to do with tables... you can also use it to access a pointer (or anything else) that has been declared in another object.</p></blockquote></aside>

<p>OK, that's great!</p>

<p><aside class="quote"><blockquote><p>note: I will say for most users creating object this is not necessary.... </p></blockquote></aside></p>

<p>I think you're right. I was looking through the contrib library just now, and only came across a handful of instances of external C/C++ files being used. Some of the few examples were, like your Push objects, C libraries, rather than C++ classes implementing the bulk of the object's functionality.</p>

<p><aside class="quote"><blockquote><p>its just once things get more complex and you want to start sharing things between objects, need more structure in your code - i think it potentially helps.... <br>but I could be wrong, it might be just the way my head likes to see things.</p></blockquote></aside></p>

<p>I have found myself re-using a few C functions, and I'll definitely be dumping those into an external library, for re-use. I guess there's limited mileage in rolling these functions into into C++ objects, in most cases.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/15">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/15</link>
        <pubDate>Thu, 15 Mar 2018 10:32:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-15</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="12" data-topic="4348"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote>
<p>What I want to do, I think, is to ensure that data copied to SDRAM by Object A is accessible by Object B, even if Object B is inside a sub-patch, and Object A is outside it.</p>
<p>If the sub-patch is polyphonic, I want all 'virtual' instances of the Object B to be able to access the data Object A has placed in SDRAM.</p>
<p>If Object A is also inside the poly sub-patch, I don't want the data to be copied to SDRAM multiple times.</p>
<p>As I understand it, this is where the singleton/factory class come in, because the singleton instance is effectively created in the global scope, and can therefore be access by any object, anywhere in a patch.</p>
</blockquote></aside>

<p>exactly a singleton would allow you to do this..</p>

<p><aside class="quote"><blockquote><p>What I can't get my head around is if it's possible to allow Object B to access the pointer pointing to the SDRAM data copied by Object A in the same way that eg a factory delay object accesses data from a table object- by using the name of the other object in an objRef attribute.</p></blockquote></aside></p>

<p>yes, this is possible too... if the variable is declared  in object A, the objRef will allow you to access it. ObjRef is really nothing more than a link to class instance used for the object. its really got nothing to do with tables... you can also use it to access a pointer (or anything else) that has been declared in another object.</p>

<p>(ok, it has one special syntax trick which is ../ObjRef generates parent.objRef, but that's just syntax)</p>

<p>again if you start creating simple patches, and looking at the generated xpatch.cpp, you'll soon see its a pretty simple mapping, and i guess that's when you start seeing it all just as C++ code</p>

<p>(rather than two individual worlds of axo objects/xml and C++... which yeah, i can see its possibly confusing how the two worlds interact) </p>

<p>note: I will say for most users creating object this is not necessary.... <br>its just once things get more complex and you want to start sharing things between objects, need more structure in your code - i think it potentially helps.... <br><strong>but</strong> I could be wrong, it might be just the way my head likes to see things.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/14">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/14</link>
        <pubDate>Thu, 15 Mar 2018 00:03:42 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-14</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="11" data-topic="4348"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>your missing what i said about using sdram_malloc()/sdram_free() in the other thread -  these have no requirements to use these arrays, nor the declaration syntax - so therefore you can use whatever design you wish (including factory/sington designs)</p></blockquote></aside>

<p>No, I got that bit, and created an object using plain C to dynamically allocate and load from a file to SDRAM.</p>

<p>Downside is that the object will (I assume) load the data multiple times to SDRAM, in a polyphonic sub-patch.</p>

<p>I can fix that using a singleton, as you advised <a class="mention" href="/u/lokki">@lokki</a> to do.</p>

<p><aside class="quote"><blockquote><p>the important point about the above declaration, is the way it uses attr_poly, as this means that the data is size for the correct number of voices, and similarly the polyindex, means the correct voice is used</p></blockquote></aside></p>

<p>Ah, that's a good explanation, thank you!</p>

<p><aside class="quote"><blockquote><p>but those features can be used however the memory is allocated (or not if you wish to share across voices) e.g. you could pass them into methods/constructors</p></blockquote></aside></p>

<p>Ah, I'd love to see an example of what you mean, here.</p>

<p>What I want to do, I think, is to ensure that data copied to SDRAM by <strong>Object A</strong> is accessible by <strong>Object B</strong>, even if <strong>Object B</strong> is inside a sub-patch, and <strong>Object A</strong> is outside it.</p>

<p>If the sub-patch is polyphonic, I want all 'virtual' instances of the <strong>Object B</strong> to be able to access the data <strong>Object A</strong> has placed in SDRAM.</p>

<p>If <strong>Object A</strong> is also inside the poly sub-patch, I don't want the data to be copied to SDRAM multiple times.</p>

<p>As I understand it, this is where the singleton/factory class come in, because the singleton instance is effectively created in the global scope, and can therefore be access by any object, anywhere in a patch.</p>

<p>What I can't get my head around is if it's possible to allow <strong>Object B</strong> to access the pointer pointing to the SDRAM data copied by <strong>Object A</strong> in the same way that eg a factory <em>delay</em> object accesses data from a <em>table</em> object- by using the name of the other object in an objRef attribute.</p>

<p>If this isn't possible, then I'll give up on the idea of a separate Loader object, and just roll the Loader into the Reader. If possible though, I'd like to be consistent with the standard way of doing things.</p>

<p><aside class="quote"><blockquote><p>ps. small tech note, if when using c++ just be careful if you start using new/delete, this will use a default allocator, which is id assume is not sdram ... though it would be possible to create custom allocators, but that's getting advanced, so not going down that route</p></blockquote></aside></p>

<p>Do you mean the objects will be created in SRAM, rather than SDRAM? That's OK, I think, as long as my class instances can still allocate SDRAM, and load data to it.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/12">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/12</link>
        <pubDate>Wed, 14 Mar 2018 21:42:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-12</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>your missing what i said about using sdram_malloc()/sdram_free() in the other thread -  these have no requirements to use these arrays, nor the declaration syntax - so therefore you can use whatever design you wish (including factory/sington designs)<br> p.s  they also use void pointers, so are a bit clearer on the casting requirements.</p>

<p>btw; the important point about the above declaration, is the way it uses attr_poly, as this means that the data is size for the correct number of voices, and similarly the polyindex, means the correct voice is used ... but those features can be used however the memory is allocated (or not if you wish to share across voices) e.g. you could pass them into methods/constructors</p>

<p>again, all depends on what your trying to achieve.</p>

<p>ps. small tech note, if when using c++ just be careful if you start using new/delete, this will use a default allocator, which is id assume is not sdram ... though it would be possible to create custom allocators, but that's getting advanced, so not going down that route <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/11">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/11</link>
        <pubDate>Wed, 14 Mar 2018 21:37:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-11</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Thanks <a class="mention" href="/u/thetechnobear">@thetechnobear</a>, that all sounds like great advice, and it's much appreciated.</p>

<p>I'll admit, I know nothing about C++, but now would seem like a good time to pick up the basics, so your advice is very useful.</p>

<p>To get back to specifics, though, if I need to create an object that loads data to SDRAM, which can potentially be read by objects inside a polyphonic sub-patch, and where the 'reading' objects reference the 'Loader' object outside the sub-patch by its assigned object name, what are my options?</p>

<p>Is the <em>only</em> way to do this to follow the method used in the factory table and table-reader objects?</p>

<p>Using something like this:</p>

<p><code>static int16_t _array[attr_poly][LENGTH] __attribute__ ((section (".sdram")));<br>array = &amp;_array[parent-&gt;polyIndex][0];</code></p>

<p>That method seems to preclude using a singleton or factory loader class .</p>

<p>It's probably an edge-case, where my objects will be used polyphonically, but as you way, you never know how your objects are going to be used, once they're released into the wild.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/10">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/10</link>
        <pubDate>Wed, 14 Mar 2018 20:54:10 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-10</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>design, all depends what you are trying to achieve ...</p>

<p>whilst i mentioned the singleton pattern, because its the simplest, I often use variations on this , e.g. factory patterns , which are kind of related.</p>

<p>an example... say you want a set of wavetables accessed by a name, you can create classes that look like<br>Wavetable.get("wavetable1.wav").play(iobuf,pos);</p>

<p>which would for the first invocation, load the wav file, and then play it, and on subsequent calls, would use the loaded data.... this is basically a singleton (Wavetable object) using a factory pattern.</p>

<p>(note: im not saying this is a good idea, since id recommend against loading a file in the audio thread , but even this can be avoided ,with a bit of clever coding) </p>

<p>p.s. Im not a huge fan of patterns, but they are pretty good for newer programmers for inspiration, and also a way to communicate ideas using a single word... but just remember, like music theory, great to know the rules, and then bend and break them <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> </p>

<p>I think more fundamentally, once you get into writing more complex objects in C++, I think its easier to forget Axoloti objects, and just start writing C++ code, and then just use Axo objects to glue this code into the patcher.</p>

<p>you say:<br></p>

<aside class="quote" data-post="3" data-topic="4348"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>doesn't really make sense to have in a poly sub-patch (in the same way that the 'tables/alloc 16bt sdram' object doesn't, really)</p></blockquote></aside>

<p>well this is not quite true, for some patches you do want to allocate tables per voice, e.g. if you were doing some kind of per voice delay line - ok, this is a made up (possibly useless <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> ) example... but the point is, with patching often you dont know what crazy use another user might have in mind.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/9">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/9</link>
        <pubDate>Wed, 14 Mar 2018 18:52:14 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-9</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>thanks! figured it out (somebody whispered it to me <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> )</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/8">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/8</link>
        <pubDate>Wed, 14 Mar 2018 14:36:30 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-8</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>4-bytes:</p>

<pre><code>uint32_t *ptr_test_pointer = NULL;
LogTextMessage("Pointer size = %d", sizeof(&amp;ptr_test_pointer));

Pointer size = 4</code></pre>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/7">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/7</link>
        <pubDate>Wed, 14 Mar 2018 14:10:47 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-7</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I'd assumed 32-bits, but maybe I'm wrong.</p>

<p>Can you do?</p>

<p><code>sizeof(&amp;my_pointer);</code></p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/6">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/6</link>
        <pubDate>Wed, 14 Mar 2018 14:02:01 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-6</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>on a related note, what is the size of a pointer in axoloti? is it uint64_t e.g. 8bytes?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/5">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/5</link>
        <pubDate>Wed, 14 Mar 2018 13:58:53 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-5</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>What's the recommended approach to make a poly-safe file-loader object for a file of arbitrary size?</p>

<p><a class="mention" href="/u/lokki">@lokki</a> was investigating the possibility of having a poly-safe pointer to a chunk of data in SDRAM dynamically allocated with malloc.</p>

<p>I guess you'd use your suggested singleton object method to make sure the data was only copied to SDRAM once.</p>

<p>Downside would be that that would preclude loading more than one file, even when multiple instances of the object were used. Or am I incorrect on that?</p>

<p>Would that potentially work?</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/4">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/4</link>
        <pubDate>Wed, 14 Mar 2018 10:38:55 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-4</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I'll investigate. Might be worth adding that in a future firmware.</p>

<aside class="quote" data-post="2" data-topic="4348"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>but its not really advisable, the best approach is actually to design the object to work in subpatch/poly context, as you never quite know what the end user has in mind</p></blockquote></aside>

<p>That's true. On the other hand, this particular object just doesn't really make sense to have in a poly sub-patch (in the same way that the 'tables/alloc 16bt sdram' object doesn't, really), and will end up filling up SDRAM with duplicate data if used in a sub-patch.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/3</link>
        <pubDate>Wed, 14 Mar 2018 10:36:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-3</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>probably not easily/effectively ... by design, sub patches are really just 'patches', no different from the main patch.</p>

<p>you probably could play with 'parents' to determine it for one level deep <br>e.g. something like if(parent_.=&amp;rootc) log("in top patch") </p>

<p>i think there is a voice count as well, if you are more worried about the polyphony than the sub patch... you'd need to look at the xpatch.cpp to see whats there.<br>(it might be you can only create a compiler error, depending on how things are done)</p>

<p>but its not really advisable, the best approach is actually to design the object to work in subpatch/poly context, as you never quite know what the end user has in mind <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/2</link>
        <pubDate>Wed, 14 Mar 2018 10:33:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-2</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
      <item>
        <title>Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Is there any way for an object to know (without having to patch something into an inlet) whether it's been placed inside a polyphonic sub-patch?</p>

<p>I'm working on a couple of objects that won't really work properly in this setup, so I want them to warn the user in the console if this is the case.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348/1</link>
        <pubDate>Wed, 14 Mar 2018 09:44:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4348-1</guid>
        <source url="http://community.axoloti.com/t/object-knowing-if-its-inside-a-polyphonic-sub-patch/4348.rss">Object Knowing If It&#39;s Inside a Polyphonic Sub-Patch?</source>
      </item>
  </channel>
</rss>
