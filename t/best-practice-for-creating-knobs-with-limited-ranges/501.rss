<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Best practice for creating knobs with limited ranges</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501</link>
    <description>The default P Knob is always 0-64 value output. This range then binds to an assigned controller like a midi knob. If I need to work with a much smaller range (for example 22) should I patch together a logic network to bind the full range of a knob to these values or is there a simpler way to quantize all of the values into the needed range?</description>
    
    <lastBuildDate>Thu, 22 Dec 2016 11:12:20 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Best practice for creating knobs with limited ranges</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>using *c is one way...<br>the other approach I use is just using bit shifting, when its a multiple of 2. (which I find is very often the case). I use this, as its simply more efficient (i.e. lower cpu load) </p>

<p>also look at oneliner_k, this allows you to enter an 'equation' to convert the inlet to outlet, and has a 'dial' to feed into the 'equation'. </p>

<p>with axoloti, there are many different ways to solve these kind of problems. <br>if your not trying to squeeze the last bit of performance out of axoloti, then often any of them will work.</p>

<p>you can use sub-patches (or custom objects, advanced use <img src="//community.axoloti.com/images/emoji/emoji_one/wink.png?v=3" title=":wink:" class="emoji" alt=":wink:">) , if you wish to create a dial that has this built in.</p>

<p>what you cannot do, is to change the way the UI works, i.e dials have to run 0..64, or -64..64.<br>this is because the dials are rendered in the axoloti java UI, so cannot be changed by patching.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/6</link>
        <pubDate>Thu, 22 Dec 2016 11:12:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-501-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501.rss">Best practice for creating knobs with limited ranges</source>
      </item>
      <item>
        <title>Best practice for creating knobs with limited ranges</title>
        <dc:creator><![CDATA[@reinhard Reinhard]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/reinhard">@reinhard</a> wrote:</p>
          <blockquote>
              <p>hey there , i want to make a midi controller for mssiah (c64) and already <br>connected everything and paste it in patcher with inlet .<br>There are all cc messages but some have limitations and some cc numbers <br>start from 1till 4 like for example slide .<br>wich i can't figure out how to start …or how to do best ?<br>what i have till now is that i do limitations with math/+c for end values…<br>like cc7 patch volume is 0-15 than i will do it like (math/+c 7,5 ) <br>because 0/127 original cc values is this correct ? <br>i would like to add later control dial and find a way to save patches and control further …Thanx in advance greets Reinhard</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/5</link>
        <pubDate>Thu, 22 Dec 2016 01:55:07 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-501-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501.rss">Best practice for creating knobs with limited ranges</source>
      </item>
      <item>
        <title>Best practice for creating knobs with limited ranges</title>
        <dc:creator><![CDATA[@anon5189335]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/anon5189335">@anon5189335</a> wrote:</p>
          <blockquote>
              <p>Here is a picture of a way to do it:<br><img src="//community.axoloti.com/uploads/default/original/1X/0f2931f405d5dbdad827c6799dc57b6214853d4d.png" width="624" height="500"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/4</link>
        <pubDate>Sat, 26 Sep 2015 18:24:36 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-501-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501.rss">Best practice for creating knobs with limited ranges</source>
      </item>
      <item>
        <title>Best practice for creating knobs with limited ranges</title>
        <dc:creator><![CDATA[@alexk alex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/alexk">@alexk</a> wrote:</p>
          <blockquote>
              <p>pretty cool, gonna try it. I ended up using the denominator division and then some less, greater gates. but it isn't exact enough.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/3</link>
        <pubDate>Sat, 26 Sep 2015 15:09:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-501-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501.rss">Best practice for creating knobs with limited ranges</source>
      </item>
      <item>
        <title>Best practice for creating knobs with limited ranges</title>
        <dc:creator><![CDATA[@JSZ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jsz">@JSZ</a> wrote:</p>
          <blockquote>
              <p>I do it this way: set the dial to 0, followed by *c also at 0. + it with another dial that sets the minimum value for the sum. Set the original dial to maximum, open the *c until at desired maximum value. Then don't touch the another dial and *c anymore.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/2</link>
        <pubDate>Sat, 26 Sep 2015 15:01:40 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-501-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501.rss">Best practice for creating knobs with limited ranges</source>
      </item>
      <item>
        <title>Best practice for creating knobs with limited ranges</title>
        <dc:creator><![CDATA[@alexk alex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/alexk">@alexk</a> wrote:</p>
          <blockquote>
              <p>The default P Knob is always 0-64 value output. This range then binds to an assigned controller like a midi knob. If I need to work with a much smaller range (for example 22) should I patch together a logic network to bind the full range of a knob to these values or is there a simpler way to quantize all of the values into the needed range?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501/1</link>
        <pubDate>Sat, 26 Sep 2015 14:46:55 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-501-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/best-practice-for-creating-knobs-with-limited-ranges/501.rss">Best practice for creating knobs with limited ranges</source>
      </item>
  </channel>
</rss>
