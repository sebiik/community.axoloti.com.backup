<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>TheSlowGrowth contributions</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959</link>
    <description>Forum profile : @TheSlowGrowth
Contributor prefix: TSG

## TSG/dist/
* [diodeSat](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/28?u=theslowgrowth) - a classic diode saturation, modelled after a circuit found in many guitar stompboxed and &quot;tape saturation&quot; effects

##TSG/ctrl/
* [potDemux 3](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/28?u=theslowgrowth) - uses one potentiometer to control three values. Including noise cancellation and different modes of operation (overwrite, pickup, scale)

## TSG/delay/

* [read m interp](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/2?u=theslowgrowth) - delayline reader with modulation input and configurable interpolation quality.

## TSG/fx/

* [reverb](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/3?u=theslowgrowth) - a lush lexicon-style diffuse reverb (30% CPU)
* [reverb cheap](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/3?u=theslowgrowth) - cheap version of the lexicon-style diffuse reverb (18% CPU)
* [tapedelay](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/10?u=theslowgrowth) - syncable stereo tape-delay with many parameters (13% CPU)

## TSG/logic/
* [d flipflop](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/8?u=theslowgrowth) - a simple d flipflop

## TSG/filter/

* [allpass m](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/4?u=theslowgrowth) - Schroeder allpass (diffusion delay) with modulation input and configurable memory position &amp; interpolation

## TSG/math/

* [limit](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/14?u=theslowgrowth) - limits a value to a upper and lower bound
* [map](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/5?u=theslowgrowth) - maps 0..64 to a..b
* [map b](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/5?u=theslowgrowth) - bipolar cousin of `map`

## TSG/patch/
* [modsource auto](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/15?u=theslowgrowth) - a version of /patch/modsource that automatically updates its value when it changes.
* [numVoices](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/27?u=theslowgrowth) - outputs the number of voices in a subpatch
* [polySpread](https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/27?u=theslowgrowth) - outputs a value between -64 and 64, depending on the current voice (pan spread, unison detuning, etc!)</description>
    
    <lastBuildDate>Wed, 25 Aug 2021 22:48:33 +0000</lastBuildDate>
    <category>Community Library</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@thousandparadox Gabriel Maria]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thousandparadox">@thousandparadox</a> wrote:</p>
          <blockquote>
              <p>Thanks for MultiPot3! I'm just using the pot deadband feature right now to clean up my physical controls. For example the jitter of my pots caused the audio to crackle constantly when used to control volume, even though my controls are filtered and only jitter +-0.05 points.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/45">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/45</link>
        <pubDate>Wed, 25 Aug 2021 22:48:33 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-45</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@MHScoring Marvin Hartmann]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mhscoring">@MHScoring</a> wrote:</p>
          <blockquote>
              <p>Hey, apparently this part of the community library is missing in my folder... <img src="//community.axoloti.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"> Is there a way to download these tools - I am sorry, if the answer is obvious but I haven't seen a download link or something like this - thx</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/44">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/44</link>
        <pubDate>Thu, 25 Oct 2018 15:40:03 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-44</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>I did some modifications to  <code>TSG/delay/read m interp</code>: It now interpolates the input signals, so that removes any stepping from the modulation and drastically reduces noise at the expense of a tad higher CPU load.</p>

<p>I also added a phase output to the <code>TSG/fx/tapedelay</code>. It ramps from 0..64 in sync with the delay and you can use it to blink LEDs. Take a look at the help patch. Basically you only have to compare it to a fixed value (e.g. with <code>math/&gt;c</code>) to get a boolean signal that is in sync with the delay.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/42">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/42</link>
        <pubDate>Thu, 31 May 2018 22:41:42 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-42</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel BÃ¼ring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>How about this one? It seems to work, and handles 0-4096. There are probably cheaper ways to do this, so more help is appreciated, but this did the trick for me with the delay.</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/f/f5306eeb57bde1b7a19efaa113d60071c66b6600.axp">Integer to Krate conversion.axp</a> (3.9 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/41">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/41</link>
        <pubDate>Mon, 09 Apr 2018 20:51:42 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-41</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>I think the issue might be that the integer value exceed the krate range it is send to and therefor it goes into minus. You cannot send values higher than 1023 from integer to krate, it won't work, so you have to add an extra step of bitshifting.I am kind of assuming the value you are sending is higher than 1023, since you have this issue.</p>

<p>Been working on another module where this was an issue and I came up with this solution:<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/f/f27e8fb972f61e5d73778cd68feeb18904e81705.axp">Integer to Krate conversion.axp</a> (4.5 KB)</p>

<p>You have to to the shifting in 2 steps. First bitshift the &gt;&gt;6 when the value is still integers. And then second do a &lt;&lt;21 bitshift to get it into krate range. Now I get the right result, at least up to 4096.</p>

<p>Anyway, try it out, let me know if it works.</p>

<p>UPDATE 1: ohh not sure that works, cause it rounds the number to whole numbers...... Illtake a look in the patch where I have it working.</p>

<p>UPDATE 2:<br>Try this one. See patch for explanation.<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/0/0fd43768c711e5d3382bb4929dede7c8b9634ad2.axp">Integer to Krate conversion Updated.axp</a> (14.9 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/40">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/40</link>
        <pubDate>Mon, 09 Apr 2018 09:12:24 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-40</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel BÃ¼ring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>No, it's much shorter than that, as I said, about .3secs (i can get much longer delays using the manual time ctrl).<br>The problem really is with the conversion from integer to f-rate by bitshift, as described in my first post. The MWE below is a `take-out miniature' from your echo object: the i-value goess from 15.58 to -16 when the input goes from 1023 to 1024. I'm sure there's an easy fix for this, so the i-value continues to go to 16 and up, i am just not the one to find it....</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/e/e3b97e6c77835be77be9c86ff69716e4e21612f9.axp">i to f.axp</a> (3.1 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/39">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/39</link>
        <pubDate>Mon, 09 Apr 2018 08:41:19 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-39</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="37" data-topic="2959"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/90db22/40.png" class="avatar">TheSlowGrowth:</div>
<blockquote><p>The lookup table is defined in the resources.h file that comes with the object. It is stored as const int32_t and will sit in the flash memory (because its const). It shouldn't take up any RAM at all.</p></blockquote></aside>

<p>Cool, thank you for the clarification. I wasn't 100% sure how it was handled memory vise, but that makes sense <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/38">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/38</link>
        <pubDate>Sun, 08 Apr 2018 19:57:40 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-38</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="34" data-topic="2959"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/c/90db22/40.png" class="avatar">Captain_Burek:</div>
<blockquote><p>Below a certain bpm (~180 or so)</p></blockquote></aside>

<p>How long is the delay time you want to get (in seconds, roughly)? Because the delay buffer itself is only 1.36s and can't go longer than that atm. Yould it be that you're exceeding this?</p>

<aside class="quote" data-post="31" data-topic="2959"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/j/7ea924/40.png" class="avatar">jaffasplaffa:</div>
<blockquote>
<p>By looking at it, it seems like it is using SRAM?</p>
<p>May I suggest creating a version that uses SDRAM instead?</p>
</blockquote></aside>

<p>The lookup table is defined in the resources.h file that comes with the object. It is stored as <code>const int32_t</code> and will sit in the flash memory (because its const). It shouldn't take up any RAM at all.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/37">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/37</link>
        <pubDate>Sun, 08 Apr 2018 19:56:04 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-37</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel BÃ¼ring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>My thinking exactly, but no dice. The number goes up again from -16 to 0...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/36">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/36</link>
        <pubDate>Sun, 08 Apr 2018 15:22:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-36</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@valmir]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/valmir">@valmir</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/theslowgrowth">@TheSlowGrowth</a> surely knows better, but maybe just adding an math/abs could be an easy fix?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/35">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/35</link>
        <pubDate>Sun, 08 Apr 2018 09:53:52 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-35</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel BÃ¼ring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>Hi there TSG,<br>love your delay, but i have a problem with external syncing. Below a certain bpm (~180 or so), the output of your timer (timeri_1) goes &gt;1024 (as it should), which after the &gt;&gt;6 shift goes to a negative number, i.e. -16 instead of 16. The result is of course that slow echos become random. I don't know enough about bitshifting to remedy that, but obviously the k-rate for the read time should go to 16 and up, at that point. Any idea how to fix that, by chance?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/34">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/34</link>
        <pubDate>Sat, 07 Apr 2018 23:10:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-34</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="32" data-topic="2959" data-full="true"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/smashedtransistors/40/3147_1.png" class="avatar">SmashedTransistors:</div>
<blockquote><p>I think that's the same thing for all objects. <br>If you need feedback without this delay, you have to code it into the object.</p></blockquote></aside>

<p>Okay cool, then it makes sense why I had the issue with karplus strong. I was patching it first and then wanted to code it later on. I think I'll just try to code it then. Thanks <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/33">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/33</link>
        <pubDate>Mon, 02 Apr 2018 09:15:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-33</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>I think that's the same thing for all objects. <br>If you need feedback without this delay, you have to code it into the object.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/32">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/32</link>
        <pubDate>Mon, 02 Apr 2018 09:00:37 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-32</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Hey <a class="mention" href="/u/theslowgrowth">@TheSlowGrowth</a> </p>

<p>Just wanted to add a few comments/suggestion to the diode saturation. </p>

<p>Which is <strong>very</strong> excellent btw <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> </p>

<p>The question is about the lookup table. By looking at it, it seems like it is using SRAM?</p>

<p>May I suggest creating a version that uses SDRAM instead?</p>

<p>I did look into it myself, but wasn't really sure where to start. It would be really nice to free up some SRAM, cause it seems like it uses a bunch, like 962 "samples" of SRAM.</p>

<p>Anyway, just thought I'd suggest it. Happy Easter and this is NOT an aprils fools joke <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/31">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/31</link>
        <pubDate>Sun, 01 Apr 2018 18:20:21 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-31</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="24" data-topic="2959"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/smashedtransistors/40/3147_1.png" class="avatar">SmashedTransistors:</div>
<blockquote><p>Note that there is an implicit 16 sample delay in the feedback. That's mainly why i failed to implement proper all passes with objects.</p></blockquote></aside>

<p>Hey <a class="mention" href="/u/smashedtransistors">@SmashedTransistors</a></p>

<p>Is this for your parch only, the 16 samples delay or is this for all Axoloti patches?</p>

<p>Have been trying to mke a Karplus strong, but I am also hitting a limit when I try to make the delay time really short, it seems like it won't go all the way to 1 sample delay. </p>

<p>In Pure Data, you have to set a new block size for 1 sample, instead of the standard 64 samples to be abel to make 1 sample deay.  kind of just figured it was about the same issue as in PD but never really got around to try to fix it.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/30">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/30</link>
        <pubDate>Sun, 01 Apr 2018 06:41:25 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-30</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@damonp Damon Palyka]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/damonp">@damonp</a> wrote:</p>
          <blockquote>
              <p>I love this delay!<br>Thank you!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/29">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/29</link>
        <pubDate>Fri, 30 Mar 2018 18:40:18 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-29</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <h1>TSG/dist/diodeSat</h1>

<p>A simple diode saturation circuit with a lot of gain. This circuit appears in many classic guitar overdrive boxes (e.g. MXR Distortion) and is also used to <a href="https://www.diyrecordingequipment.com/products/15ips-colour" rel="nofollow noopener">mimic the saturation characteristics of tape</a>. <br><a href="//community.axoloti.com/t/modelling-analog-circuits-in-software/4013">See here for details.</a></p>

<h1>TSG/ctrl/potDemux 3</h1>

<p>Can be used to control three parameters with a single potentiometer. It can easily be modified to have more outputs (layers), if required.<br>The object has some features that the other solutions don't have:</p>

<ol>
<li>Noise cancellation. Due to noise in the measurement, there can be value changes even if the potentiometer is not physically touched or turned. That's why I wrote the object so that after some time of inactivity, the pot has to be turned by a certain amount before new changes will be registered. This "deadband" is configurable. (This is a very common method used in many devices)</li>
<li>You can load initial values (patch changes for example) with a trigger pulse</li>
<li>The potentiometer response is configurable: After changing the layer, the corresponding output will be updated<br><strong>A)</strong> to the current poti value, immediately when the poti is touched (overwrite mode)<br><strong>B)</strong> to the current poti value, after the poti has passed the current value of the output (pickup mode)<br><strong>C)</strong> so that the remaining travel of the potentiometer spans all the remaining travel of the value (scale mode). Please note that scale mode assumes your input value will be between 0 and 64.</li>
</ol>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/28">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/28</link>
        <pubDate>Thu, 14 Dec 2017 15:38:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-28</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <h1>TSG/patch/numVoices</h1>

<p>A simple object that outputs nothing but the number of voices in the subpatch. I was surprised to find that this isn't there yet.</p>

<h1>TSG/patch/polySpread</h1>

<p>This object outputs a value between -64 and +64, depending on the voice number. The range is evenly spread across the voices.<br>For 3 voices the output would be:</p>

<pre><code>Voice:   1     2    3   
Output:  -64   0    +64</code></pre>

<p>For 5 voices it would be</p>

<pre><code>Voice:   1     2    3    4    5
Output:  -64  -32   0   +32  +64</code></pre>

<p>This is really useful to create a spread for stacking voices in unison or simply for creating some differences between voices in a polysynth. You can use the <code>math/*c</code> object to adjust the amount of spreading.<br>When the random distribution is selected, the possible values will distributed randomly across the voices when the patch loads. This helps a lot when you want to use spreading in different places around a patch (Without it, voice 1 will receive the lowest possible value everywhere, which is stupid).</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/27">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/27</link>
        <pubDate>Fri, 15 Sep 2017 20:18:03 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-27</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@aclaiman AndrÃ©s Claiman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/aclaiman">@aclaiman</a> wrote:</p>
          <blockquote>
              <p>Hi!<br>I really need a map with inlets to modify a and b from outside the object.<br>Is it posible to do?</p>

<p>Thanks!!!</p>

<p>AndrÃ©s</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/26">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/26</link>
        <pubDate>Thu, 20 Apr 2017 14:29:35 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-26</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Ah great, I'll use that for my experiments! The implicit 16 sample delay won't hurt. At this point in the signal chain, there needs to be an additional delay anyway. And delay times in my reverb experiments were between 30ms and 180ms so +0,33ms doesn't change the picture much.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/25">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/25</link>
        <pubDate>Wed, 19 Apr 2017 19:09:41 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-25</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>Hi, <a class="mention" href="/users/theslowgrowth">@TheSlowGrowth</a> </p>

<p>Some time ago, i coded a small "helper" object that helps to make Schroeder feedback/feedforward noodles with limited headache. (i used it for "chorusing" delays)</p>

<p>It's in community/tiar/fx/APNoodle</p>

<p>It has two inlets and two outlets:<br></p>

<p></p><pre><code class="lang-auto">       inlets                        outlets
from delay (v) ------------- + ----&gt; (y) output
                    |        ^
                    |        |
                   *+g      *-g
                    |        |
                    V        |
     input (x) ---- + -------------&gt; (u) to delay</code></pre>

<p>which can be seen as:<br></p>

<p></p><pre><code class="lang-auto">        /-----------&lt; * g &lt;----------\  Feedback
        |                            |
        V                            |
(x)---- + -----&gt;(u)             (v)----- + --&gt;(y)
            |                            ^
            |                            |
            \----------&gt; * -g &gt;----------/  Feedforward</code></pre>

<p>u and v have to be connected to an external delay line:<br></p>

<p></p><pre><code class="lang-auto">        /--------------- *+g --------------\
        |                                  |
        V          implicit                |
(x)---- + ---&gt;(u) -&gt; Z-16 -&gt; delay -&gt; (v)----- + --&gt;(y)
           |         delay                     ^
           |                                   |
           \--------------- *-g ---------------/</code></pre>

<p>In the editor it looks like:<br><img src="//community.axoloti.com/uploads/default/original/2X/4/442f629ae09248b256ce97ce0af5aa495214eca7.PNG" width="537" height="117"></p>

<p>Note that there is an implicit 16 sample delay in the feedback. That's mainly why i failed to implement proper all passes with objects.</p>

<p>Maybe you can use APNoodle to experiment with nested all passes before hardcoding and optimizing <img src="//community.axoloti.com/images/emoji/emoji_one/smiley.png?v=3" title=":smiley:" class="emoji" alt=":smiley:"></p>

<p></p><pre><code class="lang-auto">        /-------------------- *+g --------------------\
        |                                             |
        V          implicit           nested          |
(x)---- + ---&gt;(u) -&gt; Z-16 -&gt; delay -&gt; allpass -&gt; (v)----- + --&gt;(y)
           |                                              ^
           |                                              |
           \--------------------- *-g --------------------/</code></pre>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/24">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/24</link>
        <pubDate>Wed, 19 Apr 2017 18:28:10 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-24</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>It is possible to do it with the existing objects but in this case it is not easy to take care of the implicit 16 sample delay in the feedback loop...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/23">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/23</link>
        <pubDate>Wed, 19 Apr 2017 01:04:40 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-23</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Yes, nested all passes are on my to do list. The benefit would be that only one of the two delay lines really needs to be interpolated (that's the part that's most cpu intensive). The other can be a simple z^-x delay and it would (hopefully) still give enough blurring to be a good cpu light replacement for two series allpasses. That's my hope, anyway.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/22">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/22</link>
        <pubDate>Fri, 14 Apr 2017 17:13:44 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-22</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>Thanks <a class="mention" href="/users/theslowgrowth">@TheSlowGrowth</a>, the allpass m and map objects are really great and useful <img src="//community.axoloti.com/images/emoji/emoji_one/control_knobs.png?v=3" title=":control_knobs:" class="emoji" alt=":control_knobs:"></p>

<p>By the way, did you tried to implement <a href="https://valhalladsp.com/2009/05/30/schroeder-reverbs-the-forgotten-algorithm/">nested all pass filters</a>. I used them in some of my JSFX plugins and they were quite efficient for "ensemble effects".</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/21">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/21</link>
        <pubDate>Thu, 13 Apr 2017 23:13:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-21</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
      <item>
        <title>TheSlowGrowth contributions</title>
        <dc:creator><![CDATA[@rbrt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/rbrt">@rbrt</a> wrote:</p>
          <blockquote>
              <p>...nevermind,I believe there are a lot of functional duplicates...<br>and vice versa,probably also some objects with the same name but different functionality<br>I almost added a 'scale f' (which already exists but works quite differently)..<br>so it's 'scale' now..</p>

<p>you do max/msp as well ? because your object reminds me of some more I did that <br>pick up max's concept of 'bang'<br>interestingly,your object is using quite a different approach but also needs 8 CPU-cycles..</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/20">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959/20</link>
        <pubDate>Wed, 08 Mar 2017 23:25:29 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2959-20</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/theslowgrowth-contributions/2959.rss">TheSlowGrowth contributions</source>
      </item>
  </channel>
</rss>
