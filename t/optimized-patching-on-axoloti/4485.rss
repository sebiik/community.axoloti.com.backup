<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Optimized patching on Axoloti!</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485</link>
    <description>Hey

I was wondering about a few things when patching in Axoloti, regarding best practice. I am not concluding anything here just asking a few question, cause I want to make sure I understand it correctly, so I can do the right things to optimize my patching.

1. Objects are classes?
Is my understanding right that when I create a new object I basically create a new class?

2. Reusing same object/classes reuses the code and saves memory/DSP?

3. How does the patcher differentiate objects?
a.
II have to identical objects, but they are embedded. In this case does the patcher regards them as separate objects/classes, since they are embedded?
b.
I use a NOT embedded object and loads the same exact object with same sha etc. 2 times.

Are there any difference in DSP/memory use in the 2 cases, embedded/not embedded?

I started to think about it, cause I am making an object where I need 4 of the same objects, but they all need a different offset. I could simply just make the offset as a variable, so you can set it manually. this will use the same object X times. But I thought about making the offsets inside the objects and instead save 4 different, separate objects....... 

Which lead me to the question &gt; When they are regarded as separate objects, being embedded, with their own ID, do Axoloti reuse the code cause its the same code?........ or does it reuse the code based on names or ID&#39;s?

I am wondering if there is a performance difference in those cases, embedded not embedded? Or if copying the same object with the same ID 4 times uses same memory/DSP same as creating 4 of the same object with 4 different ID&#39;s?

So I thought I&#39;d swing it by the experts :) 

Have a nice Sunday :)</description>
    
    <lastBuildDate>Sun, 22 Apr 2018 22:31:39 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Optimized patching on Axoloti!</title>
        <dc:creator><![CDATA[@DrJustice]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/drjustice">@DrJustice</a> wrote:</p>
          <blockquote>
              <p>Ah, yes, makes sense that it happens at least on the voice level, or you'd soon run out of SRAM. It doesn't make any difference for jaffasplaffa's questions though - i.e. memory efficiency within a patch.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/5</link>
        <pubDate>Sun, 22 Apr 2018 22:31:39 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4485-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485.rss">Optimized patching on Axoloti!</source>
      </item>
      <item>
        <title>Optimized patching on Axoloti!</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>As far as i understood,  actual multiple C++ instances only appear in patchers in polyphonic mode.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/4</link>
        <pubDate>Sun, 22 Apr 2018 21:12:41 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4485-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485.rss">Optimized patching on Axoloti!</source>
      </item>
      <item>
        <title>Optimized patching on Axoloti!</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/drjustice">@DrJustice</a> <br>Thank you for the detailed answer, that makes a sense <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>I'll check out that file and see if I can make any sense of it .  </p>

<p>So not much to save on that account. Anyway, just ordered an extra Axoloti today as a birthday present for myself <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Yay. An extra board give a little bit extra DSP "headroom", so I'll save my worries for later <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/3</link>
        <pubDate>Sun, 22 Apr 2018 20:27:16 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4485-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485.rss">Optimized patching on Axoloti!</source>
      </item>
      <item>
        <title>Optimized patching on Axoloti!</title>
        <dc:creator><![CDATA[@DrJustice]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/drjustice">@DrJustice</a> wrote:</p>
          <blockquote>
              <p>1 - Objects are indeed classes, or rather they become classes in the strict C++ sense when the patch is built (as in going live) or loaded as an already built patch from the SD card.</p>

<p>2 - When a patch is being built, each instance of the same axo object (sharing uuid/sha) is being built as unique C++ classes. That means there is nothing to save by using the same axo object several times in a patch, as opposed to using similar objects with different uuid/sha.</p>

<p>What happens is that if you have an axo object called "foo" and place two of them in a patch, the generated C++ code will have two distinct classes "instance_foo___1" and "instance_foo___2".</p>

<p>3 - Same for this case. Each instance of an object in a patch, whether embedded or not becomes a distinct C++ class.</p>

<p>You can gleam things like this by looking at build/xpatch.cpp in the Axoloti home directory after the patch is built. I'm not sure why it's done like this. Haven't really thought about it, but I bet there's a good reason. Perhaps Johannes can fill  us in on that?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/2</link>
        <pubDate>Sun, 22 Apr 2018 18:37:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4485-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485.rss">Optimized patching on Axoloti!</source>
      </item>
      <item>
        <title>Optimized patching on Axoloti!</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Hey</p>

<p>I was wondering about a few things when patching in Axoloti, regarding best practice. I am not concluding anything here just asking a few question, cause I want to make sure I understand it correctly, so I can do the right things to optimize my patching.</p>

<ol>
<li><p>Objects are classes?<br>Is my understanding right that when I create a new object I basically create a new class?</p></li>
<li><p>Reusing same object/classes reuses the code and saves memory/DSP?</p></li>
<li><p>How does the patcher differentiate objects?<br>a.<br>II have to identical objects, but they are embedded. In this case does the patcher regards them as separate objects/classes, since they are embedded?<br>b.<br>I use a NOT embedded object and loads the same exact object with same sha etc. 2 times.</p></li>
</ol>

<p>Are there any difference in DSP/memory use in the 2 cases, embedded/not embedded?</p>

<p>I started to think about it, cause I am making an object where I need 4 of the same objects, but they all need a different offset. I could simply just make the offset as a variable, so you can set it manually. this will use the same object X times. But I thought about making the offsets inside the objects and instead save 4 different, separate objects....... </p>

<p>Which lead me to the question &gt; When they are regarded as separate objects, being embedded, with their own ID, do Axoloti reuse the code cause its the same code?........ or does it reuse the code based on names or ID's?</p>

<p>I am wondering if there is a performance difference in those cases, embedded not embedded? Or if copying the same object with the same ID 4 times uses same memory/DSP same as creating 4 of the same object with 4 different ID's?</p>

<p>So I thought I'd swing it by the experts <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> </p>

<p>Have a nice Sunday <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485/1</link>
        <pubDate>Sun, 22 Apr 2018 17:16:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4485-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/optimized-patching-on-axoloti/4485.rss">Optimized patching on Axoloti!</source>
      </item>
  </channel>
</rss>
