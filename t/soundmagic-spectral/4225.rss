<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Soundmagic Spectral</title>
    <link>http://community.axoloti.com/t/soundmagic-spectral/4225</link>
    <description>At the moment I&#39;m really in love with the soundmagic spectral effects by michael norris. Especially the spectral freeze is amazing!
http://www.michaelnorris.info/software/soundmagic-spectral

It&#39;s freeware but aparently not open source. Does anybody have a clue how to implement this on axoloti?
I think it relys quite heavily on FFT, wich is not really available on axoloti right?</description>
    
    <lastBuildDate>Fri, 23 Feb 2018 23:05:28 +0000</lastBuildDate>
    <category>Software</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>I think I found a pict that corresponds to what you mean:</p>

          <a href="http://2yh5c119vtjz3yoo8229y5bs-wpengine.netdna-ssl.com/wp-content/uploads/2015/09/aliased-sign.jpg" target="_blank" rel="nofollow noopener">
            <img src="http://2yh5c119vtjz3yoo8229y5bs-wpengine.netdna-ssl.com/wp-content/uploads/2015/09/aliased-sign.jpg" width="360" height="277">
          </a>

          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/40">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/40</link>
        <pubDate>Fri, 23 Feb 2018 23:05:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-40</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="37" data-topic="4225"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/smashedtransistors/40/3147_1.png" class="avatar">SmashedTransistors:</div>
<blockquote>
<p>Yes, that's what is called "aliasing", it is not random, but rather mirrored harmonics which cause high frequency inharmonics. It affects waveforms with lots of harmonics. </p>
<p>A pure sinewave only has one harmonic: itself.<br>Pure sinewave are not affected by this phenomenon (until it's frequency is above half the sampling rate).</p>
</blockquote></aside>

<p>I'm aware of aliasing, Nyquist limit, etc.</p>

<p>Not quite what I meant, though. Something similar might happen if you had a waveform table that was being scanned through so fast that entries in the table were skipped. If too many samples are skipped, even with interpolation, the original waveform shape will be lost.</p>

<p>I guess that doesn't happen in practice, though.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/39">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/39</link>
        <pubDate>Tue, 20 Feb 2018 12:03:40 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-39</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@watamacha Jeff]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/watamacha">@watamacha</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="25" data-topic="4225"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>What I'm still unclear on is how the partials are removed/filtered out, presumably in the time domain</p></blockquote></aside>

<p>I'm saying leave the partials in, but recalculate the target spectrum by subtracting the spectrum of the last square wave you added.</p>

<p>check your first band, put in a square wave loud enough that subtracting the square's spectrum from the target spectrum yields 0. then move to the next nonzero band and do the same. if you end up with a band in the revised target spectrum thats less than 0, then when you get to it just apply a not gate to that square wave to phase it by 180 degrees so it sums to 0.</p>

<p>the approach you linked after does the same broad process (add up some signals so the sum of their spectra is equal to the target by subtracting each new signal you introduce from the target spectrum to get a residual) but instead of pure square waves they use a mix of sine waves (no overtones) and bandwidth limited white noise (equal amplitude at every frequency in its bandwidth).</p>

<aside class="quote" data-post="30" data-topic="4225"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/b/2acd7d/40.png" class="avatar">Blindsmyth:</div>
<blockquote><p>Any Ideas how I could implement this in a cheap way that would complement the grainverb?<br>Some kind of vocoding/envelope followers with white noise as carrier maybe?</p></blockquote></aside>

<p>you could put in a transient detector that gates a subtractive signal built on white noise, which works because transients are spectrally identical to noise. Another option would be to find a way to exaggerate the phasing effects of an all pass filter (traditionally used to produce imperceptible transient smoothing that preserves RMS power and decreases peak power, i.e. sounds just as loud but gives you more headroom on your transients)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/38">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/38</link>
        <pubDate>Mon, 19 Feb 2018 19:51:40 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-38</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="31" data-topic="4225"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>I'm probably misunderstanding, but my thought was that as the phase accumulator increment gets higher, you'll end up skipping entries in the table, and the more entries are skipped the more approximate the waveform becomes, until eventually the resulting waveform becomes essentially random.</p></blockquote></aside>

<p>Yes, that's what is called "aliasing", it is not random, but rather mirrored harmonics which cause high frequency inharmonics. It affects waveforms with lots of harmonics. </p>

<p>A pure sinewave only has one harmonic: itself.<br>Pure sinewave are not affected by this phenomenon (until it's frequency is above half the sampling rate).</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/37">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/37</link>
        <pubDate>Mon, 19 Feb 2018 18:17:06 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-37</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="35" data-topic="4225"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/b/2acd7d/40.png" class="avatar">Blindsmyth:</div>
<blockquote><p>I will the try the clds, thx for the tip. Can it be used in this granular reverb fashion?</p></blockquote></aside>

<p>You can use it in all kinds of ways. You'll have to fiddle with the settings to see what works.</p>

<p>There are lots of tutorials and demos of MI Clouds on YouTube. They will give you an idea of what it can do.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/36">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/36</link>
        <pubDate>Mon, 19 Feb 2018 16:23:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-36</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@Blindsmyth Simon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/blindsmyth">@Blindsmyth</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="34" data-topic="4225" data-full="true"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote>
<p>Granular synthesis is probably the way to go. Have you tried the Clds object? It’s a port of the Mutable Instruments Clouds granular texture Eurorack module.</p>
<p>a|x</p>
</blockquote></aside>

<p>As I said I'm using grainverb at the moment, but I disslike how it reacts on transients. The freeze and paul stretch really smash transients with long noisy tails, with the grainverb you rather here the tranient echoed a couple of times.<br>I will the try the clds, thx for the tip. Can it be used in this granular reverb fashion?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/35">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/35</link>
        <pubDate>Mon, 19 Feb 2018 15:02:45 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-35</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Granular synthesis is probably the way to go. Have you tried the Clds object? It’s a port of the Mutable Instruments Clouds granular texture Eurorack module.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/34">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/34</link>
        <pubDate>Mon, 19 Feb 2018 14:45:31 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-34</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>haha i know davey taylor from a LONG mail exchange, he is a brilliant programmer!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/33">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/33</link>
        <pubDate>Mon, 19 Feb 2018 10:52:00 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-33</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Would these help?</p>

<p><a href="http://www.keil.com/pack/doc/CMSIS/DSP/html/group__ComplexFFT.html" class="onebox" target="_blank" rel="nofollow noopener">http://www.keil.com/pack/doc/CMSIS/DSP/html/group__ComplexFFT.html</a><br><a href="http://www.keil.com/pack/doc/CMSIS/DSP/html/group__RealFFT.html" class="onebox" target="_blank" rel="nofollow noopener">http://www.keil.com/pack/doc/CMSIS/DSP/html/group__RealFFT.html</a></p>

<p>And<br><aside class="onebox whitelistedgeneric">
  <header class="source">
    <a href="https://github.com/stg/SYLT-FFT" target="_blank" rel="nofollow noopener">github.com</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars1.githubusercontent.com/u/304625?s=400&amp;v=4" width="" height="" class="thumbnail">

<h3><a href="https://github.com/stg/SYLT-FFT" target="_blank" rel="nofollow noopener">stg/SYLT-FFT</a></h3>

<p>SYLT-FFT - Optimized (I)FFT(R) for Cortex-M4</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/32">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/32</link>
        <pubDate>Mon, 19 Feb 2018 09:38:39 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-32</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I'm probably misunderstanding, but my thought was that as the phase accumulator increment gets higher, you'll end up skipping entries in the table, and the more entries are skipped the more approximate the waveform becomes, until eventually the resulting waveform becomes essentially random.</p>

<p>I must admit I haven't really got a grasp of the numbers involved, though. It could be that, with that table length, and the sample-rate the Axoloti runs at, the table will never skip values.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/31">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/31</link>
        <pubDate>Mon, 19 Feb 2018 09:31:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-31</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@Blindsmyth Simon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/blindsmyth">@Blindsmyth</a> wrote:</p>
          <blockquote>
              <p>Wow what discussion! I'm hyped but at the same time realizing that all of this is way beyond my capabilites. but it's still interesting though! </p>

<p>At the moment I'm getting used to the grainverb by <a class="mention" href="/u/johannes">@johannes</a> again wich sounds pretty good actually. But what I'm missing compared to the spectral freeze or paul stretch is this smashing of transients and consonants into long noisy trails. Any Ideas how I could implement this in a cheap way that would complement the grainverb?<br>Some kind of vocoding/envelope followers with white noise as carrier maybe?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/30">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/30</link>
        <pubDate>Mon, 19 Feb 2018 01:40:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-30</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>I don't understand what you mean, can you draw something?<br>Tables are generally interpolated.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/29">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/29</link>
        <pubDate>Mon, 19 Feb 2018 00:14:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-29</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Interesting...</p>

<p>Isn't the issues with sine tables that the largest the phase-accumulator value, the 'steppier' the sine becomes, given a fixed sample-rate?</p>

<p>Maybe in practice, that's not an issue.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/28">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/28</link>
        <pubDate>Mon, 19 Feb 2018 00:11:14 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-28</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>I think that the transform with squarish waveforms <a class="mention" href="/u/watamacha">@watamacha</a> is looking for is the <a href="https://en.wikipedia.org/wiki/Hadamard_transform">Walsh Hadamar transform</a>. Note that <a href="https://en.wikipedia.org/wiki/Walsh_function">Walsh functions</a> where used in early <a href="https://encyclotronic.com/synthesizers/rmi/harmonic-synthesizer-r1387/">RMI Harmonic synth</a> instead of sines, hence a bunch of characteristic overtones.</p>

<p>Calculating sines is an issue, but having sine functions in a table is the way to go. <br>In fact, the sine2t table contains a 4096 sample sine that is used in many objects.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/27">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/27</link>
        <pubDate>Mon, 19 Feb 2018 00:07:25 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-27</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Is this a possible approach, also?<br><a href="http://mtg.upf.edu/node/111" class="onebox" target="_blank" rel="nofollow noopener">http://mtg.upf.edu/node/111</a></p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/26">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/26</link>
        <pubDate>Sun, 18 Feb 2018 23:21:07 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-26</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Wow, that's pretty comprehensive explanation, thank you very much, <a class="mention" href="/u/watamacha">@watamacha</a>..!</p>

<p>I have to say, it's going to take some digesting, but I'm working on it <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>

<p>I think I've got the bit about the importance of phase information resynthesising additively, though. I'd heard about this before, but now I have more of a grasp of why it's so important, in terms of phase cancellation effects.</p>

<p>I'm still vague on the bit about using square, instead of sine waves, I'm afraid. I can understand why they're easier to calculate than sines, and that if using them instead of sine waves, you'd need to remove the extra partials. What I'm still unclear on is how the partials are removed/filtered out, presumably in the time domain.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/25">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/25</link>
        <pubDate>Sun, 18 Feb 2018 22:01:46 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-25</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@watamacha Jeff]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/watamacha">@watamacha</a> wrote:</p>
          <blockquote>
              <p>I'm reading mangling to mean unpredictable but interesting results, like blindly patching a modular drone. I think the most sonic possibilities will come from using FM, and you wont really need to know the special math for FM stuff since you can naively compute the spectra ahead of time (naive here means you can ignore the cool math and just make some preset fm waveforms and compute the spectra). However, if you use additive resynthesis from cheap waveforms you'll leave yourself as much dsp room as possible to do cool subtractive stuff on it, or things like wavefolding and pwm, which can still be set up in an unpredictable and creative way but without the high risk of stuff sounding bad that you get with FM. This is because for all the possible sounds from FM mangling, only some of them will produce harmonically simple enough waveforms to sound good.</p>

<p>I'll explain the math a bit for you. Usually we view audio signals as amplitude with respect to time. However, a combination of cool things said by old crazy nerds like euler, laplace, and fourier let us write those same functions as amplitude with respect to frequency. The coolest thing is that we have functions to convert between these 2 domains (domain here means the same thing it usually does, the x axis on your graph). spectral resynthesis is about finding easy and fast ways to convert from the frequency domain to the time domain. Instead of trying to mathematically convert from the frequency domain back to the time domain (inverse fourier transform) we synthesis (the resynthesis part) a wave that looks almost the same in the frequency domain (the spectral part). Since sine waves have only 1 frequency, they're the simplest way for humans to think about spectral resynthesis because you just have to make a sine wave for each point in your spectrum (graph where x is frequency and y is amplitude) and make the frequency of the sine wave equal the x coordinate of the point, and adjust its volume to the y coordinate of the point.</p>

<p>Unfortunately, sine waves are really hard for computers to make. Luckily, square waves arent. We can basically do the same thing as before, because square waves are just a bunch of odd harmonics with amplitude inversely proportional to frequency. In other words, a square wave at frequency f is sorta like a sin(f), and its a little more like a sin(f)+sin(3f)/3, and even more like a sin(f)+sin(3f)/3+sin(5f)/5, and so on. Because of this a square wave is very cheap for a computer to work with not only in the time domain, but in the frequency domain as well, since we can ignore all the harmonics higher than 20khz, so we have a pretty limited number of them to deal with and that number decreases as the frequency of the square wave increases. Note that I omitted some scaling factors for readability, for those factors just look up the square wave fourier series.</p>

<p>now I'll change the wording for how we think about spectral resynth. suppose our target spectrum is T(f), aka a function of frequency that we want to get, and that our resynthesized waveform has a spectrum of S(f). earlier we said we want T(f) = S(f), but if we subtract S(f) from both sides we get T(f)-S(f)=0. Even though we're in the frequency domain, spectra are still functions and pretty much act like it, so we can do a lot of the same stuff with spectra as we can regular functions.</p>

<p>The other thing we can do is say that if we add 2 simple waveforms, the spectrum of the sum is the same as the sum of the spectrum (i.e. the fourier transform is a linear transform).</p>

<p>If we think about our sine wave resynthesis again, what we're really doing is subtracting the spectra of a bunch of sine waves from our original spectrum in the hopes of getting close to 0. We can do the same thing with square waves, the only difference is that if we add a square wave at frequency f with amplitude A we need to subtract A/pi from the original spectrum at frequency f, A/3pi at frequency 3f, etc.</p>

<p>So to resynthesize a discrete spectrum (i.e. a spectrum with a finite number of points, where the x coordinate is the middle of a band and the y coordinate is the amplitude of said band) with square waves, all you have to do is look at your lowest band and make a square wave at the center frequency of that band, and adjust its volume to match the amplitude of that band. The only extra step is that you now have to subtract the higher partials before moving onto the next band, but the subtraction is easy to calculate and your next step is still to just add a square wave at the current lowest frequency band thats got an amplitude that isnt 0.</p>

<p>There are 2 things that complicate this, one of which matters and one of which doesnt, so I'll discuss the important one first.</p>

<p>the fourier series of a square wave isnt really what its spectrum is gonna look like, because it assumes the square wave goes from negative infinity to positive infinity on the time axis. What happens in real situations is that these peaks in the spectrum (called kronecker deltas, or places where the function jumps from 0 to something else and back to 0 instantly) get smoothed out and end up looking like normal distributions. that doesnt really matter since you can just run your square wave through the spectrum analyzer you're using ahead of time, and as long as you're comparing spectra that were produced by the same analyzer you should be ok.</p>

<p>the thing that doesnt matter for square waves but would matter if you wanted to try other waveforms is that when your x axis is frequency, your y axis is actually complex. That sounds scary, but think of it like this: your x axis (frequency) is now the middle of a cylinder. your amplitudes are vectors that point towards the wall of the cylinder, and the length of the vector is still the amplitude of that partial frequency, but the amount the arrow is rotated in the cylinder is the phase shift of that partial. if the arrow is pointing straight at you, it's got no phase shift. if its pointing away from you, then its got half a period of phase shift (pi radians or 180 degrees). if you phase shift a periodic signal by 360 degrees, you're basically spinning the cylinder around a full cycle, and all the arrows end up pointing in the same direction as they did before. The only thing this affects in our earlier model is how spectra are added and subtracted. say you have an arrow in a spectrum at frequency 220hz with amplitude 1, and its pointed towards you, so its not phase shifted. now say you add another spectrum with an identical arrow, but with 180 degree phase shift  so it points the other way. if you add the spectra together (aka add the signals together) then the result is 0 at 220hz because the vectors cancel out, but since our earlier model didnt include phase shift it just reads 1+1 and spits out 2. luckily, this doesnt matter for square waves because all the partials of a square wave have no phase shift. there are other waveforms (in fact infinitely many) that also have this property, and for each one of those there are infinitely many other waveforms that don't have this property.</p>

<p>So we luckily dont have to worry about phase cancellation with perfectly tuned square waves, but the tradeoff is that if one of the square waves gets detuned we'll get an interference pattern. The solution to this is to sync all of the square waves to the lowest one, but that only works if all the square waves we use have a frequency thats an integer multiple of the frequency of the lowest square wave.</p>

<p>If you want a function written for you let me know, but understanding all this should give you enough to write the function and is honestly necessary to do anything interesting with it</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/24">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/24</link>
        <pubDate>Sun, 18 Feb 2018 18:03:46 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-24</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>That’s intriguing. I’m afraid, though I know some of the terminology, my grasp of the mathematical principles involved is tenuous at best.</p>

<p>In terms of which method would be most interesting, for me, it would depend on how much potential it offers for creative disruption/mangling, rather than necessarily how well it performs in terms of fidelity of reproduction.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/23">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/23</link>
        <pubDate>Sun, 18 Feb 2018 16:43:35 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-23</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="20" data-topic="4225"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>I wonder what resynthesis method Olivier went for.</p></blockquote></aside>

<p>They are all open source, so it should be possible to find out <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/22">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/22</link>
        <pubDate>Sun, 18 Feb 2018 15:53:38 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-22</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@watamacha Jeff]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/watamacha">@watamacha</a> wrote:</p>
          <blockquote>
              <p>since clouds is open source you might be able to figure that out pretty easy. </p>

<p>Another method that might be worth considering is using a combination of FM and additive synthesis, since FM produces interesting spectra which can be modelled with 1st order bessel functions. I'm envisioning a sort of "smart" additive resynthesis which uses non-sinusoidal waveforms combined in the following way: start with the spectrum you want to resynthesize, with harmonically related bands. Create an oscillator with fundamental frequency at the center of the lowest nonzero band, then subtract the pre-calculated spectrum for said oscillator from the original spectrum and repeat. said oscillators could be saws, triangles, and squares (I assume square would be the most efficient), and/or some simple FM signals. this would only really work if you're very careful about phase or do all your spectrum calculations calculations using complex numbers since complex spectra are linear and real spectra are not. </p>

<p>yet another tool you could use is to introduce noise equal to the minimum amplitude of any band and then reduce all bands by that amount, that way you get a guarantee of one band being 0 and a decent chance of a good number of bands being negligibly distant from 0, creating a sparse spectrum. Since sparse fft tells us that sparse spectra can be easier to compute, its fairly reasonable imo to assume the same can be said about the resynthesis of sparse spectra.</p>

<p>since spectra are linear barring phase issues, your design space for spectral resynthesis basically consists of using something to create enough of the partials you need and subtractive to cut out ones you don't. to get the partials you need, you can use any mix of fm, additive, wavetable, or noise synthesis.</p>

<p>spectral analysis isnt my main math squeeze so I'm unsure if such resynthesis has been attempted previously, whether it works, and whether some of the more specific mathematical statements above are correct</p>

<p>edit: added some stuff. check <a href="https://www.doc.ic.ac.uk/teaching/distinguished-projects/2011/a.johnson.pdf" rel="nofollow noopener"> this paper on evolutionary FM/subtractive resynthesis of dynamic spectra</a> out.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/21">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/21</link>
        <pubDate>Sun, 18 Feb 2018 09:18:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-21</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Interesting...</p>

<p>The fact that MI Clouds is able to do FFT and resynthesis (with some mangling in between), using a similar Cortex M4 MCU suggests it may also be possible on the Axoloti, though.</p>

<p>I wonder what resynthesis method Olivier went for.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/20">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/20</link>
        <pubDate>Sun, 18 Feb 2018 08:50:21 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-20</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@valmir]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/valmir">@valmir</a> wrote:</p>
          <blockquote>
              <p>Hi! Check this out.<br> <a href="//community.axoloti.com/t/community-pedalboard/3641/4?u=valmir">http://community.axoloti.com/t/community-pedalboard/3641/4?u=valmir</a><br>The latch mode MIGHT sound a little bit like that.<br>No spectral things were harmed in the making of this patch.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/19">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/19</link>
        <pubDate>Sat, 17 Feb 2018 13:24:21 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-19</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@watamacha Jeff]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/watamacha">@watamacha</a> wrote:</p>
          <blockquote>
              <p>im aware of 3 methods for arbitrary fft resynthesis: ifft, additive, or vocoding.</p>

<p>ifft may be possible but is probably about as hard as the original fft. <a href="https://www.dsprelated.com/showarticle/800.php" rel="nofollow noopener">here's</a> one approach using the regular fft to construct the ifft.</p>

<p>As far as additive or vocoding, you create a sine osc or send noise through a bandpass with amplitude equal to the band for each band of the fft. this would be equivalent to having either 512 sine oscs or 512 band passes running simultaneously. so good luck. </p>

<p>However, if the band centers have an integer harmonic relation (i.e. are parts of the overtone series of the lowest band's center) and the lowest band is centered at f, the resynthesis could be done by constantly updating a wavetable with length 1/f*48000 with a weighted sum of the wavetables for each band's sine. the harmonic requirement guarantees that all of the sine waves will complete an integer number of periods per each period of the fundamental, guaranteeing that the end of the table will line up with the start of the table regardless of the weightings, preventing the introduction of unwanted transients. Whether this is any more useful in practice isnt something I can comment on but its an option. Still probably too much going on for the axo since for an f0 of, say, 30hz, this will require 1600*512 multiplications AND additions per wavetable recalculation.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/18">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/18</link>
        <pubDate>Sat, 17 Feb 2018 08:17:33 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-18</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>512 k-rate cycles is 170.66ms latency, if my maths is correct.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/17">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/17</link>
        <pubDate>Fri, 16 Feb 2018 17:58:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-17</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
      <item>
        <title>Soundmagic Spectral</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Oh, sorry, 8192 is the length of the buffer that gets updated every 512 k-rate cycles.</p>

<p>Do you think the Axoloti could resynthesise a 512-band fft at s-rate?</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/soundmagic-spectral/4225/16">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/soundmagic-spectral/4225/16</link>
        <pubDate>Fri, 16 Feb 2018 17:52:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4225-16</guid>
        <source url="http://community.axoloti.com/t/soundmagic-spectral/4225.rss">Soundmagic Spectral</source>
      </item>
  </channel>
</rss>
