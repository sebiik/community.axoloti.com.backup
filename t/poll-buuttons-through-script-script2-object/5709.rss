<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Poll buuttons through script/script2-object</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/poll-buuttons-through-script-script2-object/5709</link>
    <description>Hi

I need to poll some potentiometers and buttons  through 4x 4051-multiplexers .. the potentiometers work well, but I have no idea how I would get if a button is pressed? 

&lt;img src=&quot;/uploads/default/original/2X/1/1b85fe6de6960eaf28475eec9ee01059c50ff3cb.jpg&quot; width=&quot;666&quot; height=&quot;500&quot;&gt;

&lt;img src=&quot;/uploads/default/original/2X/7/700f58d1ad4281bf1778ae7d1ce7c73f252a63d9.jpg&quot; width=&quot;690&quot; height=&quot;421&quot;&gt;

the first row-dials are the first 4051 .. works
the second row-dials are the second 4051 ..works
the third row are the buttons.. here i have no idea how to poll if it is pressed(?)

    int i;   // select y-input

    void setup(void){
	    palSetPadMode(GPIOC,0,PAL_MODE_OUTPUT_PUSHPULL);	// s0 Pin of 4051
	    palSetPadMode(GPIOC,1,PAL_MODE_OUTPUT_PUSHPULL);	// S1 Pin of 4051
	    palSetPadMode(GPIOC,2,PAL_MODE_OUTPUT_PUSHPULL);	// s2 Pin of 4051

	    palSetPadMode(GPIOC,5,PAL_MODE_INPUT_PULLDOWN);
	
	    i = 0;
    }

    void loop(void){

	    i++;
	    if (i == 32) {
		    i = 0;
	    }

	    palWritePad(GPIOC,0,((i&amp; 0x01) &gt; 0));		// write s0
	    palWritePad(GPIOC,1,(((i&gt;&gt;1)&amp; 0x01) &gt; 0));	// write s1
	    palWritePad(GPIOC,2,(((i&gt;&gt;2)&amp; 0x01) &gt; 0));	// write s2
	
	    int z = adcvalues[13]&lt;&lt;15;			// ADC z-input
	    int z1 = adcvalues[14]&lt;&lt;15;			// ADC z-input
	    int z2 = palReadPad(GPIOC,5);			// ADC z-input
	    int z3 = adcvalues[0]&lt;&lt;15;			// ADC z-input

	switch (i){
		case 0: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y0_value],z,0xFFFD); break;	//connect in1 to dial (named y0)
		case 1: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y1_value],z,0xFFFD); break;	//connect in2 to dial (named y1)
		case 2: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y2_value],z,0xFFFD); break;	//connect in3 to dial (named y2)
		case 3: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y3_value],z,0xFFFD); break;	//connect in4 to dial (named y3)
		case 4: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y4_value],z,0xFFFD); break;	//connect in5 to dial (named y4)
		case 5: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y5_value],z,0xFFFD); break;	//connect in6 to dial (named y5)
		case 6: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y6_value],z,0xFFFD); break;	//connect in7 to dial (named y6)
		case 7: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y7_value],z,0xFFFD); break;	//connect in8 to dial (named y7)

		case 8: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y8_value],z1,0xFFFD); break;	//connect in1 to dial (named y0)
		case 9: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y9_value],z1,0xFFFD); break;	//connect in2 to dial (named y1)
		case 10: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y10_value],z1,0xFFFD); break;	//connect in3 to dial (named y2)
		case 11: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y11_value],z1,0xFFFD); break;	//connect in4 to dial (named y3)
		case 12: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y12_value],z1,0xFFFD); break;	//connect in5 to dial (named y4)
		case 13: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y13_value],z1,0xFFFD); break;	//connect in6 to dial (named y5)
		case 14: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y14_value],z1,0xFFFD); break;	//connect in7 to dial (named y6)
		case 15: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y15_value],z1,0xFFFD); break;	//connect in8 to dial (named y7)

		case 16: out2 = z2; break;
		//case 16: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y16_value],z2,0xFFFD); break;	//connect in2 to dial (named y1)
		case 17: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y17_value],z2,0xFFFD); break;	//connect in3 to dial (named y2)
		case 18: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y18_value],z2,0xFFFD); break;	//connect in4 to dial (named y3)
		case 19: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y19_value],z2,0xFFFD); break;	//connect in5 to dial (named y4)
		case 20: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y20_value],z2,0xFFFD); break;	//connect in6 to dial (named y5)
		case 21: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y21_value],z2,0xFFFD); break;	//connect in7 to dial (named y6)
		case 22: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y22_value],z2,0xFFFD); break;	//connect in8 to dial (named y7)

		
	}

    }


can someone please help me?</description>
    
    <lastBuildDate>Wed, 15 May 2019 09:43:45 +0000</lastBuildDate>
    <category>Hardware</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/poll-buuttons-through-script-script2-object/5709.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Poll buuttons through script/script2-object</title>
        <dc:creator><![CDATA[@AdmiralCrunch]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/admiralcrunch">@AdmiralCrunch</a> wrote:</p>
          <blockquote>
              <p>Hi</p>

<p>I need to poll some potentiometers and buttons  through 4x 4051-multiplexers .. the potentiometers work well, but I have no idea how I would get if a button is pressed? </p>

<p><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/1b85fe6de6960eaf28475eec9ee01059c50ff3cb" href="//community.axoloti.com/uploads/default/original/2X/1/1b85fe6de6960eaf28475eec9ee01059c50ff3cb.jpg" class="lightbox" title="20190515_112221_resized.jpg"><img src="//community.axoloti.com/uploads/default/optimized/2X/1/1b85fe6de6960eaf28475eec9ee01059c50ff3cb_1_666x500.jpg" width="666" height="500"><div class="meta">
<span class="filename">20190515_112221_resized.jpg</span><span class="informations">2016x1512 1.1 MB</span><span class="expand"></span>
</div></a></div></p>

<p><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/700f58d1ad4281bf1778ae7d1ce7c73f252a63d9" href="//community.axoloti.com/uploads/default/original/2X/7/700f58d1ad4281bf1778ae7d1ce7c73f252a63d9.jpg" class="lightbox" title="Unbenannt-2.jpg"><img src="//community.axoloti.com/uploads/default/optimized/2X/7/700f58d1ad4281bf1778ae7d1ce7c73f252a63d9_1_690x421.jpg" width="690" height="421"><div class="meta">
<span class="filename">Unbenannt-2.jpg</span><span class="informations">907x554 126 KB</span><span class="expand"></span>
</div></a></div></p>

<p>the first row-dials are the first 4051 .. works<br>the second row-dials are the second 4051 ..works<br>the third row are the buttons.. here i have no idea how to poll if it is pressed(?)</p>

<pre><code>int i;   // select y-input

void setup(void){
    palSetPadMode(GPIOC,0,PAL_MODE_OUTPUT_PUSHPULL);	// s0 Pin of 4051
    palSetPadMode(GPIOC,1,PAL_MODE_OUTPUT_PUSHPULL);	// S1 Pin of 4051
    palSetPadMode(GPIOC,2,PAL_MODE_OUTPUT_PUSHPULL);	// s2 Pin of 4051

    palSetPadMode(GPIOC,5,PAL_MODE_INPUT_PULLDOWN);

    i = 0;
}

void loop(void){

    i++;
    if (i == 32) {
	    i = 0;
    }

    palWritePad(GPIOC,0,((i&amp; 0x01) &gt; 0));		// write s0
    palWritePad(GPIOC,1,(((i&gt;&gt;1)&amp; 0x01) &gt; 0));	// write s1
    palWritePad(GPIOC,2,(((i&gt;&gt;2)&amp; 0x01) &gt; 0));	// write s2

    int z = adcvalues[13]&lt;&lt;15;			// ADC z-input
    int z1 = adcvalues[14]&lt;&lt;15;			// ADC z-input
    int z2 = palReadPad(GPIOC,5);			// ADC z-input
    int z3 = adcvalues[0]&lt;&lt;15;			// ADC z-input

switch (i){
	case 0: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y0_value],z,0xFFFD); break;	//connect in1 to dial (named y0)
	case 1: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y1_value],z,0xFFFD); break;	//connect in2 to dial (named y1)
	case 2: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y2_value],z,0xFFFD); break;	//connect in3 to dial (named y2)
	case 3: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y3_value],z,0xFFFD); break;	//connect in4 to dial (named y3)
	case 4: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y4_value],z,0xFFFD); break;	//connect in5 to dial (named y4)
	case 5: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y5_value],z,0xFFFD); break;	//connect in6 to dial (named y5)
	case 6: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y6_value],z,0xFFFD); break;	//connect in7 to dial (named y6)
	case 7: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y7_value],z,0xFFFD); break;	//connect in8 to dial (named y7)

	case 8: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y8_value],z1,0xFFFD); break;	//connect in1 to dial (named y0)
	case 9: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y9_value],z1,0xFFFD); break;	//connect in2 to dial (named y1)
	case 10: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y10_value],z1,0xFFFD); break;	//connect in3 to dial (named y2)
	case 11: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y11_value],z1,0xFFFD); break;	//connect in4 to dial (named y3)
	case 12: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y12_value],z1,0xFFFD); break;	//connect in5 to dial (named y4)
	case 13: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y13_value],z1,0xFFFD); break;	//connect in6 to dial (named y5)
	case 14: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y14_value],z1,0xFFFD); break;	//connect in7 to dial (named y6)
	case 15: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y15_value],z1,0xFFFD); break;	//connect in8 to dial (named y7)

	case 16: out2 = z2; break;
	//case 16: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y16_value],z2,0xFFFD); break;	//connect in2 to dial (named y1)
	case 17: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y17_value],z2,0xFFFD); break;	//connect in3 to dial (named y2)
	case 18: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y18_value],z2,0xFFFD); break;	//connect in4 to dial (named y3)
	case 19: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y19_value],z2,0xFFFD); break;	//connect in5 to dial (named y4)
	case 20: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y20_value],z2,0xFFFD); break;	//connect in6 to dial (named y5)
	case 21: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y21_value],z2,0xFFFD); break;	//connect in7 to dial (named y6)
	case 22: PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_y22_value],z2,0xFFFD); break;	//connect in8 to dial (named y7)

	
}

}</code></pre>

<p>can someone please help me?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/poll-buuttons-through-script-script2-object/5709/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/poll-buuttons-through-script-script2-object/5709/1</link>
        <pubDate>Wed, 15 May 2019 09:43:45 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5709-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/poll-buuttons-through-script-script2-object/5709.rss">Poll buuttons through script/script2-object</source>
      </item>
  </channel>
</rss>
