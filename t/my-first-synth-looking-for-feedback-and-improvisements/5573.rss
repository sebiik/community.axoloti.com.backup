<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My first synth, looking for feedback and improvisements</title>
    <link>http://community.axoloti.com/t/my-first-synth-looking-for-feedback-and-improvisements/5573</link>
    <description>Hey there, so i just got into axoliti like 2 weeks ago, i want to build both a toy-ish synth for my daughter and a more serious one for myself. The architecture on both is supposed to be rather classic, 2-3 osc polyphonic, adsr for filter and amp, some effects. The osc&#39;s are supposed to be switchable between some classic VA waveforms and also most importantly some (20-30) simple rompler sample playback choices. for the bibg one i am also playing with the thought of having one axo per osc and including even more synthesis forms, fm, wavetable etc, so you could have 3 totally different osc engines running parallel. i think this would be way to much to ask from a single axo?

so i have a basic version running surprisingly nice already. 6 voice poly, with each voice playing a VA osc and two sample layers at the same time. here&#39;s some screenshots:

&lt;img src=&quot;/uploads/default/original/2X/4/4474e9531270675d08482099322d19b5e99ce9d1.png&quot; width=&quot;634&quot; height=&quot;500&quot;&gt;
single voice sub patch:
&lt;img src=&quot;/uploads/default/original/2X/0/083a66411d434e6e1acb12995997ae81a294a825.png&quot; width=&quot;690&quot; height=&quot;402&quot;&gt;
please ignore the abandoned disp and vca objects and pointless mixer channels, they were for debugging/i just now realized i should eb using the vca over the math mul, to get k-rate interpolation.


now what i&#39;m looking for right now is general feedback and hints. since this is my first axo project and also the first time coding in like 20 years. i am running into CPU limitations  with this patch already (currently around 90%). While that would even be ok, i could just use 2-3 axos in series for effects and things, i am also looking for ways to optimize the CPU efficiency. eg. i think streaming from SD might make a lot of things easier and lighter on the CPU, but couldn&#39;t find a ready-made pitchable player module. i also tried benchmarking the CPU load of several OSC objects, here&#39;s my finding for 6 voice plyphony - not sure if there&#39;s a list or anything like this?

Brds fm 10%
Play pitch loop 1mb table 12%
Saw sync 14%
Saw medium 3%
Brds pluckd &gt; 20%
Brds saw 4%
Brds square 7%
Brds triangle 5%
Brds vowel 20%
pwm 22%
supersquare 12%
PTRSaw 7%
EPTRSaw 4%
Sptnk multi 6%

there&#39;s a couple more questions i have that i will keep adding to this thread, but feel free to post any notes, ideas or thoughts you guys have!

edit:  adding random questions here:

- does it make more sense to have the midi CCs linked in the subpatch, or copy all parameters to parent patch and assign CCs there? probably makes a difference for the preset system? same with the midi note/gate in. main patch? i probably can have one in both?

- would love to add some meta data to each of the samples, like NAME,  LOOP START/END... how would i go aout this? do i have to manually parse a txt file from sd card or something like that? how can i dynamically assign the loop-parameters on play_pitch_loop? just add inlets instead?

- the table load via midi cc gives me audio dropouts of about half a second and makes everything stutter while i move it. other than that it works perfect though. is that the usual loading time for a table or might that be caused by the CC sending like 100 triggers in a row. when being touched? should i insert some kind of sample&amp;hold there so that it triggers the load object at most every 300ms or something like that?
edit: i added a sample and hold in the midi code, while it seems to work perfectly and limits triggers to one every third of a second, i still get the dropouts. from reading the forum more i gathered this actually is the table load. clicks could be prevented with quick fades but faster sound change could only be achieved with streaming or preloading? what if i add a third table, which preloads the new sound, once its finished loading the playing table gets overwritten with the preload table - would be faster ram operations only then, no sd card involved?</description>
    
    <lastBuildDate>Mon, 01 Apr 2019 03:56:16 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="http://community.axoloti.com/t/my-first-synth-looking-for-feedback-and-improvisements/5573.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My first synth, looking for feedback and improvisements</title>
        <dc:creator><![CDATA[@weasel79 blender]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/weasel79">@weasel79</a> wrote:</p>
          <blockquote>
              <p>Hey there, so i just got into axoliti like 2 weeks ago, i want to build both a toy-ish synth for my daughter and a more serious one for myself. The architecture on both is supposed to be rather classic, 2-3 osc polyphonic, adsr for filter and amp, some effects. The osc's are supposed to be switchable between some classic VA waveforms and also most importantly some (20-30) simple rompler sample playback choices. for the bibg one i am also playing with the thought of having one axo per osc and including even more synthesis forms, fm, wavetable etc, so you could have 3 totally different osc engines running parallel. i think this would be way to much to ask from a single axo?</p>

<p>so i have a basic version running surprisingly nice already. 6 voice poly, with each voice playing a VA osc and two sample layers at the same time. here's some screenshots:</p>

<p><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/4474e9531270675d08482099322d19b5e99ce9d1" href="//community.axoloti.com/uploads/default/original/2X/4/4474e9531270675d08482099322d19b5e99ce9d1.png" class="lightbox" title="Screen Shot 2019-03-30 at 7.46.38 PM.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/4/4474e9531270675d08482099322d19b5e99ce9d1_1_634x500.png" width="634" height="500"><div class="meta">
<span class="filename">Screen Shot 2019-03-30 at 7.46.38 PM.png</span><span class="informations">1982x1562 321 KB</span><span class="expand"></span>
</div></a></div><br>single voice sub patch:<br><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/083a66411d434e6e1acb12995997ae81a294a825" href="//community.axoloti.com/uploads/default/original/2X/0/083a66411d434e6e1acb12995997ae81a294a825.png" class="lightbox" title="Screen Shot 2019-03-30 at 7.46.47 PM.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/0/083a66411d434e6e1acb12995997ae81a294a825_1_690x402.png" width="690" height="402"><div class="meta">
<span class="filename">Screen Shot 2019-03-30 at 7.46.47 PM.png</span><span class="informations">2492x1454 402 KB</span><span class="expand"></span>
</div></a></div><br>please ignore the abandoned disp and vca objects and pointless mixer channels, they were for debugging/i just now realized i should eb using the vca over the math mul, to get k-rate interpolation.</p>

<p>now what i'm looking for right now is general feedback and hints. since this is my first axo project and also the first time coding in like 20 years. i am running into CPU limitations  with this patch already (currently around 90%). While that would even be ok, i could just use 2-3 axos in series for effects and things, i am also looking for ways to optimize the CPU efficiency. eg. i think streaming from SD might make a lot of things easier and lighter on the CPU, but couldn't find a ready-made pitchable player module. i also tried benchmarking the CPU load of several OSC objects, here's my finding for 6 voice plyphony - not sure if there's a list or anything like this?</p>

<p>Brds fm 10%<br>Play pitch loop 1mb table 12%<br>Saw sync 14%<br>Saw medium 3%<br>Brds pluckd &gt; 20%<br>Brds saw 4%<br>Brds square 7%<br>Brds triangle 5%<br>Brds vowel 20%<br>pwm 22%<br>supersquare 12%<br>PTRSaw 7%<br>EPTRSaw 4%<br>Sptnk multi 6%</p>

<p>there's a couple more questions i have that i will keep adding to this thread, but feel free to post any notes, ideas or thoughts you guys have!</p>

<p>edit:  adding random questions here:</p>

<ul>
<li><p>does it make more sense to have the midi CCs linked in the subpatch, or copy all parameters to parent patch and assign CCs there? probably makes a difference for the preset system? same with the midi note/gate in. main patch? i probably can have one in both?</p></li>
<li><p>would love to add some meta data to each of the samples, like NAME,  LOOP START/END... how would i go aout this? do i have to manually parse a txt file from sd card or something like that? how can i dynamically assign the loop-parameters on play_pitch_loop? just add inlets instead?</p></li>
<li><p>the table load via midi cc gives me audio dropouts of about half a second and makes everything stutter while i move it. other than that it works perfect though. is that the usual loading time for a table or might that be caused by the CC sending like 100 triggers in a row. when being touched? should i insert some kind of sample&amp;hold there so that it triggers the load object at most every 300ms or something like that?<br>edit: i added a sample and hold in the midi code, while it seems to work perfectly and limits triggers to one every third of a second, i still get the dropouts. from reading the forum more i gathered this actually is the table load. clicks could be prevented with quick fades but faster sound change could only be achieved with streaming or preloading? what if i add a third table, which preloads the new sound, once its finished loading the playing table gets overwritten with the preload table - would be faster ram operations only then, no sd card involved?</p></li>
</ul>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/my-first-synth-looking-for-feedback-and-improvisements/5573/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/my-first-synth-looking-for-feedback-and-improvisements/5573/1</link>
        <pubDate>Sat, 30 Mar 2019 19:01:07 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5573-1</guid>
        <source url="http://community.axoloti.com/t/my-first-synth-looking-for-feedback-and-improvisements/5573.rss">My first synth, looking for feedback and improvisements</source>
      </item>
  </channel>
</rss>
