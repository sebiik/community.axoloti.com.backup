<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Velocity-sensitive polyphonic synth</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051</link>
    <description>Hi, I&#39;m new to Axoloti and I&#39;m interested in using it for synth.

To get started I have tried the demo synths and tried to make my own modifications on some of them. I&#39;ve noticed that none of the are velocity sensitive, so I tried to make velocity sensitive variations of them. Seems pretty easy for a monophonic synth - but how can I make a polysynth velocity sensitive? With the approaches I have tried until now, the problem is that every new note sets the velocity of the notes that are already playing.</description>
    
    <lastBuildDate>Sun, 31 Jul 2016 07:22:23 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Velocity-sensitive polyphonic synth</title>
        <dc:creator><![CDATA[@groovy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/groovy">@groovy</a> wrote:</p>
          <blockquote>
              <p>Now it suddenly works. Don't know why it didn't work in the first place - probably the subpatch somehow wasn't updated on the board.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051/4</link>
        <pubDate>Sun, 31 Jul 2016 07:22:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2051-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051.rss">Velocity-sensitive polyphonic synth</source>
      </item>
      <item>
        <title>Velocity-sensitive polyphonic synth</title>
        <dc:creator><![CDATA[@groovy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/groovy">@groovy</a> wrote:</p>
          <blockquote>
              <p>Yes, that was what I did with a copy of the 'dreamy' demo patch, but it didn't work well. Anyway now I've realized that I probably have to do it in the subpatch, not in the main path. So I tried that, but now there's no velocity sensitivity at all.<a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/e/e46128c2bc7bd9e5ac03681d51cc5ab44ec56ee2.axp">dreamy3.axp</a> (7.5 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051/3</link>
        <pubDate>Sun, 31 Jul 2016 07:12:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2051-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051.rss">Velocity-sensitive polyphonic synth</source>
      </item>
      <item>
        <title>Velocity-sensitive polyphonic synth</title>
        <dc:creator><![CDATA[@Inaba ramon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/inaba">@Inaba</a> wrote:</p>
          <blockquote>
              <p>velocity from midi in hooked up to a vca is the trick i apply <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051/2</link>
        <pubDate>Sat, 30 Jul 2016 20:34:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2051-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051.rss">Velocity-sensitive polyphonic synth</source>
      </item>
      <item>
        <title>Velocity-sensitive polyphonic synth</title>
        <dc:creator><![CDATA[@groovy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/groovy">@groovy</a> wrote:</p>
          <blockquote>
              <p>Hi, I'm new to Axoloti and I'm interested in using it for synth.</p>

<p>To get started I have tried the demo synths and tried to make my own modifications on some of them. I've noticed that none of the are velocity sensitive, so I tried to make velocity sensitive variations of them. Seems pretty easy for a monophonic synth - but how can I make a polysynth velocity sensitive? With the approaches I have tried until now, the problem is that every new note sets the velocity of the notes that are already playing.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051/1</link>
        <pubDate>Sat, 30 Jul 2016 19:35:45 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2051-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/velocity-sensitive-polyphonic-synth/2051.rss">Velocity-sensitive polyphonic synth</source>
      </item>
  </channel>
</rss>
