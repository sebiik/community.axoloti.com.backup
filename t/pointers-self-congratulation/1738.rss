<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Pointers Self-Congratulation</title>
    <link>http://community.axoloti.com/t/pointers-self-congratulation/1738</link>
    <description>In Other News, I successfully used C pointers as function arguments for the first time yesterday.
Can I have a medal?

:stuck_out_tongue:

a|x</description>
    
    <lastBuildDate>Sun, 12 Jun 2016 22:39:54 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>This is what I'm doing currently, which seems to work.</p>

<pre><code>int32_t ins[12] = {
	inlet_synthEnergy,
	inlet_synthPeriod,
	inlet_synthK1,
	inlet_synthK2,
	inlet_synthK3,
	inlet_synthK4,
	inlet_synthK5,
	inlet_synthK6,
	inlet_synthK7,
	inlet_synthK8,
	inlet_synthK9,
	inlet_synthK10
};

bend = (inlet_bend || param_bend) ?
   range_pos(__USAT(param_bendIndex + inlet_bendIndex, 27), 0, 46) : 0;

outlet_synthEnergy = scaleValue(ins[indices[bend][0]],  bits[indices[bend][0]],  8);
outlet_synthPeriod = scaleValue(ins[indices[bend][1]],  bits[indices[bend][1]],  8);
outlet_synthK1     = scaleValue(ins[indices[bend][2]],  bits[indices[bend][2]], 16);
outlet_synthK2     = scaleValue(ins[indices[bend][3]],  bits[indices[bend][3]], 16);
outlet_synthK3     = scaleValue(ins[indices[bend][4]],  bits[indices[bend][4]],  8);  
outlet_synthK4     = scaleValue(ins[indices[bend][5]],  bits[indices[bend][5]],  8);  
outlet_synthK5     = scaleValue(ins[indices[bend][6]],  bits[indices[bend][6]],  8);
outlet_synthK6     = scaleValue(ins[indices[bend][7]],  bits[indices[bend][7]],  8);
outlet_synthK7     = scaleValue(ins[indices[bend][8]],  bits[indices[bend][8]],  8); 
outlet_synthK8     = scaleValue(ins[indices[bend][9]],  bits[indices[bend][9]],  8);
outlet_synthK9     = scaleValue(ins[indices[bend][10]], bits[indices[bend][10]], 8);
outlet_synthK10    = scaleValue(ins[indices[bend][11]], bits[indices[bend][11]], 8);</code></pre>

<p>'bend' then controls the index into a constant array, where each array member contains the order of the values from the 'ins' array which are assigned to each outlet.</p>

<pre><code>// Indices for transforming connections between inlet and outlet
const uint8_t indices[47][12] = {
	{0,1,2,3,4,5,6,7,8,9,10,11},
	{0,1,2,3,4,5,6,7,8,9,10,11},
	{0,1,11,2,3,4,5,6,7,8,9,10},
	{0,1,10,11,2,3,4,5,6,7,8,9},
	{0,1,9,10,11,2,3,4,5,6,7,8},
	{0,1,8,9,10,11,2,3,4,5,6,7},
	{0,1,7,8,9,10,11,2,3,4,5,6},
	{0,1,6,7,8,9,10,11,2,3,4,5},
	{0,1,5,6,7,8,9,10,11,2,3,4},
	{0,1,4,5,6,7,8,9,10,11,2,3},
	{0,1,3,4,5,6,7,8,9,10,11,2},
        etc.
}</code></pre>

<p>and 'bits' is an array holding the number of bits used for the values of each outlet, so values can be scaled if needed, with the 'scaleValue' function doing that when inlet and outlet bits don't match.</p>

<p>I still think it could be more elegantly achieved with pointer arrays, though.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/18">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/18</link>
        <pubDate>Sun, 12 Jun 2016 22:31:35 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-18</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I was investigating the possibility of keeping arrays of pointers to, say, 12 inlets and 12 outlets.</p>

<p>I could then loop through the outlets array, setting the values of the outlets (via the pointers pointing to them), to the values of the corresponding inlets (via their pointers), selected by their matching array indices. </p>

<p>The fun would come if you rotated or randomised one of the pointer arrays, which would change which inlet was connected to which outlet.</p>

<p>I realise there are other ways to achieve this, without pointers, but I just like the idea of doing it this way, because I've been working with functional coding for a long time, and love using loops <img src="/images/emoji/emoji_one/wink.png?v=2" title=":wink:" class="emoji" alt=":wink:"></p>

<p>The other reason is that whenever I see lots of lines of code doing more-or-less the same thing repeatedly, I think "that would be much more elegant and compact as a 'for' loop..".</p>

<p>I guess because I'm not a properly-trained programmer, I have a tendency to fixate on how my code looks.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/17">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/17</link>
        <pubDate>Sun, 12 Jun 2016 21:38:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-17</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>Storing a pointer to a local variable gives undefined behavior after the local variable goes out of scope. The compiler will not give an error but it will cause trouble...</p>

<aside class="quote" data-post="15" data-topic="1738"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>I'm thinking of interesting ways to cross-connect a series of in and outlets, and being able to store pointers to both in arrays would be handy, I think.</p></blockquote></aside>

<p>I'm not sure what your use case is?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/16">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/16</link>
        <pubDate>Sun, 12 Jun 2016 13:49:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-16</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Do you know if it's possible to set pointers to inlet/outlet ports, in an Axo object?</p>

<p><code>int32_t *outPtr = &amp;outlet_out;</code></p>

<p>And possible keep these in an array? I'm thinking of interesting ways to cross-connect a series of in and outlets, and being able to store pointers to both in arrays would be handy, I think.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/15">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/15</link>
        <pubDate>Fri, 10 Jun 2016 21:57:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-15</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Cool, thanks of that. I think I'll leave pointers to pointers for the moment.. baby steps...</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/14">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/14</link>
        <pubDate>Fri, 10 Jun 2016 13:19:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-14</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@EdGi]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/edgi">@EdGi</a> wrote:</p>
          <blockquote>
              <p>There are no stupid questions, only stupid answers...</p>

<p>Your second example is perfectly valid.  You don't need to create the pointer slewState0Ptr, as far as your example goes, as you have direct access to the variable itself.  The compiler effectvely creates the pointer for you as the function is called.<br>If you didn't have direct access to the slewState0 variable for some reason, but you did have the pointer to it, then you would just use the pointer as you did in the first case.</p>

<p>The other reason for creating a pointer to pass to a function is when you want to pass a <em>pointer to a pointer</em>.  That lets you change what the original pointer points to, within the function.  Only use that when you need to though, pointers are confusing enough when you first learn about them. <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/13">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/13</link>
        <pubDate>Thu, 09 Jun 2016 23:44:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-13</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I'm wondering if I'm doing something stupid here. My slew function with pointers does work, but I'm wondering if I'm creating pointer variables where I don't need to.</p>

<p>I have a set of variables to store the slew states. Then I created pointer variables to pass in to the function.</p>

<pre><code>// Slew function, with pointer to state variable
int32_t slew(int32_t target, int32_t *state, int32_t slewTime, bool enable) {
	if (enable &amp;&amp; slewTime &gt; 0) {
		*state = ___SMMLA(*state - target, (-1 &lt;&lt; 26) + (slewTime &gt;&gt; 1), *state);
		return *state;
	} else {
		*state = target;
		return target;
	};
};
    
// State variable
int32_t slewState0;
// Pointer to above
int32_t *slewState0Ptr = null;

slewedVar = slew(slewedVar, slewStatePtr, slewTime, true);</code></pre>

<p>I'm now wondering if I could eliminate my pointer variables, somehow.</p>

<p>Would this work, instead, I wonder?</p>

<pre><code>// Slew function, with pointer to state variable
int32_t slew(int32_t target, int32_t *state, int32_t slewTime, bool enable) {
    	if (enable &amp;&amp; slewTime &gt; 0) {
    		*state = ___SMMLA(*state - target, (-1 &lt;&lt; 26) + (slewTime &gt;&gt; 1), *state);
    		return *state;
    	} else {
    		*state = target;
    		return target;
    	};
    };
        
    // State variable
    int32_t slewState0;

    slewedVar = slew(slewedVar, &amp;slewState, slewTime, true);</code></pre>

<p>Sorry for the stupid question...</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/12">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/12</link>
        <pubDate>Fri, 03 Jun 2016 08:53:33 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-12</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="9" data-topic="1738"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>it's perfectly possible to overwrite parts of the firmware</p></blockquote></aside>

<p>Well, overwriting the firmware in flash does not happen accidentally (that takes more than a simple memory write), only to volatile memory, which is fully restored by resetting the board. If you really accidentally manage to write to flash you'll get a CRC mismatch notification when you connect to the board.<br>So it is fairly harmless, but you could observe weird - seemingly unrelated - effects when objects/patches go out of bounds, and those errors could even persist until you reboot the board.<br>My message is really: don't be scared, but if objects behave inconsistently, perhaps check your pointer math.<br>Nothing wrong with your example.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/11">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/11</link>
        <pubDate>Wed, 25 May 2016 00:30:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-11</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I should probably change the conditional to </p>

<p><code>if (enable &amp;&amp; slewTime &gt; 0) {<br>}</code></p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/10">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/10</link>
        <pubDate>Tue, 24 May 2016 21:43:29 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-10</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Point taken, Johannes. I guess it's perfectly possible to overwrite parts of the firmware. I will use with caution..</p>

<p>Here's the function, in case it's of use to anyone. It's a slew/glide effect, with the state being stored in a variable referenced by a pointer argument passed in to the function.:</p>

<pre><code>// Slew function, with pointer to state variable
__attribute__ ( ( always_inline ) ) __STATIC_INLINE int32_t slew(int32_t target, int32_t *state, int32_t slewTime, bool enable) {
	if (enable) {
		*state = ___SMMLA(*state - target, (-1 &lt;&lt; 26) + (slewTime &gt;&gt; 1), *state);
		return *state;
	} else {
		*state = target;
		return target;
	};
};</code></pre>

<p>The actual slew/lag line is copied from the Factory Glide object.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/9">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/9</link>
        <pubDate>Tue, 24 May 2016 21:39:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-9</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>Just keep in mind that there is no protection against misbehavior with pointers, like writing outside the boundaries of an array. Even casting an integer to a pointer allows you to write literally anywhere in memory with unpredictable results.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/8">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/8</link>
        <pubDate>Tue, 24 May 2016 21:23:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-8</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Not random. I needed a functions that was able to write to different variables depending on where it was called from, so pointers seemed like a good way to achieve that. I'm sure I'll be using them again in the future <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>I did a basic course in C many years ago, and just remember people saying pointers were confusing, so I was surprised it seemed relatively easy.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/7">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/7</link>
        <pubDate>Tue, 24 May 2016 21:08:45 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-7</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@rvense]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/rvense">@rvense</a> wrote:</p>
          <blockquote>
              <p>Was it by design or were you just randomly adding *s and &amp;s?</p>

<p>Because that's how I started <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>But it's cool when it clicks. Well done.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/6">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/6</link>
        <pubDate>Tue, 24 May 2016 21:01:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-6</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>That's cool. I have a Launchpad Mini. Wonder if I'll be able to use that, too.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/5">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/5</link>
        <pubDate>Mon, 23 May 2016 15:50:21 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-5</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@hellcore]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/hellcore">@hellcore</a> wrote:</p>
          <blockquote>
              <p>It's all good, I'm happily talking to my Launchpad Pro now and saving myself a lot of MIDI messages <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/4">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/4</link>
        <pubDate>Mon, 23 May 2016 15:34:10 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-4</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Excellent!<br>Rather you than me <img src="/images/emoji/emoji_one/wink.png?v=2" title=":wink:" class="emoji" alt=":wink:"></p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/3</link>
        <pubDate>Mon, 23 May 2016 14:27:16 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-3</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@hellcore]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/hellcore">@hellcore</a> wrote:</p>
          <blockquote>
              <p>Same, building sysex strings.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/2</link>
        <pubDate>Mon, 23 May 2016 14:14:43 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-2</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
      <item>
        <title>Pointers Self-Congratulation</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>In Other News, I successfully used C pointers as function arguments for the first time yesterday.<br>Can I have a medal?</p>

<p><img src="/images/emoji/emoji_one/stuck_out_tongue.png?v=2" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/pointers-self-congratulation/1738/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/pointers-self-congratulation/1738/1</link>
        <pubDate>Mon, 23 May 2016 08:22:31 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1738-1</guid>
        <source url="http://community.axoloti.com/t/pointers-self-congratulation/1738.rss">Pointers Self-Congratulation</source>
      </item>
  </channel>
</rss>
