<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Karplus Strong implementation</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29</link>
    <description>Im looking at implementing Karplus Strong on Axoloti, and thought it might be interesting to discuss it here to learn a bit more about patching axoloti.

so the basic algorithm is described well here: https://en.wikipedia.org/wiki/Karplusâ€“Strong_string_synthesis

There is also an implementation in the axoloti tutorials, but Id like to refine this... as it diverges from the above explanation in a couple of ways.

a) the noise burst should theoretically be N samples, i.e. its controlled by the pitch. rather than be under users control
b) the damping is handed by a 1 pole low pass filter.

but really the main reason I&#39;m doing this is for my own &#39;education&#39; ... and perhaps others may learn too.

I see this as a two part process
a) understanding the tutorial patch fully... and the objects it uses
b) creating a new patch, with the changes mentioned above.</description>
    
    <lastBuildDate>Fri, 11 May 2018 17:10:09 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Couldn't help it <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> </p>

<p>Here is my version of karplus strong. To me the tuning seems correct for all octaves.<br>I hacked MTOF object instead of using MTOD. I do have to offset the pitch with -4, but after that it seems correct. But I might have missed something, I dunno:</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/8/8e00b31b74c901c583f51434e1f0047550d3118b.axp">Karplus 1.3 FOR COM .axp</a> (12.2 KB)</p>

<p>(Okay, routing is not correct here, but pitch seems to be)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/13">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/13</link>
        <pubDate>Fri, 11 May 2018 16:54:01 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-13</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>About the 16 samples issue. I think this can be bypassed by hardcoding everything into the object, no? Feedback created internally in the object should fix the 16 samples issue as far as I know and right tuning should be possible without too much "after math" <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/12">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/12</link>
        <pubDate>Fri, 11 May 2018 15:07:19 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-12</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@chrisj Chris Johnson]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/chrisj">@chrisj</a> wrote:</p>
          <blockquote>
              <p>I was just watching the "Bela" video with its karplus-strong instrument and correctly figured someone was doing it for Axo: right out of the box we have two audio-rate inputs that could drive such an implementation in two voices (or, two trigger sources that could drive X many voices in turn, like the 'Pluck' eurorack module)</p>

<p>It does seem like tuning issues could relate to the sample rate: at high frequencies the tuning granularity would get increasingly worse. Oversampling would help <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/11">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/11</link>
        <pubDate>Fri, 11 May 2018 12:25:22 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-11</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@jfcharles Jean-Francois Charles]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jfcharles">@jfcharles</a> wrote:</p>
          <blockquote>
              <p>Thanks <a class="mention" href="/u/janifr">@janifr</a>!<br>Indeed, it looks like we have to subtract 17 samples, not 16 samples, to account for the feedback loop. This is what you achieve with your additional "-0.03".<br>I updated my code, which is compatible with various delay line lengths:<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/8/87d616546b0b5ec5a86a0540ca3c16c3f9eedbd8.axp">20_karplus_strong-fix-02.axp</a> (6.2 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/10">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/10</link>
        <pubDate>Sun, 05 Nov 2017 17:18:33 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-10</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@janifr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/janifr">@janifr</a> wrote:</p>
          <blockquote>
              <p>I think there is still some tuning issues. I just uploaded in contrib my patch based on tutorial, harpsimono. Maybe you could try it out.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/9">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/9</link>
        <pubDate>Sat, 04 Nov 2017 21:20:25 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-9</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@jfcharles Jean-Francois Charles]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jfcharles">@jfcharles</a> wrote:</p>
          <blockquote>
              <p>Reviving this conversation since it doesn't look to be over; the tutorial still mentions a potential bug. Here is my take on this problem.<br>The tuning reference also depends on the length of the delay line: correct scaling is "662.65194 divided by the number of samples in the delay line".<br>Here is a version of the patch with the correct scaling, as well as an object that takes the length of the delay line as an attribute. If the idea of "delay/mtod" is to include the scaling inside the object, then maybe this is a possible implementation.<br>Thanks for any comment on the code, I hope someone with more experience can make it more efficient if possible.<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/0/0eba3032c3d1c4c842ff0abeb4a4bdd3593b0ab4.axp">20_karplus_strong-fix.axp</a> (8.3 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/8">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/8</link>
        <pubDate>Sat, 28 Oct 2017 14:02:35 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-8</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@ilovedrums247]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/ilovedrums247">@ilovedrums247</a> wrote:</p>
          <blockquote>
              <p>still sounds a little out of tune on mine, but maybe someone has remedied this by now?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/7</link>
        <pubDate>Thu, 26 May 2016 17:41:48 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@buZz buZz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/buzz">@buZz</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="29"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>Still, the mtod tuning reference is off. That is an easy bugfix.</p></blockquote></aside>

<p>has this been fixed now?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/6</link>
        <pubDate>Wed, 30 Mar 2016 15:07:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="29"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>Still, the mtod tuning reference is off. That is an easy bugfix.</p></blockquote></aside>

<p>a bug in the mtod (axo) object?</p>

<p>the -c I had wondered if it was that, forgot that the buffer was 16 samples, but makes perfect sense now <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt="smile" width="20" height="20"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/5</link>
        <pubDate>Wed, 15 Jul 2015 10:47:09 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>So in the Karplus Strong tutorial patch, there is a delay line of 2048 samples allocated.<br>mtod will outlet the relative delay time modulation, but because of the one-buffer delay the effective delay time is 16 samples longer. Doing -0.5(/64) compensates that since 2048*-0.5/64=-16 samples.<br>After this compensation the delay line pitch is chromatic.</p>

<p>Still, the mtod tuning reference is off. That is an easy bugfix.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/4</link>
        <pubDate>Mon, 13 Jul 2015 17:59:15 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>Basically mtod does not compensate for the one-buffer (16 audio samples) implicit delay caused by the feedback connection. And it cannot do that properly, since the delay line length is selectable in the delay/write object, while the delay time unit of the delay/read object is in fractions of the full delay time. The mtod object does not have a reference to that object.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/3</link>
        <pubDate>Sun, 12 Jul 2015 13:11:10 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>Ok, so first lets dig into the tutorial patch.</p>

<p>basically, it create a noise burst, controlled by a VCA, which writes into the delay buffer, and also out to the output.</p>

<p>the feedback loop is where it gets interesting...<br>working 'backwards' we can see it reads the delay line (using linear interpolation), and thats mixed in, sent to the output, and written back into the buffer.  (hence the feedback loop)</p>

<p>at the start of this chain, we can see that delay/mtod is used to calculate the length of the delay line used (its a % of the buffer size, determined in the write object)... and then uses linear interpolation to go from k-rate to audio rate.</p>

<p>ok, this basically makes sense... but the bits I'm still investigating are:<br>- the mtod tuning reference... my assumption is this has to be configured so that it matches the delay buffer specified in delay write BECAUSE the delay time is a function of frequency but the input for delay read is a % (actually a ratio, but equiv for discussion purposes) of the buffer.  BUT in practice if I tune this with a tuner, I don't see the numbers I expect.<br>- maths/-c not sure what this is for, it could be an offset to allow for feedback sample, but its unclear, and seems to make little difference in practice when i tested with a tuner.<br>- conv/interp is this required?  I think this is only required if the pitch changes over time e.g. a pitch bend? otherwise pitch is constant, so no interp required. or perhaps its just 'tidier' to do this when going from k-rate to s-rate.</p>

<p>the main area of investigation is my understanding of MtoD and the tuning reference and how it relates to the buffer size in write...   and ensuring that the resulting output is correctly tuned <br>(a bit concerning there is a comment that there is a bug in the tuning reference... hopefully if I figure this out, then I can 'fix it' <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt="smile" width="20" height="20"> )</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/2</link>
        <pubDate>Sat, 11 Jul 2015 13:22:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
      <item>
        <title>Karplus Strong implementation</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>Im looking at implementing Karplus Strong on Axoloti, and thought it might be interesting to discuss it here to learn a bit more about patching axoloti.</p>

<p>so the basic algorithm is described well here: <a href="https://en.wikipedia.org/wiki/Karplus%E2%80%93Strong_string_synthesis">https://en.wikipedia.org/wiki/Karplusâ€“Strong_string_synthesis</a></p>

<p>There is also an implementation in the axoloti tutorials, but Id like to refine this... as it diverges from the above explanation in a couple of ways.</p>

<p>a) the noise burst should theoretically be N samples, i.e. its controlled by the pitch. rather than be under users control<br>b) the damping is handed by a 1 pole low pass filter.</p>

<p>but really the main reason I'm doing this is for my own 'education' ... and perhaps others may learn too.</p>

<p>I see this as a two part process<br>a) understanding the tutorial patch fully... and the objects it uses<br>b) creating a new patch, with the changes mentioned above.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29/1</link>
        <pubDate>Sat, 11 Jul 2015 13:02:50 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-29-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/karplus-strong-implementation/29.rss">Karplus Strong implementation</source>
      </item>
  </channel>
</rss>
