<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Improvements/Wishes for the patcher</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257</link>
    <description>Is there a plan to improve the Patcher?

After one day of working with the patcher my eyes hurt. I use a high resolution monitor and the fonts are so terrible small and hard to read  It is hard for older people with poor eyesight like me. :older_man:

A sort of a Zoom funktion or a font changer or something like that would be extremly helpful.</description>
    
    <lastBuildDate>Thu, 08 Mar 2018 16:49:46 +0000</lastBuildDate>
    <category>Software</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@servandisco servando barreiro]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/servandisco">@servandisco</a> wrote:</p>
          <blockquote>
              <p>Hej!.  the keyboard object could be like the [key] object in puredata.  No inlets and just an ascii output.   then using [== ], one can use the keys to control whatever.<br>A more sofisticated version could be one with a qwerty to midi notes converter like ableton live/ fasttracker does but that functionality will just pop up automatically in the forum as soon as there is a 'keyboard' object, i think..  <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:">.</p>

<p>Regarding wishes for the patcher..  I wish that it was possible to segment the subpatches at 8 or 12 knobs..  so "big" objects with more than 16 knobs don't look so long (in my screen sometimes I even have to scroll down to access lower parameters).   But I'm aware about what that change could mess up....   I wish I knew enough to try myself to work in the Gui.. <br>greetings<br>S</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/322">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/322</link>
        <pubDate>Thu, 08 Mar 2018 16:33:48 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-322</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Apologies if this has already been covered, but I think the ability to create custom port types would be really really useful.</p>

<p><a class="mention" href="/u/lokki">@lokki</a> and I are working on a set of objects that require the connection of many parameters in order for them to work. </p>

<p><a class="mention" href="/u/lokki">@lokki</a> hit on the idea of using red Audio Buffer ports to roll all the parameters into one multiplexed signal, using each of the 16 items in the buffer array to hold one parameter.</p>

<p>This is great, but, obviously, it's not audio data, and connecting the output of one of our objects to an audio output will produce a painful blast of noise, or at least nothing useful.</p>

<p>It would be great to be able to define a custom array type, and have ports of that type only be able to be connected to other ports of the same type. That way, you can save time for your users, patching up lots of ports, by multiplexing several parameters, but avoid the issue of eg ports meant to carry non-audio data being accidentally connected to audio outputs.</p>

<p>I'd envisage being able to:</p>

<ul>
<li>Choose any existing data-type/representation for the port (so avoiding the issues associated with allowing arbitrary port types)</li>
<li>Choose a colour for the ports</li>
<li>Choose whether the port should be allowed to be connected to ports of other types</li>
</ul>

<p>Cables connecting custom ports could be visually distinguished by eg being striped.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/321">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/321</link>
        <pubDate>Thu, 08 Mar 2018 09:33:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-321</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>To those who might also be interested in my last wish on the list, reading out a raw files length in samples, <a class="mention" href="/u/drjustice">@DrJustice</a> was kind enough to create that object.</p>

<p>Look for:<br>drj/file/file_size </p>

<p>Thank <a class="mention" href="/u/drjustice">@DrJustice</a>  <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/320">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/320</link>
        <pubDate>Sat, 16 Sep 2017 13:35:00 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-320</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/thetechnobear">@thetechnobear</a> </p>

<p>As I said in my second post to Lokki, fixed table sizes are okay, that is not the main issue. The main issue is being able to read out the size of the file loaded into the table. Then one can automatically set compensation using a dial or whatever:</p>

<p>Would be super nice to be able to do this on patch start up:<br>1. Read out samples file length<br>2. Calculate what to set on a dial, from the samples length<br>3. set the math on the dial.<br>4. Play your sample happily at the right pitch and time.</p>

<p>This can easily be done and I dont mind patching it manually. If we could just get that sample length it woud make many things easier. And I don't think there are any objects that does this in the com.lib. if you know of one I would love to see it.</p>

<aside class="quote" data-post="318" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>... I suspect someone has already done this in the community library given its simplicity.</p></blockquote></aside>

<p>If it is a simple thing to do, it would be a lovely update <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/319">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/319</link>
        <pubDate>Mon, 28 Aug 2017 17:09:16 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-319</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/lokki">@lokki</a> is correct, it's the access code that is optimized, taking advantage of the end of the table = 64 which is also a power of 2.<br>That's not to say you can't easily create a variation where you lose this optimization, particularly if you access by int index rather than 0..100%(0..64)<br>( which also has its advantages which you lose) </p>

<p>... I suspect someone has already done this in the community library given its simplicity.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/318">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/318</link>
        <pubDate>Mon, 28 Aug 2017 14:33:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-318</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Yes, I dont mind having fixed tablesizes like that. But lets say you set the table size to 262144 samples... And then load a sample that is 134333 sample long. There there could still be some kind of compensation internally, that first detects the length of the sample and then automatically sets a limit within the 262144 fixed samplesize to 134333 samples. This way you still keep the fixed table sizes, but Axoloti automatically detects the sample size and compensates for it within the fixed table size. </p>

<p>But the trick is getting the size of the sample loaded. That information is essential and can be used for many things and it can still be used even though the table sizes are fixed.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/317">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/317</link>
        <pubDate>Mon, 28 Aug 2017 12:13:15 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-317</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>i think the fixed type table sizes (power of 2?) are there because you can optimise the code quite a bit this way...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/316">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/316</link>
        <pubDate>Mon, 28 Aug 2017 12:06:38 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-316</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>I think this also have been up several times before, but would be super awesome to be able to read the size of a raw/wave files in samples, so the tablesize is set automatically, according to the actual loaded audio sample. Like "-read resize" does in PD. </p>

<p>This is simply a must when working with tables and audio in general and should be implemented into Axoloti. It would make working with audio much simpler and much more fun too <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/315">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/315</link>
        <pubDate>Mon, 28 Aug 2017 11:53:50 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-315</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@stekfdd Mike Smirnov]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/stekfdd">@stekfdd</a> wrote:</p>
          <blockquote>
              <p>"New Object" window - please make resizable. On 27" display - its a pain to view on small window with part of text, part of big-panel device.. Uncomfortable!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/314">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/314</link>
        <pubDate>Mon, 21 Aug 2017 17:19:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-314</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Sounds interesting with new parameter approach and how scaling would work <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/313">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/313</link>
        <pubDate>Sat, 19 Aug 2017 16:34:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-313</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>yeah, when I get back to looking at the (new) code soon , I'll take another look.<br>certainly the new parameters system has more meta data, so it should now know the min/max that is specified in the parameters type. if so then it can scale using that information.</p>

<p>this would still mean we'd need to create a const/i 7bit to have this limit imposed on it... or users can create their own object with min/max on it... <br>e.g. if you want 0..4, then this would be split over the 0...127 range, rather than a dumb usage of using 0...4 midi which on many CC pots would be 'fiddly' and create a dumb dead range past 4..<br>as I said the 'use case' is wider than merely allowing 0..127 CC on const/i</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/312">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/312</link>
        <pubDate>Sat, 19 Aug 2017 16:28:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-312</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Thanks <a class="mention" href="/u/thetechnobear">@thetechnobear</a></p>

<p>Yes, as I mentioned I know the limits of midi 0-127. Personally that would be a fine object for me. I use the ctrl/i for everything and in most cases I never exceed values above 0-127. Like for muxers, demuxers etc..... I dont think a lot of people use muxers with 128 inputs so I would say in majority of cases 0-127 would be enough.</p>

<aside class="quote" data-post="310" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>0...127 i.e. a limited part of the range which would not be consistent with other type mapping.</p></blockquote></aside>

<p>But one could still have a ctrl/i.. for the huge ranges... And add a new one, which stays with in midi range 0-127, like ctrl/i cc ..... To give some more control over that object.</p>

<p>And I know some changes are being made, so I just hoping that this is a thing that would be taken into consideration when making the changes <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> </p>

<p>See it as a friendly reminder <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/311">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/311</link>
        <pubDate>Sat, 19 Aug 2017 16:11:18 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-311</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="309" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/j/7ea924/40.png" class="avatar">jaffasplaffa:</div>
<blockquote><p>Scaling is an issue because of the midi range only goes from 0-127 and ctrl/i has a lot bigger range. But we use scaling for most of the other objects all the time so I personally dont see that as a problem.</p></blockquote></aside>

<p>thats is the point....the midi range (0...127) is bound to the whole range on other types e.g. -64..64, 0..64</p>

<p>if we did this for const/i it would bind from 0...(2^32)-1 which is not what you want, you want to bind to 0...127 i.e. a limited part of the range which would <strong>not</strong> be consistent with other type mapping.</p>

<p>for this to work, const/i would need to have some kind of bound range, so you could say min=0/max=127.</p>

<p>often this is the reason things are not done, because to do them 'properly' requires more changes than it may appear to someone not familiar with the code... not because the request is being ignored/dismissed.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/310">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/310</link>
        <pubDate>Sat, 19 Aug 2017 15:47:50 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-310</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>I get your suggestion but not what I was aiming for..</p>

<p>Again, it is one of the most used objects in Axoloti and this have been debated many times over the last 2 years. And the reason for not implementing it was from developer: scaling, </p>

<p>Scaling is an issue because of the midi range only goes from 0-127 and ctrl/i has a lot bigger range. But we use scaling for most of the other objects all the time so I personally dont see that as a problem. </p>

<p>Anyway, I'd rather hear what <a class="mention" href="/u/johannes">@johannes</a> says about it, if this is something that might be adressed in the updates he is working on, cause then there is no need to debate it anymore <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/309">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/309</link>
        <pubDate>Sat, 19 Aug 2017 10:51:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-309</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>yeah, i got the part that you want to control the ctrl/i object via midi. my question was if you could not accomplish the same  with a midi/in/cc i? i know it is a different workflow, but the result could be the same, no? you can even attach a disp/i to the midi object to see the numbers move...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/308">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/308</link>
        <pubDate>Sat, 19 Aug 2017 10:44:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-308</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>I mean the ctrl/i object....... I want to be able to assign it to midi cc, which you cannot atm:</p>

<p><img src="//community.axoloti.com/uploads/default/original/2X/3/3755a8dee238f2dd15780d70c9fecfac6b2821d3.png" width="274" height="165"></p>

<p>I want to see the numbers move when I automate the parameter, like all the other parameters objects do.</p>

<p>This and the dial are probably the most commonly used objects in Axoloti. And I really don't understand why one of the most used and most common objects still cannot be assigned to midi cc, even after 2 years of development on the platform. Many people have mentioned this, dating all the way back to the first days of Axoloti. This cannot be implemented on object level, belive me if it could I would have done it long time ago. It has to be done in Java. Which I don't know anything about.</p>

<p>Anyway that is my opinion. As I wrote, I know Johannes is working on some changes on how parameters are handled. Those updates could also change this, so it would be possible in the future. But we will see.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/307">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/307</link>
        <pubDate>Sat, 19 Aug 2017 10:22:38 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-307</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@janvantomme Jan Vantomme]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/janvantomme">@janvantomme</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="304" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/j/7ea924/40.png" class="avatar">jaffasplaffa:</div>
<blockquote>
<p>Add midi cc to the ctrl/i, please!</p>
<p>Or create a new object ctrl/i cc so you can use it with midi cc.</p>
</blockquote></aside>

<p>Or you could just use the <strong>midi/in/cc i</strong> or <strong>midi/in/cc i</strong> any objects.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/306">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/306</link>
        <pubDate>Sat, 19 Aug 2017 10:19:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-306</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>i don't get it, can you explain a little further? there is already midi/in/cc i. so would this not do what you want?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/305">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/305</link>
        <pubDate>Sat, 19 Aug 2017 10:18:49 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-305</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>This is probably the one feature I could use the most. It have been mentioned many many times by other users too and I really really would like to see this implemented in next release, as I have mentioned several times before. </p>

<p><strong>Add midi cc to the ctrl/i, please!</strong></p>

<p>Or create a new object ctrl/i cc so you can use it with midi cc. </p>

<p><strong>Please!</strong> This is a super simple thing to add and would make Axoloti a lot more fun using. I know some people say "what about scaling, since ctrl/i goes a lot higher than 127 which is the limit of midi CC".... I'd say let's just TRY IT and see if it is an actual problem? Which I personally dont believe it is. You can scale the "ctrl/i cc" to anything using math, as you can with any other object in Axoloti, like for example the dials.... So I dont believe this is going to be an issue. If so, I'll be the first to let you know <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> </p>

<p><a class="mention" href="/u/johannes">@johannes</a><br>I know you are working on some new stuff... Is this going to change as part of the new stuff that you are working on?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/304">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/304</link>
        <pubDate>Sat, 19 Aug 2017 06:29:55 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-304</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@axoman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/axoman">@axoman</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="302" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>gain - that's possible, but its sent to the codec , so I don't think you would want to change it rapidly, and its very 'stepped.' (not sure if it would cause audio glitches, id have to try to see) <br>.. its more a coarse adjustment. e.g. like switches on mixers used for line/instrument level.<br>but yeah, I plan to add it, just not got around to it really.<br>(anyone could do it if they want to, just lift the code out of the relevant config object, and convert it to a parameter or inlet - just be careful to keep it in the relevant range!)</p></blockquote></aside>

<p>Great stuff, although I think I'll give creating it myself a miss in case I break something (as it's controlling an actual on-board hardware amplifier).  I don't need it 'right now' so no worries there, but I would definitely incorporate that into any standalone effect unit or pedal I make with Axoloti - or anything that takes an audio input really.</p>

<aside class="quote" data-post="302" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>8bit is depth, not SR...</p></blockquote></aside>

<p>Dear Mark, <em>even</em> axoman knows that <img src="//community.axoloti.com/images/emoji/twitter/grin.png?v=5" title=":grin:" class="emoji" alt=":grin:"> <img src="//community.axoloti.com/images/emoji/twitter/stuck_out_tongue_winking_eye.png?v=5" title=":stuck_out_tongue_winking_eye:" class="emoji" alt=":stuck_out_tongue_winking_eye:"></p>

<aside class="quote" data-post="302" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote>
<p>see, the thing is... what is clever about what Johannes has done, is his bringing the native DSP coding  necessary for these kind of boards to everyone, before it was just (embedded) developers. and these boards have huge potentially because they are cheap/low power/flexible... </p>
<p>That's why I love Axoloti, its got a lovely niche, for creating small instruments easily ... sure you can do bigger things too, but like all complex things, your gonna have to roll your sleeves up <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote></aside>

<p>Understood, and I totally agree.  I don't know of anything as flexible as Axoloti that allows such powerful creations with such a little amount of knowledge required.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/303">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/303</link>
        <pubDate>Tue, 15 Aug 2017 09:46:25 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-303</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>gain - that's possible, but its sent to the codec , so I don't think you would want to change it rapidly, and its very 'stepped.' (not sure if it would cause audio glitches, id have to try to see) <br>.. its more a coarse adjustment. e.g. like switches on mixers used for line/instrument level.<br>but yeah, I plan to add it, just not got around to it really.<br>(anyone could do it if they want to, just lift the code out of the relevant config object, and convert it to a parameter or inlet - just be careful to keep it in the relevant range!)</p>

<p>8bit is depth, not SR... and given the processor is 32bit, unless you do some special algorithms, its not going to save you anything.<br>I think (from memory, and to lazy to go recheck codec datasheet) the codec supports other sample rates, so its possible, its just you wont be able to use any objects that use SR dependent data/algorithms, ... as I said this was discussed in a thread on VSTs if you want more info.</p>

<p>.. and yeah, real time switching, would not be worth the overhead in cpu processing.</p>

<p>see, the thing is... what is clever about what Johannes has done, is his bringing the native DSP coding  necessary for these kind of boards to everyone, before it was just (embedded) developers. and these boards have huge potentially because they are cheap/low power/flexible... </p>

<p>That's why I love Axoloti, its got a lovely niche, for creating small instruments easily ... sure you can do bigger things too, but like all complex things, your gonna have to roll your sleeves up <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/302">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/302</link>
        <pubDate>Mon, 14 Aug 2017 21:39:48 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-302</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@axoman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/axoman">@axoman</a> wrote:</p>
          <blockquote>
              <p>Thanks for the heads-up, Mark, good to hear what's cooking-up behind the scenes <img src="//community.axoloti.com/images/emoji/twitter/yum.png?v=5" title=":yum:" class="emoji" alt=":yum:"></p>

<p>BTW, did you see my other reply?  I replied but I think you might have missed it.  So does that apply to what I asked about adjusting the gain as well, or would that be possible?</p>

<p>Regards wanting to adjust the sample rate, there was really three reasons for that.  The main reason is because before I discovered Axoloti, I was looking into developing a sort of hardware 8-bit tracker using an Arduino.  Obviously it's ideal for 8-bit stuff, but when I saw Axoloti, I thought wow, if it can manage all that powerful processing at 48KHz, imagine how huge and complex things could be if you were only demanding the lower bit-depth and rates used for the 8-bit stuff.  So I had this crazy idea to make a huge hardware 8-bit tracker using Axoloti <img src="//community.axoloti.com/images/emoji/twitter/stuck_out_tongue_winking_eye.png?v=5" title=":stuck_out_tongue_winking_eye:" class="emoji" alt=":stuck_out_tongue_winking_eye:"></p>

<p>I'll just have to give that idea a miss, or maybe do that specific project with Arduino as originally planned.</p>

<p>The second reason, I suppose, is because I've been spoiled by that sampler I mentioned in the other thread, the Yamaha A3000.  I've had it a while and there's the ability to monitor live while you switch the sample-rate, so that means you get to hear exactly what the result is going to sound like even before you've captued it.  I just thought that would be awesome to have in Axoloti for use with sampling etc.  It would also serve (the third reason) to lower CPU demands at lower sample rates and allow larger projects.</p>

<p>It's a shame that can never happen, but they're the reasons I wanted it, would have been very versatile!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/301">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/301</link>
        <pubDate>Mon, 14 Aug 2017 18:33:42 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-301</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="299" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/a/848f3c/40.png" class="avatar">axoman:</div>
<blockquote><p>let the ability to freely set the master sample rate of Axoloti be one of them</p></blockquote></aside>

<p>(I think) unlikely to be done for axo directly as there are quite a few pre-calculated/hard coded things for 48k SR, so changing this would require a lot of work.  this has been discussed previously, with regards to creating VSTs from Axo.</p>

<aside class="quote" data-post="299" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/a/848f3c/40.png" class="avatar">axoman:</div>
<blockquote><p>Basically just making some of the more obvious under-the-hood settings available for switching live by the user, while a patch is running and away from the computer.</p></blockquote></aside>

<p>again, whilst some things can be changed without performance issues, others cant.<br>remember, many things that cant be changed currently are that way, so that the compiler can produce more efficient (=faster) code, make all things flexible and things get slower (= you can make less complex patches) ... its a trade-off.</p>

<p>also remember unlike a PC (etc) , Axo does not have the cpu power (or toolchain) to compile on the board, it has to use a PC to do this heavy work (like arduino, or any stm32f based product) </p>

<p>that said, I know Johannes is keen to breakdown the EDIT/LIVE barrier... similarly we have talked about making the difference between parameter and attributes a little less 'technical'. <br>the general goal, is to speed up the develop/test/play cycle for patch development.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/300">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/300</link>
        <pubDate>Mon, 14 Aug 2017 17:27:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-300</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@axoman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/axoman">@axoman</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="298" data-topic="257"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>... also, I should point out, <strong>many</strong> things are changing under the hood ...</p></blockquote></aside>

<p>Please let the ability to freely set the master bit-depth and sample rate of Axoloti be one of them (as well as the ability to allow the user to select it while the patch is live using inlets).  Basically just making some of the more obvious under-the-hood settings available for switching live by the user, while a patch is running and away from the computer.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/299">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/299</link>
        <pubDate>Mon, 14 Aug 2017 17:13:00 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-299</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
      <item>
        <title>Improvements/Wishes for the patcher</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>yeah, as I said we don't support dragging of objects, only subpatches....<br>(they are completely different from a coding perspective)</p>

<p>next release, is still a way off - Johannes is working hard on it, and I'm planning to help out after my current commitments in august... so no date, its going to be at least a 'few months' yet .. and don't take that as a firm few months either <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> </p>

<p>also, I should point out, <strong>many</strong> things are changing under the hood , so don't expect too much on the UI, many of the things being changed are to help for the future... and other things.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/298">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257/298</link>
        <pubDate>Mon, 14 Aug 2017 15:54:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-257-298</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/improvements-wishes-for-the-patcher/257.rss">Improvements/Wishes for the patcher</source>
      </item>
  </channel>
</rss>
