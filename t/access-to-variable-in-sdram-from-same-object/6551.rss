<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Access to variable in SDRAM from same object</title>
    <link>http://community.axoloti.com/t/access-to-variable-in-sdram-from-same-object/6551</link>
    <description>Hello everyone.

Some background: I made a light 8 track step sequencer holding its data in a 2D array of uint16_t (each bit representing a step on or off). This pattern data is loaded/saved to the SD card and modified live. To avoid using precious SRAM, I declared it in SDRAM:
```cpp
static uint16_t pattern[8][8] __attribute__ ((section (&quot;.sdram&quot;)));
```

The thing I found rather weird, is that declaring it inside *Local Data* made it &quot;invisible&quot; to the rest of the code:
```text
[...]/axoloti/build/xpatch.o: In function `rootc::Init()&#39;:
xpatch.cpp:([...]): undefined reference to `rootc::instance8__tracks__sequencer__1::pattern&#39;
[...]/axoloti/build/xpatch.o: In function `rootc::dsp()&#39;:
xpatch.cpp:([...]): undefined reference to `rootc::instance8__tracks__sequencer__1::pattern&#39;
```

What I had to do to make everything work was to declare the pattern data inside *Init Code* and keep a pointer to it.
#### Local Data:
```cpp
uint16_t (*pattern)[8];
```
#### Init code:
```cpp
static uint16_t pattern_data[8][8] __attribute__ ((section (&quot;.sdram&quot;)));
pattern = pattern_data;
```

Can somebody point me to some directions as to why it only works that way ?
And why may the attribute `((section (&quot;.sdram&quot;)))` only be added to static variables ?


Thanks in advance !</description>
    
    <lastBuildDate>Wed, 08 Apr 2020 18:46:23 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="http://community.axoloti.com/t/access-to-variable-in-sdram-from-same-object/6551.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Access to variable in SDRAM from same object</title>
        <dc:creator><![CDATA[@dibi dibi]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/dibi">@dibi</a> wrote:</p>
          <blockquote>
              <p>Hello everyone.</p>

<p>Some background: I made a light 8 track step sequencer holding its data in a 2D array of uint16_t (each bit representing a step on or off). This pattern data is loaded/saved to the SD card and modified live. To avoid using precious SRAM, I declared it in SDRAM:<br></p>

<p></p><pre><code class="lang-cpp">static uint16_t pattern[8][8] __attribute__ ((section (".sdram")));</code></pre>

<p>The thing I found rather weird, is that declaring it inside <em>Local Data</em> made it "invisible" to the rest of the code:<br></p>

<p></p><pre><code class="lang-nohighlight">[...]/axoloti/build/xpatch.o: In function `rootc::Init()':
xpatch.cpp:([...]): undefined reference to `rootc::instance8__tracks__sequencer__1::pattern'
[...]/axoloti/build/xpatch.o: In function `rootc::dsp()':
xpatch.cpp:([...]): undefined reference to `rootc::instance8__tracks__sequencer__1::pattern'</code></pre>

<p>What I had to do to make everything work was to declare the pattern data inside <em>Init Code</em> and keep a pointer to it.</p>

<h4>Local Data:</h4>

<p></p><pre><code class="lang-cpp">uint16_t (*pattern)[8];</code></pre>

<h4>Init code:</h4>

<p></p><pre><code class="lang-cpp">static uint16_t pattern_data[8][8] __attribute__ ((section (".sdram")));
pattern = pattern_data;</code></pre>

<p>Can somebody point me to some directions as to why it only works that way ?<br>And why may the attribute <code>((section (".sdram")))</code> only be added to static variables ?</p>

<p>Thanks in advance !</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/access-to-variable-in-sdram-from-same-object/6551/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/access-to-variable-in-sdram-from-same-object/6551/1</link>
        <pubDate>Wed, 08 Apr 2020 13:30:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6551-1</guid>
        <source url="http://community.axoloti.com/t/access-to-variable-in-sdram-from-same-object/6551.rss">Access to variable in SDRAM from same object</source>
      </item>
  </channel>
</rss>
