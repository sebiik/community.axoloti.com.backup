<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How to execute tanf from math.h?</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070</link>
    <description>Hey!

I am trying to port some filters from faust to axoloti and I am having some trouble executing a standard function. What is the correct way to get **tanf** to work?

    Generate code complete
    Start compiling patch
    Compiling patch... with /Applications/Axoloti.app/Contents/Java/firmware
    BDIR = /Users/logsol/Documents/axoloti/build
    FIRMWARE = .
    RM
    APP
    ! /Users/logsol/Documents/axoloti/build/xpatch.h.gch
    . /Applications/axoloti_runtime/platform_osx/arm-none-eabi/include/math.h
    . /Applications/axoloti_runtime/platform_osx/lib/gcc/arm-none-eabi/4.9.3/include/stdint.h
    . /Applications/axoloti_runtime/platform_osx/arm-none-eabi/include/stdlib.h
    LINK
    /Users/logsol/Documents/axoloti/build/xpatch.o: In function `PatchProcess(long*, long*)&#39;:
    xpatch.cpp:(.text+0xc0): undefined reference to `tanf&#39;

In the output log I see that math.h is being included and when I search this file, I do see a reference to tanf in it:

    ...
    /* Single precision versions of ANSI functions.  */

    extern float atanf _PARAMS((float));
    extern float cosf _PARAMS((float));
    extern float sinf _PARAMS((float));
    extern float tanf _PARAMS((float));
    extern float tanhf _PARAMS((float));
    extern float frexpf _PARAMS((float, int *));
    extern float modff _PARAMS((float, float *));
    extern float ceilf _PARAMS((float));
    extern float fabsf _PARAMS((float));
    extern float floorf _PARAMS((float));
    ...

Can anybody shine some light on this? Or maybe I should be using another tangent implementation altogether?

Cheers!</description>
    
    <lastBuildDate>Wed, 24 Nov 2021 12:36:26 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How to execute tanf from math.h?</title>
        <dc:creator><![CDATA[@scjurgen Juergen Schwietering]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/scjurgen">@scjurgen</a> wrote:</p>
          <blockquote>
              <p>It is an old topic, but let's shed some light on tweaking axoloti firmware. </p>

<p>Firstly, I guess for a tanf function it is better to checkout the dsp/filter.h of the stmlib instead of going with sinx/cosx. <a href="https://github.com/pichenettes/stmlib/blob/master/dsp/filter.h" rel="nofollow noopener">https://github.com/pichenettes/stmlib/blob/master/dsp/filter.h</a> <br>Many functions are left out of the axoloti, this is to preserve space and to remove expensive functions (like tan).</p>

<p>However, if you like going down the rabbit hole <img src="//community.axoloti.com/images/emoji/twitter/rabbit2.png?v=5" title=":rabbit2:" class="emoji" alt=":rabbit2:">, you can add lot's of stuff (like adding useful arm algorithms, optimizations, dsp algorithms) by tweaking the firmware build. In the firmware folder of your installation you will find a compile_firmware_{platform} file, tweak the Makefile to add stuff to the firmware, run the build script and you should be good to go. I needed this once for some arm related libraries (CMSIS DSP) and for adding USB SysEx support. </p>

<p>Once you compiled the firmware, the Axoloti IDE will notice the changed firmware CRC and asks you to flash your board with the new version. All previously compiled patches need to be recompiled to make them work and obviously your new patches will not be compatible with the 'standard' axoloti software.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/5</link>
        <pubDate>Wed, 24 Nov 2021 12:36:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7070-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070.rss">How to execute tanf from math.h?</source>
      </item>
      <item>
        <title>How to execute tanf from math.h?</title>
        <dc:creator><![CDATA[@logsol Karl Pannek]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/logsol">@logsol</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="7070"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/n/51bf81/40.png" class="avatar">Nosnibor:</div>
<blockquote><p>Usually you'd just add an option ( -lm for the math library) to the command line that starts the compiler, but as the Axoloti software calls the compiler automatically</p></blockquote></aside>

<p>Ahh that is why! Makes sense, thanks!</p>

<p>Luckily I found out that <code>tan(x)</code> is equivalent to <code>sin(x) / cos(x)</code> so I am using <code>sinf(x) / cosf(x)</code> as a workaround, which seems to work fine!</p>

<p>Would be interesting to find out though if it is somehow possible to make a patch add such compiler options..</p>

<aside class="quote" data-post="2" data-topic="7070"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/jaffasplaffa/40/5808_1.png" class="avatar">jaffasplaffa:</div>
<blockquote><p>Is it something that might be added to the community library? <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p></blockquote></aside>

<p>Yes, if I get it to work, I'd be happy to share <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/4</link>
        <pubDate>Mon, 18 Jan 2021 21:57:14 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7070-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070.rss">How to execute tanf from math.h?</source>
      </item>
      <item>
        <title>How to execute tanf from math.h?</title>
        <dc:creator><![CDATA[@Nosnibor]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/nosnibor">@Nosnibor</a> wrote:</p>
          <blockquote>
              <p>Including the header file is not enough. The header file only tells the compiler that such a function exits and not to worry about it, the linker will add it later. But the linker wants to be told explicitly which libraries to pull additional functions from. Usually you'd just add an option ( -lm for the math library) to the command line that starts the compiler, but as the Axoloti software calls the compiler automatically I don't know if it is possible to add such options somewhere.<br>It's probably easier to just copy'n'paste the source for this function from somewhere into your own code.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/3</link>
        <pubDate>Mon, 18 Jan 2021 21:23:13 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7070-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070.rss">How to execute tanf from math.h?</source>
      </item>
      <item>
        <title>How to execute tanf from math.h?</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Not sure how to get it working, by importing libraries, but I checked the Faust documentation:<br><aside class="onebox pdf">
  <header class="source">
    <a href="https://hal.archives-ouvertes.fr/hal-02158934/file/faust-quick-reference.pdf" target="_blank" rel="nofollow noopener">hal.archives-ouvertes.fr</a>
  </header>
  <article class="onebox-body">
    <a href="https://hal.archives-ouvertes.fr/hal-02158934/file/faust-quick-reference.pdf" target="_blank" rel="nofollow noopener"><span class="pdf-onebox-logo"></span></a>
<h3><a href="https://hal.archives-ouvertes.fr/hal-02158934/file/faust-quick-reference.pdf" target="_blank" rel="nofollow noopener">faust-quick-reference.pdf</a></h3>

<p class="filesize">458.55 KB</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
</p>

<p>It seems like it's the same as tanh/atan functions, but at signal rate. So if it's not too complicated, maybe you can just replace it with a tanh approximation?</p>

<p>I made a tanh approximation object for axoloti, you can find it in the community library : jaffa/sat/tanh</p>

<p>PS.<br>Sounds interesting about the filters. Is it something that might be added to the community library? <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/2</link>
        <pubDate>Mon, 18 Jan 2021 13:10:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7070-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070.rss">How to execute tanf from math.h?</source>
      </item>
      <item>
        <title>How to execute tanf from math.h?</title>
        <dc:creator><![CDATA[@logsol Karl Pannek]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/logsol">@logsol</a> wrote:</p>
          <blockquote>
              <p>Hey!</p>

<p>I am trying to port some filters from faust to axoloti and I am having some trouble executing a standard function. What is the correct way to get <strong>tanf</strong> to work?</p>

<pre><code>Generate code complete
Start compiling patch
Compiling patch... with /Applications/Axoloti.app/Contents/Java/firmware
BDIR = /Users/logsol/Documents/axoloti/build
FIRMWARE = .
RM
APP
! /Users/logsol/Documents/axoloti/build/xpatch.h.gch
. /Applications/axoloti_runtime/platform_osx/arm-none-eabi/include/math.h
. /Applications/axoloti_runtime/platform_osx/lib/gcc/arm-none-eabi/4.9.3/include/stdint.h
. /Applications/axoloti_runtime/platform_osx/arm-none-eabi/include/stdlib.h
LINK
/Users/logsol/Documents/axoloti/build/xpatch.o: In function `PatchProcess(long*, long*)':
xpatch.cpp:(.text+0xc0): undefined reference to `tanf'</code></pre>

<p>In the output log I see that math.h is being included and when I search this file, I do see a reference to tanf in it:</p>

<pre><code>...
/* Single precision versions of ANSI functions.  */

extern float atanf _PARAMS((float));
extern float cosf _PARAMS((float));
extern float sinf _PARAMS((float));
extern float tanf _PARAMS((float));
extern float tanhf _PARAMS((float));
extern float frexpf _PARAMS((float, int *));
extern float modff _PARAMS((float, float *));
extern float ceilf _PARAMS((float));
extern float fabsf _PARAMS((float));
extern float floorf _PARAMS((float));
...</code></pre>

<p>Can anybody shine some light on this? Or maybe I should be using another tangent implementation altogether?</p>

<p>Cheers!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070/1</link>
        <pubDate>Sun, 17 Jan 2021 22:20:47 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7070-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/how-to-execute-tanf-from-math-h/7070.rss">How to execute tanf from math.h?</source>
      </item>
  </channel>
</rss>
