<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Custom UI for objects</title>
    <link>http://community.axoloti.com/t/custom-ui-for-objects/1499</link>
    <description>(Pie in the Sky alert - manage expectations may never happen!!!)

**note: this is only for very advanced users/developers... as you will need to respect quite alot of &#39;unwritten rules&#39; to do with parameters etc ... almost certainly you would need to know the Axoloti code base reasonably well**

I was thinking last night, about some new objects that Id like to create,
but I realised quite quickly there were quite alot of parameters, and the current way to display parameters would just make the thing unbearable to use.

Now.. we already know we want to have more customisation options, and also presentation options. Which would be cool, and for many users very useful and enough.

BUT it will still have a fundamental limitation, that it will be limited by UI types defined in the axoloti java UI.

so i was wondering how about allowing objects to use custom java classes?

i.e. not only do you ship an axo, but also as jar which contains a java class that has custom java code.
Initially I thought about just for displaying the object, but later realised it could potentially also have custom generating code...  (assuming we can get the &#39;right interface&#39;)

It seems not too tricky to actually implement:
objects have a class reference, and a jar reference, when the object is created the relevant class its loaded.
if its doesn&#39;t have a class reference the current implementation is used.

Note: Id considered a custom class loader and embedding the class into the axo file, but this could make the axo file pretty unwieldy

it will mean ensuring the entry points for display etc, are well defined (if its not already true) , but thats no bad thing 

of course, there could be issues with versioning etc... but given the small number of users using this, i think its manageable.

What do you think? is custom java code a really bad direction?</description>
    
    <lastBuildDate>Thu, 14 Apr 2016 17:44:54 +0000</lastBuildDate>
    <category>Developer</category>
    <atom:link href="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Just to clarify- is it OK for me to contribute to this discussion?<br>I added my posts above because it was suggested my related comment in another thread would be better somewhere else, and this seemed the natural place.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/9">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/9</link>
        <pubDate>Thu, 14 Apr 2016 17:44:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-9</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>There are a number of different things here... </p>

<p>As I said, this is not a replacement for customized placement, and it's different from object creation. <br>This is about more advanced UIs , eg say a graph object the user could interact with, or multiple UI elements that work together.  </p>

<p>Eg more how you create panels, with user interaction. </p>

<p>Why Java?  because that's what we already use ... do can directly communicate with existing classes , i.e. No extra layers, interpreters needed <br>It's simple <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"></p>

<p>of course , as I said too ... I have a particular requirement for a 'project' of mine, which currently to fulfill , I'd have to either take a private branch , or move outside the axoloti framework - neither are appealing... But of course possible.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/8">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/8</link>
        <pubDate>Thu, 14 Apr 2016 17:20:22 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-8</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@DrJustice]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/drjustice">@DrJustice</a> wrote:</p>
          <blockquote>
              <p>While Java/Javascript per object is obviously powerful (An aside: if there must be a fourth language involved in making modules, how about Lua instead? Very lightweight, very easy to bind, very easy to learn, the perfect domain specific language IMO)</p>

<p>For custom object layouts I think Java/JavaScript/some-other-language is a language too far, at least if it becomes a requirement for such a basic thing as placement of controls on modules. XML, C and assembly is fine - more than that, and the learning curve becomes steeper and the development process becomes harder and more error prone, </p>

<p>I'd prefer see the development time spent on core functionality and bug-fixing rather than introducing something which will undoubtedly be a lot of additional work with little gain for a development team with plenty on the plate already (if we're only talking about presenting modules better).</p>

<p>An explicit X/Y placement of module components sounds about right to me. That could presumably just be some additional attributes to the existing XML(?)</p>

<p>Just my 2c.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/7">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/7</link>
        <pubDate>Thu, 14 Apr 2016 16:08:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-7</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Sorry, I probably shouldn't be posting here.</p>

<p>I followed a link from the 'Suggested Topics' section at the foot of another page, and didn't realise this thread was on the Developer board.</p>

<p>Feel free to delete my posts.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/6">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/6</link>
        <pubDate>Thu, 14 Apr 2016 15:27:57 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-6</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="1499"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>Or javascript, that avoids depending on a JDK install.I've been thinking about javascript axoloti objects that can parse arguments and emit the effective axoloti object.</p></blockquote></aside>

<p>That would be great! I think a lot of people would find the ability to use JS to, for example, implement complex logic without having to use a huge number of individual objects really useful. I know I would.</p>

<p>This would be most useful if, rather than a standard Axo object being created from the Javascript, the JS code remained editable, and is simply compiled into C when the patch goes live.</p>

<p>It loses it's utility if you'd have to dive into C/XML to make any subsequent edits to a standard Axoloti object created from the JavaScript definition.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/5">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/5</link>
        <pubDate>Thu, 14 Apr 2016 15:16:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-5</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>As I mentioned in another thread, the ability to specify basic layout properties like alignment for parameters would probably be enough for most purposes.</p>

<p>Allowing for pixel-based positioning would probably not be that useful, and would make scaling/zooming the patcher window more complicated to implement.</p>

<p>Allowing for the creation of arbitrary interface elements by 3rd-party developers runs the risk of making the Patcher look messy and incoherent, in my opinion.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/4">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/4</link>
        <pubDate>Thu, 14 Apr 2016 15:07:22 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-4</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>Or javascript, that avoids depending on a JDK install.<br>I've been thinking about javascript axoloti objects that can parse arguments and emit the effective axoloti object.<br>That would allow to de-duplicate "mix n", "mux n" objects. So "n" becomes a true object creation argument.<br>But that is more or less independent from custom UI presentation topic.</p>

<p>On the topic of custom object UI's:<br>We need to be careful what api we bind it to. java.awt.Graphics2D is perhaps too low level, maybe SVG is more suitable?<br>I think explicit X/Y coordinates is the future, rather than layout constraints. Pixel-exact representation on all platforms is a design goal.<br>Scalability is important, but not really easy. Some widgets like "sel/sel b 16" will look ugly if the grid lines are not on pixel boundaries. So I think all X/Y locations should be on a integer-pixel grid, and then we can scale the integer-pixel grid.<br>For example, if the 1:1 view grid is 8x8 pixels we can have a first zoom in step at 112.5% where the grid becomes 9x9 pixels, or zoom out to 87.5% where the grid is 7x7 pixels.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/3</link>
        <pubDate>Thu, 14 Apr 2016 14:45:53 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-3</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@rvense]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/rvense">@rvense</a> wrote:</p>
          <blockquote>
              <p>Hm. This would provide a lot of flexibility, of course.</p>

<p>I don't think it's a bad direction. But TBH, I think a way to layout parameters on the "surface" of .axo/.axs's is better. Basically just allow specifing X/Y coordinates for the buttons, maybe grouping and labelling somehow.</p>

<p>Of course, maybe the way to do it would be to allow custom Java code for objects and then use that to provide a layout mechanism!</p>

<p>Just remember that not everyone who wants to make complicated patches also want to write Java code <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> but I think it's fair to say that everyone who makes complicated patches want better layout options.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/2</link>
        <pubDate>Thu, 14 Apr 2016 14:26:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-2</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
      <item>
        <title>Custom UI for objects</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>(Pie in the Sky alert - manage expectations may never happen!!!)</p>

<p><strong>note: this is only for very advanced users/developers... as you will need to respect quite alot of 'unwritten rules' to do with parameters etc ... almost certainly you would need to know the Axoloti code base reasonably well</strong></p>

<p>I was thinking last night, about some new objects that Id like to create,<br>but I realised quite quickly there were quite alot of parameters, and the current way to display parameters would just make the thing unbearable to use.</p>

<p>Now.. we already know we want to have more customisation options, and also presentation options. Which would be cool, and for many users very useful and enough.</p>

<p>BUT it will still have a fundamental limitation, that it will be limited by UI types defined in the axoloti java UI.</p>

<p>so i was wondering how about allowing objects to use custom java classes?</p>

<p>i.e. not only do you ship an axo, but also as jar which contains a java class that has custom java code.<br>Initially I thought about just for displaying the object, but later realised it could potentially also have custom generating code...  (assuming we can get the 'right interface')</p>

<p>It seems not too tricky to actually implement:<br>objects have a class reference, and a jar reference, when the object is created the relevant class its loaded.<br>if its doesn't have a class reference the current implementation is used.</p>

<p>Note: Id considered a custom class loader and embedding the class into the axo file, but this could make the axo file pretty unwieldy</p>

<p>it will mean ensuring the entry points for display etc, are well defined (if its not already true) , but thats no bad thing </p>

<p>of course, there could be issues with versioning etc... but given the small number of users using this, i think its manageable.</p>

<p>What do you think? is custom java code a really bad direction?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/custom-ui-for-objects/1499/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/custom-ui-for-objects/1499/1</link>
        <pubDate>Thu, 14 Apr 2016 14:02:53 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1499-1</guid>
        <source url="http://community.axoloti.com/t/custom-ui-for-objects/1499.rss">Custom UI for objects</source>
      </item>
  </channel>
</rss>
