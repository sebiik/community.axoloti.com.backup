<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Recommendation for designing my patch</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/recommendation-for-designing-my-patch/5552</link>
    <description>I want to create a polyphonic drone instrument where each voice can access a vector of say 8 parameters. 

Each voice to be to be dynamically controlled by that set of parameters. 
  
This vector of parameters is dynamically generated by data coming in from external sources, so I can&#39;t set it as preset values in sub patches.
  
I could imagine configuring the voices via monophonic patches, one for each voice, this is the solution I&#39;ve seen used in PD where an array like object can be injected. Then each mono patch can have inlets for the parameter values. 

Is there a way to tabulate the data in a parent patch, then get the individual voice patches to read their own values?</description>
    
    <lastBuildDate>Sat, 23 Mar 2019 21:10:41 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/recommendation-for-designing-my-patch/5552.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Recommendation for designing my patch</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>yes, put a table in the parent patch , then use the subpatch polyidx to index into it.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/recommendation-for-designing-my-patch/5552/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/recommendation-for-designing-my-patch/5552/2</link>
        <pubDate>Sat, 23 Mar 2019 21:10:41 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5552-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/recommendation-for-designing-my-patch/5552.rss">Recommendation for designing my patch</source>
      </item>
      <item>
        <title>Recommendation for designing my patch</title>
        <dc:creator><![CDATA[@blackmountain Paul]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/blackmountain">@blackmountain</a> wrote:</p>
          <blockquote>
              <p>I want to create a polyphonic drone instrument where each voice can access a vector of say 8 parameters. </p>

<p>Each voice to be to be dynamically controlled by that set of parameters. </p>

<p>This vector of parameters is dynamically generated by data coming in from external sources, so I can't set it as preset values in sub patches.</p>

<p>I could imagine configuring the voices via monophonic patches, one for each voice, this is the solution I've seen used in PD where an array like object can be injected. Then each mono patch can have inlets for the parameter values. </p>

<p>Is there a way to tabulate the data in a parent patch, then get the individual voice patches to read their own values?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/recommendation-for-designing-my-patch/5552/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/recommendation-for-designing-my-patch/5552/1</link>
        <pubDate>Sat, 23 Mar 2019 16:04:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5552-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/recommendation-for-designing-my-patch/5552.rss">Recommendation for designing my patch</source>
      </item>
  </channel>
</rss>
