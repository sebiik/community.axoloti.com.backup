<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Brds/plucked behavior</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677</link>
    <description>probably @johannes

The brds/plucked object sustains several notes (up to three at least), when the &#39;timbre&#39; is great enough to get sustained sounds. So when you play a sequence, say, c-e-g, you actually hear a c major chord.

I would like to use it in a polyphonic sub-patch, but for that i need it to stop sounding old nodes when &#39;strike&#39; is triggered again. Is there a way to change it so as to do that?</description>
    
    <lastBuildDate>Wed, 12 Sep 2018 06:59:26 +0000</lastBuildDate>
    <category>Software</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Brds/plucked behavior</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel Büring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>Curious (and probably related): If I embed the 'plucked' oscillator in a polyphonic subpatch, every key hit will increase the CPU usage. Press e.g. the <em>same</em> key 20 times, and <a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/7/70a9024cde1ff1b58856fb8ec52d56da319cb414.axp">this patch with a MWE</a> (3.1 KB) goes bye bye to 100% land.<br>I'd say there's something seriously wrong with that little osc...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/8">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/8</link>
        <pubDate>Wed, 12 Sep 2018 06:59:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4677-8</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss">Brds/plucked behavior</source>
      </item>
      <item>
        <title>Brds/plucked behavior</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel Büring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>I am aware that an oscillator constantly sounds. But it usually <br>sounds <em>one</em> note, doesn't it?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/7</link>
        <pubDate>Sat, 16 Jun 2018 07:52:46 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4677-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss">Brds/plucked behavior</source>
      </item>
      <item>
        <title>Brds/plucked behavior</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>Not really, an oscillator constantly sounds <br>However, this is a bit different since it’s a pluck , so you strike it and it resonates , so to control decay I suspect you control  the amount of resonating , which I’m assuming maps to timbre. <br>(Braids uses timbre and colour for different parameters for different ‘shapes’)</p>

<p>This is why I said I think what you want may differ depending on other settings</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/6</link>
        <pubDate>Fri, 15 Jun 2018 19:12:06 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4677-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss">Brds/plucked behavior</source>
      </item>
      <item>
        <title>Brds/plucked behavior</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel Büring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>Very true, didn't think of that.</p>

<p>The behavior is still not<br> perfect btw. so i, like you, suspect the original works differently in that regard. Generally speaking you would expect that a single oscillator stops producing the old note once a new one is triggered, right...?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/5</link>
        <pubDate>Fri, 15 Jun 2018 12:01:43 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4677-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss">Brds/plucked behavior</source>
      </item>
      <item>
        <title>Brds/plucked behavior</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>cool... <br>if your doing this, can you not just patch the same thing in ? (rather than change the code)<br>simply use a mux, controlled by your 'trigger' (or gate perhaps) that sets timbre on high, but resets to zero on low.</p>

<p>its interesting, Id be interested to know if the real braids module the same behaviour exists.<br>id would not have thought timbre is resets automatically after a strike, since it might not alway be desirable.</p>

<p>... this why <strong>perhaps</strong> its more applicable in the patch rather than the code, as perhaps for some other brds settings e.g different values of shape/colour/timbre - it might not be what you want.</p>

<p>anyway cool that you got it to work as you wanted, thats the main goal!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/4</link>
        <pubDate>Fri, 15 Jun 2018 11:25:36 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4677-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss">Brds/plucked behavior</source>
      </item>
      <item>
        <title>Brds/plucked behavior</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel Büring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>I think I found an answer myself. In case anyone has the same wish: I've added the extra  line <strong>osc.set_parameters(...</strong> to the code*, which sets the 'timbre' to 0 when the key is released (and keeps 'color' the  same). <br>You can, if desired, replace the value 0, possibly by an attribute and/or an inlet to allow for variable release.</p>

<pre><code>osc.set_parameters(__USAT((inlet_timbre+param_timbre)&gt;&gt;12,15),__USAT((inlet_color+param_color)&gt;&gt;12,15));
osc.set_pitch((64&lt;&lt;7)+((param_pitch + inlet_pitch)&gt;&gt;14));
bool strike = 0;
if (inlet_strike &amp;&amp; !pstrike){
	pstrike = 1;
	strike = 1;
} else if (!inlet_strike) {
	pstrike = 0;</code></pre>

<p><code>osc.set_parameters(__USAT((0)&gt;&gt;12,15),__USAT((inlet_color+param_color)&gt;&gt;12,15));</code></p>

<pre><code>}

    osc.Render(&amp;outlet_wave[0],BUFSIZE,strike);</code></pre>

<p>*to change the code of this object, you first have to copy it and the included file brds_digital.h from the factory directory to your own objects  directory and refresh. Then load and change <em>that</em> copy.</p>

<p>ps <a class="mention" href="/u/thetechnobear">@thetechnobear</a>: I tried your solution, but the old note will sound again once the envelope is triggered the next time, since it's still resonating. Reducing 'timbre' overall helps, but then the note will decay quickly even while the key is pressed, which is not what i want. Thanks anyway!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/3</link>
        <pubDate>Thu, 14 Jun 2018 17:49:37 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4677-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss">Brds/plucked behavior</source>
      </item>
      <item>
        <title>Brds/plucked behavior</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>put an enveloper/vca after it?</p>

<p>(id get guess is self resonating, perhaps some of the other parameters will help reduce it?)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/2</link>
        <pubDate>Wed, 13 Jun 2018 10:37:07 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4677-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss">Brds/plucked behavior</source>
      </item>
      <item>
        <title>Brds/plucked behavior</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel Büring]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>probably <a class="mention" href="/u/johannes">@johannes</a></p>

<p>The brds/plucked object sustains several notes (up to three at least), when the 'timbre' is great enough to get sustained sounds. So when you play a sequence, say, c-e-g, you actually hear a c major chord.</p>

<p>I would like to use it in a polyphonic sub-patch, but for that i need it to stop sounding old nodes when 'strike' is triggered again. Is there a way to change it so as to do that?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677/1</link>
        <pubDate>Wed, 13 Jun 2018 07:03:14 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4677-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/brds-plucked-behavior/4677.rss">Brds/plucked behavior</source>
      </item>
  </channel>
</rss>
