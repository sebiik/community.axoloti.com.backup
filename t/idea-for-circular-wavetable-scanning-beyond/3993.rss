<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993</link>
    <description>I want to explain what I mean in the form of images, because i think that makes it easier to understand.


Classical Wavetable Synthesis
----------

Normal wavetable synthesis wirks by scanning through a wavetable. The wavetable can essentially be seen as an image or a rectangular cut out of a terrain - it has mountains and valleys. The Terrain/Image has two coordinates x and y which in the wavetable are called time and &quot;wavetable position&quot;. Normally we have a knob with which we set our wavetable position while the software is scanning through it. It is essentially walking in x-direction over the terrain and instantaneous jumping back to the starting point once it has reached it&#39;s endpoint. 


My Idea
----------
The wavetable scan is essentially a &quot;path over out terrain&quot;. Why not change the pathes even more? I was thinking for example about a circular path over the terrain. Or think about a lissajou-shaped path it you&#39;d like. This would have the advantage that start and endpoint are the same - no need to equalize wavetables (in order to avoid non contiuous jumps if not desired).

[image as wavetbale](https://i.imgur.com/uYumLXz.png)
[fancy 3d graphic](https://i.imgur.com/wcMgZtB.png)
[wavetable](https://i.imgur.com/yHSJsQK.png)


scanning parameters
----------
* the radius of the circle can be changed (and controlled with CV).
* the x and y position of the circle midpoint can be moved. 
* the circle can be stretched 
* special behaviour at edges can be defined (if the circle would scan outside of the wavetable/terrain because the radius or midpoint have certain parameters. The behaviour could be a Modulus, Contant or Mirror (this is derived from texture filter stuff in 3d-graphics).
 
[The scan coordinates can be changed over time from a circle like this](https://imgur.com/vLoiQuN)

This Idea can be taken much further. For example in irder to create stereo sounds easily, Left and Right channels can scan different colour-channels of an image. I think this could be very interesting, since the cannels often have similar &quot;structure&quot; but are different on certain position (e.g. a white object is similar in all channeld, but a yello one not, a picture can contain white and yellow objects at the same time..).
For stereo-scanning the channels can be mixed.


 wavetable synth by camera (+crazy ideas)
----------
This is of course pretty crazy, but a modul could be created, that uses a camera in order to create these wavetables in realtime. Of course in this case a real camera wouldn&#39;t actually be necessary - a very fast slidscanner would be enough for a simple implementation.
And this could even be used to create a truly analog wavetable synthesizer! Old CRT Monitors are essentially doing the reverse of wavetable scanning - they display wavetables. They scan through it up-&gt;down and put one line on the screen from left to right. The amplitude is the brightness or the amount of electrons colliding with the phosphor of the screen. The same prinziple could be reversed! 
Think of a photodiode that is converting brightness into eectricity. If that photodiode would only detect light from a very narrow direction (put a very narrow tube before it) the line of sight could be moved by a fast spinning mirror-prism. [e.g. this laser projector has a prism that makes this possible](https://www.youtube.com/watch?v=NLDwQJdiang).
This way the wavetable could be changed by moving an image through the scanned slid. The brightness over time would be the amplitude of the wavetable. (of course the frequency of the sweep would be hard to change quickly if we use a rotating prism - a very small moving mirror is also possible and used in some laser projectors).

edit:i just found this [on youtube](https://www.youtube.com/watch?v=dTGRcQcUEZk) - it is in a fundamental way one part of it. altough it is not &quot;scanning&quot; any table, but rather just sampling the same position over time.

What do you think? I didn&#39;t really know where to put this. It is more a general discussion about wavetablesynthesis and the approach of it.</description>
    
    <lastBuildDate>Fri, 06 Jul 2018 10:31:51 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@Konkrete]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/konkrete">@Konkrete</a> wrote:</p>
          <blockquote>
              <p>I'm not a wavetable sythesis specialist, but I thought you can change scanner playhead control from saw to triangle and get modulations with no cuts, but it will be forward-backward. Sorry if it is extremely out of your theme path, I'm learning:slight_smile:</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/9">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/9</link>
        <pubDate>Fri, 06 Jul 2018 10:31:51 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-9</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>the anti-alliasing can be fixed in a number of ways when using wavetable synthesis.<br>You could use oversampling together with a LP filter that filters out frequencies that are to high when sampled down for the output. Another way is to create wavetables that have several versions of the "same" waveform, but with less high frequencies, that get selected/morphed to when you play a higher pitch.<br>Another way would be to implement some kind of blit/blep synthesis, but till now I've found it really hard to implement on my wavetable oscillators.</p>

<p>About the circular path. I've made several wavetable oscillators and wavetable generators that could be used to kind-of-do-this. Almost all of my wavetable-oscillators are able to morph through the wavetable in different step-sizes. There are some which can also morph the step-size next to the morphing itself, allowing to morph to any other point in the wavetable. It just depends on how the morphing is done and how the table is build up..<br>For wavetable generators, I've made several versions (though I admit I haven't saved them all as modules yet). I have several in the "waiting line" that allow higher frequencies to be generated, the further you come in the wavetable. The oscilator then selects a range for the morph, depending on the root pitch to prevent anti-alliasing.</p>

<p>There's also a wavetable oscillator that has a small one-cycle table inside that uses a filter and an external wavetable to morph/mix to another waveform. There, the pitch controls the damping frequency of the filter, so any high frequency in the source-waveform is filtered out, so it won't cause anti-alliasing when played by the oscillator. Though, this one does create really small discontinuities while the internal one-cycle table is updated..</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/8">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/8</link>
        <pubDate>Fri, 15 Dec 2017 13:59:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-8</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@exocortex Lukipuki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/exocortex">@exocortex</a> wrote:</p>
          <blockquote>
              <p>I got my Axoloti in the mail and ot it working now. </p>

<p>I didn't know Aliasing was such a problem! I thought it was mainly a probelm when recording. The demonstrations-patch is quite revealing (the cheap vs the better implemented saw-wave).</p>

<p>How exactly is this solved in a wavetable? Does every wavetable? I guess just using a low-pass on the waveform doesn't work? That's really strange.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/7</link>
        <pubDate>Fri, 15 Dec 2017 12:07:29 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>(pitch synchronous) Granular synthesis is a cousin of sync oscillators.</p>

<p>The slave oscillator reads the grain table, at its own pace (that may be modulated).<br>A master oscillator resets it at another frequency.<br>To avoid discontinuities, the master oscillator also generate a bell shaped window.</p>

<p>As you can imagine, there is a multitude of variants, semi random sync, use of phase modulation (my patch in library-&gt;community-&gt;tiar-&gt;GM-&gt;041-Violin-tiar.axp use it), real time processing of external sources (some autotune algorithms work this way...).</p>

<p>Combined with the idea of terrains, i think it can be powerful.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/6</link>
        <pubDate>Thu, 07 Dec 2017 20:00:00 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@exocortex Lukipuki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/exocortex">@exocortex</a> wrote:</p>
          <blockquote>
              <p>So what is exactly the difference between granular synthesis and wavetable synthesis? I actually thought the principle was the same. </p>

<p>If a sample is played too fast (some frequencies would be higher than the nyquist frequency) what do normal granular synth algorithm do? Do they just jump to the next sample that fits with the sample rate or do they take the average of all samples that were "jumped" over?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/5</link>
        <pubDate>Thu, 07 Dec 2017 10:38:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="3993"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/e/bc8723/40.png" class="avatar">exocortex:</div>
<blockquote><p>the speed of the scan can also change.</p></blockquote></aside>

<p>With a granular synthesis scheme, it is sort of filter cutoff.<br>With waveterrain synthesis, the lenght of a cycle (orbit) determines the pitch. Even so, if you modulate the angular speed, you can obtain things similar to FM synthesis.</p>

<p>Anyway, you may have aliasing problems with waveterrain (that issue, and the filter character of granulation made me switch to the granulation scheme).</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/4</link>
        <pubDate>Thu, 07 Dec 2017 01:44:48 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@exocortex Lukipuki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/exocortex">@exocortex</a> wrote:</p>
          <blockquote>
              <p>You're of course right - the shape of the path can have any conceivable form. I just chose the circle because it is easier to understand as a concept. The path can of course also have non continuous shapes, suddenly changing direction. <br>Also interesting - though harder to visualize - the speed of the scan can also change. So even if it looks like a circle it can change its angular momentum. <br>Very cool would be a cv-controlled wavescan. Meaning that with a saw-wave one can scan linearily in one direction. Through mixing the saw can be changed in its direction (rotating it from x to y axis). And another LFO can be used as the other scanning parameter. If both are the same but have 90° phase offset it's the circular scan. That would be a very cool feature in a modular version of the synth. </p>

<p>I just had another idea: the candle based random cv generator. A photodiode translated the brightness of a candle into voltage which coltrols some parameter. A candle is smooth compared to all kinds of electronic lights that exhibit high frequency variation. Could be kinda cool - very very analog. <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/3</link>
        <pubDate>Thu, 07 Dec 2017 01:38:42 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p><strong><em>Waveterrain synthesis</em></strong> is a great synthesis scheme, <br></p><div class="lazyYT" data-youtube-id="GJg4OdC-Sew" data-youtube-title="Christopher Morgan - Wave Terrain Visualization Study" data-width="480" data-height="270" data-parameters="feature=oembed&amp;wmode=opaque"></div>

<p>you can dig for many academic studies about this (including studies of orbits)...<br><a href="https://www.researchgate.net/publication/297732157_Possibilities_for_Dynamical_Wave_Terrain_Synthesis" class="onebox" target="_blank">https://www.researchgate.net/publication/297732157_Possibilities_for_Dynamical_Wave_Terrain_Synthesis</a><br><a href="https://www.researchgate.net/publication/49280748_Developing_a_flexible_and_expressive_realtime_polyphonic_wave_terrain_synthesis_instrument_based_on_a_visual_and_multidimensional_methodology" class="onebox" target="_blank">https://www.researchgate.net/publication/49280748_Developing_a_flexible_and_expressive_realtime_polyphonic_wave_terrain_synthesis_instrument_based_on_a_visual_and_multidimensional_methodology</a></p>

<p>I have implemented and experimented with a variant of the waveterrain based on granular synthesis for Reaper as a JSFX plugin:</p>

<iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?visual=false&amp;url=https%3A%2F%2Fapi.soundcloud.com%2Ftracks%2F209427529&amp;show_artwork=true&amp;maxheight=166" seamless="seamless" sandbox="allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox"></iframe>

<iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?visual=false&amp;url=https%3A%2F%2Fapi.soundcloud.com%2Ftracks%2F210961144&amp;show_artwork=true&amp;maxheight=166" seamless="seamless" sandbox="allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox"></iframe>

<p>Instead of closed trajectories (orbits), thanks to granulation (overlap add windowing of a segment), i don't need closed "orbits", just terrain slices, the position, length and angle of the slice controls the sound...</p>

<p>I should take time to implement this stuff on the Axoloti, but I have to find a way to connect a touch sensitive display to the Axoloti to really play with this concept.</p>

<p>As far as i experimented, the content of the terrain is very important, even more than the shape of the orbits.</p>

<p>Great to see that someone else is interested in this <img src="//community.axoloti.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/2</link>
        <pubDate>Thu, 07 Dec 2017 01:07:13 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
      <item>
        <title>Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</title>
        <dc:creator><![CDATA[@exocortex Lukipuki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/exocortex">@exocortex</a> wrote:</p>
          <blockquote>
              <p>I want to explain what I mean in the form of images, because i think that makes it easier to understand.</p>

<h2>Classical Wavetable Synthesis</h2>

<p>Normal wavetable synthesis wirks by scanning through a wavetable. The wavetable can essentially be seen as an image or a rectangular cut out of a terrain - it has mountains and valleys. The Terrain/Image has two coordinates x and y which in the wavetable are called time and "wavetable position". Normally we have a knob with which we set our wavetable position while the software is scanning through it. It is essentially walking in x-direction over the terrain and instantaneous jumping back to the starting point once it has reached it's endpoint. </p>

<h2>My Idea</h2>

<p>The wavetable scan is essentially a "path over out terrain". Why not change the pathes even more? I was thinking for example about a circular path over the terrain. Or think about a lissajou-shaped path it you'd like. This would have the advantage that start and endpoint are the same - no need to equalize wavetables (in order to avoid non contiuous jumps if not desired).</p>

<p><a href="https://i.imgur.com/uYumLXz.png" rel="nofollow noopener">image as wavetbale</a><br><a href="https://i.imgur.com/wcMgZtB.png" rel="nofollow noopener">fancy 3d graphic</a><br><a href="https://i.imgur.com/yHSJsQK.png" rel="nofollow noopener">wavetable</a></p>

<h2>scanning parameters</h2>

<ul>
<li>the radius of the circle can be changed (and controlled with CV).</li>
<li>the x and y position of the circle midpoint can be moved. </li>
<li>the circle can be stretched </li>
<li>special behaviour at edges can be defined (if the circle would scan outside of the wavetable/terrain because the radius or midpoint have certain parameters. The behaviour could be a Modulus, Contant or Mirror (this is derived from texture filter stuff in 3d-graphics).</li>
</ul>

<p><a href="https://imgur.com/vLoiQuN" rel="nofollow noopener">The scan coordinates can be changed over time from a circle like this</a></p>

<p>This Idea can be taken much further. For example in irder to create stereo sounds easily, Left and Right channels can scan different colour-channels of an image. I think this could be very interesting, since the cannels often have similar "structure" but are different on certain position (e.g. a white object is similar in all channeld, but a yello one not, a picture can contain white and yellow objects at the same time..).<br>For stereo-scanning the channels can be mixed.</p>

<h2> wavetable synth by camera (+crazy ideas)</h2>

<p>This is of course pretty crazy, but a modul could be created, that uses a camera in order to create these wavetables in realtime. Of course in this case a real camera wouldn't actually be necessary - a very fast slidscanner would be enough for a simple implementation.<br>And this could even be used to create a truly analog wavetable synthesizer! Old CRT Monitors are essentially doing the reverse of wavetable scanning - they display wavetables. They scan through it up-&gt;down and put one line on the screen from left to right. The amplitude is the brightness or the amount of electrons colliding with the phosphor of the screen. The same prinziple could be reversed! <br>Think of a photodiode that is converting brightness into eectricity. If that photodiode would only detect light from a very narrow direction (put a very narrow tube before it) the line of sight could be moved by a fast spinning mirror-prism. <a href="https://www.youtube.com/watch?v=NLDwQJdiang" rel="nofollow noopener">e.g. this laser projector has a prism that makes this possible</a>.<br>This way the wavetable could be changed by moving an image through the scanned slid. The brightness over time would be the amplitude of the wavetable. (of course the frequency of the sweep would be hard to change quickly if we use a rotating prism - a very small moving mirror is also possible and used in some laser projectors).</p>

<p>edit:i just found this <a href="https://www.youtube.com/watch?v=dTGRcQcUEZk" rel="nofollow noopener">on youtube</a> - it is in a fundamental way one part of it. altough it is not "scanning" any table, but rather just sampling the same position over time.</p>

<p>What do you think? I didn't really know where to put this. It is more a general discussion about wavetablesynthesis and the approach of it.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993/1</link>
        <pubDate>Wed, 06 Dec 2017 23:51:36 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3993-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/idea-for-circular-wavetable-scanning-beyond/3993.rss">Idea for &quot;Circular&quot; Wavetable Scanning (+beyond)</source>
      </item>
  </channel>
</rss>
