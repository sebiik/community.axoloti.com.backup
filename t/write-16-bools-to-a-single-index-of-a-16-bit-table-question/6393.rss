<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Write 16 bools to a single index of a 16 bit table question!</title>
    <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393</link>
    <description>Hey

I am building a table based sequencer and I want to store the step values in a table.

I need 16 sequencers, so if I need to store 16 sequencer with 16 steps, you get 16X16= 256 index in a table needs to be used for it to work like this.

But I was thinking, that instead of storing each step of a sequence into it own index, where it take 16 indexes to store 16 steps, shouldn’t I be able to store the 16 bools for each step in one single index? 

Like the same way that you can make 16 k-rate outputs of a single s-rate input:
outlet_k1 = inlet_s[o]
outlet_k2 = inlet_s[1]
outlet_k3 = inlet_s[3]
outlet_k4 = inlet_s[4]
Etc….

 If I use a 16 bit table, I should be able to store the 16 bools in one index of a table, right?

I need to store some dial values in the same table, so probably going to use a 32 bit table for it, but I need all values to be stored in the same table. If I could limit the amount of index from 256 to just 16, by storing the 16 bools/steps in one single index, that would make it a lot simpler.

I have tried a few things the last couple of hours, but I can not get it working, I am not sure firstly how to get the input value stored to it’s own bit with a table/write and then secondly to play it back with a table/read.

Does anyone have an idea how to do this?

Did anyone already make such an object, that writes and reads bools from bits of an index in a table?

Here is some of what I have tried, where the 0 that is shifted &lt;&lt; 1 is the step, in this case 0:
For writing:
attr_table.array[ inlet_a **&amp; (1 &lt;&lt; 0)** ]=__SSAT(inlet_v  ,28)&gt;&gt;attr_table.GAIN;

For reading:
outlet_o= attr_table.array[__USAT(  inlet_a **&amp; (1 &lt;&lt; 0)**  ,attr_table.LENGTHPOW)]&lt;&lt;attr_table.GAIN;

That didn&#39;t work. It is probably too naive.....

I also tried:
For writing:
(attr_table.array[ inlet_a **&amp; (1 &lt;&lt; 0)** ]=__SSAT(inlet_v  ,28)&gt;&gt;attr_table.GAIN)  **&amp; (1 &lt;&lt; 0)**;

For reading:
outlet_o= (attr_table.array[__USAT(  inlet_a **&amp; (1 &lt;&lt; 0)**  ,attr_table.LENGTHPOW)]&lt;&lt;attr_table.GAIN)  **&amp; (1 &lt;&lt; 0**);

I tried more, but nothing worked and I don&#39;t remember all the things I tried, but that is 2 of the tests I made.

Here is the patch, for an easy start point and the 2 examples above:
&lt;a class=&quot;attachment&quot; href=&quot;/uploads/default/original/2X/4/4ffcaab4f3bc97bf17200e86117307e1393fa28f.axp&quot;&gt;Write to bits COMMUNITY 1.axp&lt;/a&gt; (19.9 KB)

Thanks in advance :)</description>
    
    <lastBuildDate>Tue, 11 Feb 2020 07:02:00 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Thanks I will check that out. The mechanism I made for now is a bit clumsy. This looks a lot simpler <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/10">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/10</link>
        <pubDate>Tue, 11 Feb 2020 07:02:00 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-10</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@tele_player]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/tele_player">@tele_player</a> wrote:</p>
          <blockquote>
              <p>Ignoring variable names, that’s what I wrote. It is normal C/C++ bit-twiddling.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/9">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/9</link>
        <pubDate>Mon, 10 Feb 2020 20:08:49 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-9</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@Captain_Burek Daniel Büring]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/captain_burek">@Captain_Burek</a> wrote:</p>
          <blockquote>
              <p>Far from being fluent in C, but I use these to do something similar to what i think you're doing:</p>

<blockquote>
<p>int setbit(int var,int no, bool on){<br>	if (on) var |= 1UL &lt;&lt; no;<br>	else var &amp;= ~(1UL &lt;&lt; no);<br>	return var;<br>}</p>
<p>bool getbit(int var, int no){<br>	return (var &gt;&gt; no) &amp; 1U;<br>}</p>
</blockquote>

<p>I put them in local data, and call them as i need them, e.g.</p>

<blockquote><p>prev = setbit(prev,0,1);</p></blockquote>

<p>to set the 0th bit of <strong>prev</strong> (an integer) to 1, or</p>

<blockquote><p>if (getbit(prev,1))</p></blockquote>

<p>to get 1 if the 1st bit of <strong>prev</strong> is set; etc.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/8">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/8</link>
        <pubDate>Mon, 10 Feb 2020 09:01:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-8</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Thanks, I highly appreciate it. I got something working now, but it needs to be tweaked a bit.</p>

<p>I have taken some courses in c++, but I guess this is not beginner level. </p>

<p>Now I atleast knows the name of what I was doing and can do a bit of research and I have a starting point.</p>

<p>Atleast I got the reading part right, hehe <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>

<p>So thanks again <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/7">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/7</link>
        <pubDate>Sat, 08 Feb 2020 22:32:48 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-7</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@tele_player]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/tele_player">@tele_player</a> wrote:</p>
          <blockquote>
              <p>I don't think Axoloti is a very good way to  learn C++, or programming in general. Good try!</p>

<p>So, if we want to SET a bit in attr_table.array[ inlet_index ]  :<br>attr_table.array[inlet_index] |= 1 &lt;&lt; inlet_bit;</p>

<p>Explained: take the value which is in attr_table.array[inlet_index] , and bitwise-OR it with (1 &lt;&lt; inlet_bit)</p>

<p>If we want to CLEAR a bit in attr_table.array[inlet_index] :<br>attr_table.array[inlet_index] &amp;= ~(1 &lt;&lt; inlet_bit);</p>

<p>Explained: this is a little harder to understand. To torn OFF a bit, we use  ~(1 &lt;&lt; inlet_bit) to create a value that has all bits set EXCEPT the one we want to clear, then we bitwise-AND it with the destination.</p>

<p>This stuff is hard to explain in a forum - and seriously, a comprehensive study of C++ (and C) will make this much easier to understand. In Axoloti, there are multiple concepts  all combined, which can be confusing.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/6">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/6</link>
        <pubDate>Sat, 08 Feb 2020 22:12:24 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-6</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Okay, so this works for READING bit from a table. I used a bin16, where each value is a bit(I think) to add some values to a table and then I can read them back with this:<br><strong>outlet_sc = attr_t.array[inlet_index] &amp; (1 &lt;&lt; inlet_bit);</strong></p>

<p>inlet_bit is used to read every single toggle of the bin, stored in the table, on the same index.</p>

<p>I tried applying the exact same idea to writing but it doesn't seem to work:<br><strong>(attr_table.array[ inlet_index ] &amp; 1 &lt;&lt; inlet_bit) =<em>_SSAT(inlet</em>v  ,28)&gt;&gt;attr_table.GAIN;</strong></p>

<p>I get this error:<br>/Users/jakobskouborg/Documents/axoloti/build/xpatch.cpp:1102:73: error: lvalue required as left operand of assignment<br> (parent-&gt;instancenew2_i.array[ inlet_index ] &amp; 1 &lt;&lt; inlet_bit) =<em>_SSAT(inlet</em>v  ,28)&gt;&gt;parent-&gt;instancenew2_i.GAIN;                                                        <br>make: *** [/Users/jakobskouborg/Documents/axoloti/build/xpatch.bin] Error 1<br>shell task failed, exit value: 2</p>

<p>I feel like I am really close now. If anyone wants to chime in here is probably the best attempt by now. I am pretty sure that the read bits part of it works, now it's just last thing, to write:</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/a/aa18f89c5ba2bb807ab3d8cfdecaeb41f0825524.axp">Write to bits V2 4 Try something 4 For com 1 .axp</a> (5.0 KB)</p>

<p><a class="mention" href="/u/tele_player">@tele_player</a> <br>I looked here, and this is basically what I have been doing for the reading which works, but I am not getting the writing part right:<br><a href="https://www.codementor.io/@hbendali/c-c-macro-bit-operations-ztrat0et6" class="onebox" target="_blank">https://www.codementor.io/@hbendali/c-c-macro-bit-operations-ztrat0et6</a></p>

<p>Any suggestions are highly appreciated and I recommend checking the patch to see what the progress is. I think it's closeee.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/5">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/5</link>
        <pubDate>Sat, 08 Feb 2020 21:22:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-5</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Here is a better example that show how to write and read booleans to bit, but with a bin16:</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/9/93135c4ff99f76fc424059b9e46133257f810889.axp">Write to bits 2 Only Bins 1 .axp</a> (4.9 KB)</p>

<p>But yeah if this can't be done to arrays like that, I guess I have tinf another way.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/4">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/4</link>
        <pubDate>Sat, 08 Feb 2020 20:34:21 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-4</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Cool, thanks, I will see what I can find. </p>

<p>I have managed to read the 16 booleans out of a bin16 and bin12, inividually. I am assuming each boolean is stored in a bit, since it can hold 16, but I might be wrong. In the patch above  there is an example,, out to the right in the patch you can find it. I was just thinking I could apply a similar technic to a table, but maybe it is not that simple. </p>

<p>I think I have seen <a class="mention" href="/u/rbrt">@rbrt</a> has do something similar in an object, I just could not find it. </p>

<p>But then I also need to write to the bits first, to be able to read them.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/3</link>
        <pubDate>Sat, 08 Feb 2020 20:25:45 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-3</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@tele_player]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/tele_player">@tele_player</a> wrote:</p>
          <blockquote>
              <p>C++ doesn't support directly accessing the bits in a value using the subscript operator [ ]. One could probably write a C++ class which implements a bit array, using an overloaded subscript operator, but this is not common.</p>

<p>Yes, you can store 16 boolean values in a 16 bit integer, but this is  usually done using macros based on the normal bit operations: &amp; | ~ &gt;&gt; &lt;&lt; .</p>

<p>Google 'C++ bit access macros' and you will find plenty of info</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/2</link>
        <pubDate>Sat, 08 Feb 2020 19:22:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-2</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
      <item>
        <title>Write 16 bools to a single index of a 16 bit table question!</title>
        <dc:creator><![CDATA[@jaffasplaffa Mr. Grimm]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/jaffasplaffa">@jaffasplaffa</a> wrote:</p>
          <blockquote>
              <p>Hey</p>

<p>I am building a table based sequencer and I want to store the step values in a table.</p>

<p>I need 16 sequencers, so if I need to store 16 sequencer with 16 steps, you get 16X16= 256 index in a table needs to be used for it to work like this.</p>

<p>But I was thinking, that instead of storing each step of a sequence into it own index, where it take 16 indexes to store 16 steps, shouldn’t I be able to store the 16 bools for each step in one single index? </p>

<p>Like the same way that you can make 16 k-rate outputs of a single s-rate input:<br>outlet_k1 = inlet_s[o]<br>outlet_k2 = inlet_s[1]<br>outlet_k3 = inlet_s[3]<br>outlet_k4 = inlet_s[4]<br>Etc….</p>

<p> If I use a 16 bit table, I should be able to store the 16 bools in one index of a table, right?</p>

<p>I need to store some dial values in the same table, so probably going to use a 32 bit table for it, but I need all values to be stored in the same table. If I could limit the amount of index from 256 to just 16, by storing the 16 bools/steps in one single index, that would make it a lot simpler.</p>

<p>I have tried a few things the last couple of hours, but I can not get it working, I am not sure firstly how to get the input value stored to it’s own bit with a table/write and then secondly to play it back with a table/read.</p>

<p>Does anyone have an idea how to do this?</p>

<p>Did anyone already make such an object, that writes and reads bools from bits of an index in a table?</p>

<p>Here is some of what I have tried, where the 0 that is shifted &lt;&lt; 1 is the step, in this case 0:<br>For writing:<br>attr_table.array[ inlet_a <strong>&amp; (1 &lt;&lt; 0)</strong> ]=<em>_SSAT(inlet</em>v  ,28)&gt;&gt;attr_table.GAIN;</p>

<p>For reading:<br>outlet_o= attr_table.array[<em>_USAT(  inlet</em>a <strong>&amp; (1 &lt;&lt; 0)</strong>  ,attr_table.LENGTHPOW)]&lt;&lt;attr_table.GAIN;</p>

<p>That didn't work. It is probably too naive.....</p>

<p>I also tried:<br>For writing:<br>(attr_table.array[ inlet_a <strong>&amp; (1 &lt;&lt; 0)</strong> ]=<em>_SSAT(inlet</em>v  ,28)&gt;&gt;attr_table.GAIN)  <strong>&amp; (1 &lt;&lt; 0)</strong>;</p>

<p>For reading:<br>outlet_o= (attr_table.array[<em>_USAT(  inlet</em>a <strong>&amp; (1 &lt;&lt; 0)</strong>  ,attr_table.LENGTHPOW)]&lt;&lt;attr_table.GAIN)  <strong>&amp; (1 &lt;&lt; 0</strong>);</p>

<p>I tried more, but nothing worked and I don't remember all the things I tried, but that is 2 of the tests I made.</p>

<p>Here is the patch, for an easy start point and the 2 examples above:<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/4/4ffcaab4f3bc97bf17200e86117307e1393fa28f.axp">Write to bits COMMUNITY 1.axp</a> (19.9 KB)</p>

<p>Thanks in advance <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393/1</link>
        <pubDate>Sat, 08 Feb 2020 16:25:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6393-1</guid>
        <source url="http://community.axoloti.com/t/write-16-bools-to-a-single-index-of-a-16-bit-table-question/6393.rss">Write 16 bools to a single index of a 16 bit table question!</source>
      </item>
  </channel>
</rss>
