<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Modelling analog circuits in software</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013</link>
    <description>Hi everyone,

I&#39;m about to start a journey into modelling analog circuits. The topic has been in my head for some time already and I want to finally get started. What I&#39;m looking for now is some fellows to go through this together. In my experience ping-ponging ideas can greatly improve the experience for everyone and that&#39;s why I think it could be great to work on this together.

### My goal...
... is to gain a deeper understanding about what matters in analog circuits and how to model some of the relevant behaviour in a DSP. Maybe we create some Axoloti objects for saturation/filters/vcas based on real circuits. But I consider the creation of new objects a side effect. Really, the primary goal, for me, is to learn and tinker.

### My background
I&#39;m currently approaching my final thesis in electrical engineering at a university in Germany. I have some background in DSP and signal theory as well as C/C++ programming. Add to that multiple years of experience building synths and synth modules (eurorack, it&#39;s a horrible drug). Why am I mentioning this? Because that says a lot about the angle from which I&#39;ll approach this topic.

### Preferred methodology

To make this fun and interesting for everyone, I&#39;d suggest we try to make things reproducible for everyone. That means we should be clear about what we did and how so we can all follow each others discoveries. Most importantly, I think we should stick to the same circuit until we all decide we want try something else. 

### My plan...
... is to start simple and slowly move forward. Ideally, I&#39;d like to pick a circuit and build it. Then we can start making a model in the form of an Axoloti object/patch. With the right tools (oscilloscope, ears, circuit simulator, math, ...) we can compare the real thing to our model and slowly work towards a perfect model. If we succeed in one circuit we can pick the next, more complicated one. All of this will require patience and realistic goals.

Here&#39;s my roadmap, but this is more of a suggestion than a fixed schedule:

1. Start with a simple circuit that involves only a minimal number of components, no feedback and preferrably only a single type of semiconductor. (My idea would be a simple diode saturation, but I&#39;m open to anything)
2. Decide on a realization of this circuit and build a test rig that we can use to measure stuff about this circuit.
3. Create a specific object/patch to create test signals like certain oscillator shapes, impulses, sweeps, etc. We could use the community library or another github repo for this. That way, we all work with the same test signals and know that we&#39;re talking about the same thing.
4. Setup an Axoloti patch to feed the test signals to both our real circuit and our model. If we use the left audio output to feed our (real) test circuit, we can use the right output for our digital model. That way, we can directly compare the real thing with our model using all kinds of test equipment.
5. Create a first naive model by using simple math and circuit analysis. No worries about optimization at this point.
6. From there on it&#39;ll be about comparing our model to the real thing by firing all kinds of test signals at it. 
7. If we succeed with our first simple model, I&#39;d suggest we pick the next. I have some ideas about circuits to try.

### My worries
All of this may sound like a rigid plan, but to be honest, I&#39;m not even sure if this is the right approach. What do you think? I&#39;m open for any suggestions, so please: Go ahead and let me know what you think about this.

Does all of that sound interesting to you? Let&#39;s go!</description>
    
    <lastBuildDate>Tue, 06 Mar 2018 18:13:15 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@Ott]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/ott">@Ott</a> wrote:</p>
          <blockquote>
              <p>Happy new year! How's this project going? If it's too complicated, maybe you can try one of Korg's single-transistor VCA designs.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/27">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/27</link>
        <pubDate>Tue, 06 Mar 2018 18:13:15 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-27</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>The 24dB/oct filter in tiar/filter/MgExp replicates the frequency response of the filter with a specific "ZDF" method (step invariant transform). It allows fast modulation without glitches and stable high resonance even with high cutoffs...</p>

<p><strong>but</strong>...</p>

<p>It does not implement any <strong>non linearities</strong>. It is a personal choice as - contrarily to a vast majority of analog synth addicts - I consider that stage distortions/saturations have a moderate impact on the tone in that steep Low Pass filter. I think that the main concern here are dynamics when modulating the cutoff.</p>

<hr>

<p>The transistor based mixer is another story ! <br>When i see the schematics, i guess that its non linearities <em>cannot be neglected at all</em>.<br>Maybe the best way to experiment with it is to model it with Spice at first (before building a hardware replica).</p>

<p>Non linear mixing is very interesting as it adds <em>intermodulations</em> between the inputs.</p>

<p>I did a simple non linear mixer object (tiar/dist/SqrtMix4 object and help patch) that is based on squares (as in xÂ²) and square root. It is not based on any hardware but it can give some ideas for an advanced design.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/26">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/26</link>
        <pubDate>Wed, 20 Dec 2017 19:30:43 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-26</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Haha, I had in mind to do a Moog ladder filter, but <a class="mention" href="/u/smashedtransistors">@SmashedTransistors</a> did that already <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>Maybe I'll do an oberheim filter or something. But let's be realistic. I think the CP-3 mixer is a lot tougher than the diode circuit already.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/24">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/24</link>
        <pubDate>Wed, 20 Dec 2017 09:58:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-24</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@Ott]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/ott">@Ott</a> wrote:</p>
          <blockquote>
              <p>I don't have the EE degree required to understand this thread, but I like reading about your progress anyways. Keep working at it, at least until you get a gnarly filter!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/23">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/23</link>
        <pubDate>Wed, 20 Dec 2017 09:56:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-23</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Okay, so I think I'm pretty much done with this simple diode circuit. The final version, which is uploaded to the community library, uses two lookup tables - one for the lower 1/8th of the input range (high resolution), and one for the remaining 7/8 (lower resolution)<br>I was not getting anywhere with any other approximation I've tried - polynomials, weighted taylor expansions, segmented polynomials - it was all either too inaccurate or simply not worth the additional computation cycles. In the end the best performance-to-computation ratio was the dual-lookup table method. And given the large program memory of the STM32, it doesn't really affect anything to have a large lookup table somewhere in the flash (to my knowledge, const global variables will be put into the flash memory - or am I wrong here?)<br>Still, the object consumes ~4% CPU which is a little too much for my taste, but meh, I'm not gonna optimize this further.</p>

<p>The factory <code>dist/soft</code> (which is a simple polynomial distortion) consumes ~0.5% CPU but sounds a little less dirty to my ears. The diode distortion has more pleasing overtones, but if CPU cycles are a concern, I'd consider the factory version the better choice.</p>

<p>So the next circuit I'd like to takle is the Moog CP3 mixer. This is another relatively simple circuit (I hope), but it has plenty of interesting characteristics, including </p>

<ul>
<li>different distortion on its positive and negative outputs, </li>
<li>a type of distortion that enhances the bass instead of cutting it away</li>
<li>a kind of compression due to the way the mixbus is designed (ducking the other inputs when you increase the volume of a channel)</li>
</ul>

<p>It is said to be a substantial part of the massive sound of a Moog modular. So, let's see how much of that Mojo we can recreate on the Axoloti, shall we?</p>

<p><a href="https://learningmodular.com/exploring-the-moog-cp3-type-mixer/" rel="nofollow noopener">Here's the original schematic and a video showing some of the interesting features of this mixer</a>. I'm going to build the mixer after the <a href="https://www.muffwiggler.com/forum/viewtopic.php?t=158439" rel="nofollow noopener">schematics from this clone</a> which contains only the typical parts every DIYer will probably have somewhere in their drawer.</p>

<p>I'll be off to visit my family during the festive season, but I'll be tackling this in the new year. If anybody want's to start working on this, I'll happily follow along, but I won't have time to actually build the real thing in the next few weeks.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/22">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/22</link>
        <pubDate>Wed, 20 Dec 2017 09:10:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-22</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>Another advantage of polynomial segments is that you can use integro differential anti aliasing to limit aliasing.</p>

<p><aside class="onebox pdf">
  <header class="source">
    <a href="https://stash.reaper.fm/28384/DifferentiatedPolynomialWaveTables.pdf" target="_blank" rel="nofollow noopener">stash.reaper.fm</a>
  </header>
  <article class="onebox-body">
    <a href="https://stash.reaper.fm/28384/DifferentiatedPolynomialWaveTables.pdf" target="_blank" rel="nofollow noopener"><span class="pdf-onebox-logo"></span></a>
<h3><a href="https://stash.reaper.fm/28384/DifferentiatedPolynomialWaveTables.pdf" target="_blank" rel="nofollow noopener">DifferentiatedPolynomialWaveTables.pdf</a></h3>

<p class="filesize">0 B</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>(appendix A.3)</p>

<p>I use this trick to limit aliasing in many distortion objects in tiar/dist</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/21">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/21</link>
        <pubDate>Fri, 15 Dec 2017 21:10:55 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-21</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Ok, maybe taylor approximation is not the correct solution. What if instead you do this?</p>

<p>1) the function is antisymmetric, so you don't actually have to fit the whole curve<br>2) divide the interval in which you want to fit the function in n+1 sections (better if equally spaced).<br>for each section Si (from x[i] to x[i+1]) you could define a II order polynomial like:</p>

<p></p><pre><code class="lang-auto"> 
a[i] + b[i]*x + c[i]*x^2</code></pre>

<p>This gives you a total of 3*(n+1) coefficients to determine.<br>3) for the sections S[0], .. , S[n-1] you can define two congruency equations:<br></p>

<p></p><pre><code class="lang-auto">a[i]+b[i]*x[i+1] + c[i]*x[i+1]^2 = a[i+1]+b[i+1]*x[i+1] + c[i+1]*x[i+1]^2 (continuity)
b[i] + 2*c[i]*x[i+1] = b[i+1] + 2*c[i+1]*x[i+1] (continuity of the first derivative)</code></pre>

<p>that make up for 2*n constraint equations.<br>4) You can already say that a[0] = 0 (this makes for another constraint equation)<br>5) The number of degrees of freedom if 3*(n+1) - (2*n+1) = n+2 </p>

<p>Your objective is that to minimize the distance between the sampled function and the polynomial approximation, so that sum(j) (f(x[j])-p(x[j]))^2 -----&gt;0</p>

<p>It's a constrained minimization problem, that you can solve numerically (octave, matlab) by the method of lagrange multipliers.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/20">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/20</link>
        <pubDate>Fri, 15 Dec 2017 11:58:45 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-20</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Yesterday I talked to a friend about my efforts in understand analog modelling. <a href="https://www.youtube.com/watch?v=oIChUOV_0w4" rel="nofollow noopener">He recommended me to this talk.</a> I just watched it and its a wealth of precious information for a beginner like me, and I'm sure everyone here can find some nice inspiration in this - not only for modelling circuits, but also for some general creative patching ideas.</p>

<p>Feedback loops will occur pretty much anywhere, even the circuit I worked on here has feedback, which you can directly see from the form of the equation - it is implicit! To deal with these equations, he suggests to use the Newton Raphson algorithm. I knew about this and the numerical solver in python probably uses this algorithm or something similar. But hadn't thought about using it in real time, because it is very CPU hungry and depending on your exit condition for the algorithm, it can also take different number of iterations to get to a desired result, or not get any result at all - which is something very undesireable in a DSP environment. <br>One interesting note here is that he suggests to use lookup tables to do the first iterations of the Newton Raphson algorithm, speeding things up immensly. This is something I hadn't yet though of. You don't even need a lot of precision in these tables and you could probably get along just fine with uninterpolated tables - if you use them for the first few iterations of the algorithm, that will get you close to the solution of the implicit equation. You can then refine the result further by doing the last few iterations with the real, CPU hungry equation.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/19">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/19</link>
        <pubDate>Fri, 15 Dec 2017 09:09:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-19</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <p>Here is another like for the numerical recipes chapter:<br><aside class="onebox pdf">
  <header class="source">
    <a href="https://cpp.in.ua/nrc/c5-8.pdf" target="_blank" rel="nofollow noopener">cpp.in.ua</a>
  </header>
  <article class="onebox-body">
    <a href="https://cpp.in.ua/nrc/c5-8.pdf" target="_blank" rel="nofollow noopener"><span class="pdf-onebox-logo"></span></a>
<h3><a href="https://cpp.in.ua/nrc/c5-8.pdf" target="_blank" rel="nofollow noopener">c5-8.pdf</a></h3>

<p class="filesize">153.85 KB</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
</p>

<aside class="onebox pdf">
  <header class="source">
    <a href="https://www.fizyka.umk.pl/~jacek/docs/nrc/c5-9.pdf" target="_blank" rel="nofollow noopener">fizyka.umk.pl</a>
  </header>
  <article class="onebox-body">
    <a href="https://www.fizyka.umk.pl/~jacek/docs/nrc/c5-9.pdf" target="_blank" rel="nofollow noopener"><span class="pdf-onebox-logo"></span></a>
<h3><a href="https://www.fizyka.umk.pl/~jacek/docs/nrc/c5-9.pdf" target="_blank" rel="nofollow noopener">c5-9.pdf</a></h3>

<p class="filesize">226.69 KB</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>


<aside class="onebox pdf">
  <header class="source">
    <a href="https://www.fizyka.umk.pl/~jacek/docs/nrc/c5-10.pdf" target="_blank" rel="nofollow noopener">fizyka.umk.pl</a>
  </header>
  <article class="onebox-body">
    <a href="https://www.fizyka.umk.pl/~jacek/docs/nrc/c5-10.pdf" target="_blank" rel="nofollow noopener"><span class="pdf-onebox-logo"></span></a>
<h3><a href="https://www.fizyka.umk.pl/~jacek/docs/nrc/c5-10.pdf" target="_blank" rel="nofollow noopener">c5-10.pdf</a></h3>

<p class="filesize">171.89 KB</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>


<p>You can also have a look at PadÃ© approximates, but those need division.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/18">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/18</link>
        <pubDate>Thu, 14 Dec 2017 21:31:51 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-18</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Oh wow, that was a great read. So much valuable information! I'll dive into this a little further. If you have any other links on this topic, don't hold back!</p>

<p>PS: It seems the second link is unfortunately not available anymore.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/17">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/17</link>
        <pubDate>Thu, 14 Dec 2017 21:04:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-17</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="12" data-topic="4013"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/90db22/40.png" class="avatar">TheSlowGrowth:</div>
<blockquote><p>However, there's still a problem in my equations, I keep getting poorly conditioned equation systems that can't be solved.</p></blockquote></aside>

<p>Maybe, you can have a look at Chebychev polynomials approximation. These approximate a function over a segment rather than around a single point.</p>

<p><a href="https://www.embeddedrelated.com/showarticle/152.php" class="onebox" target="_blank">https://www.embeddedrelated.com/showarticle/152.php</a></p>

<aside class="onebox pdf">
  <header class="source">
    <a href="https://www.aip.de/groups/soe/local/numres/bookcpdf/c5-8.pdf" target="_blank" rel="nofollow noopener">aip.de</a>
  </header>
  <article class="onebox-body">
    <a href="https://www.aip.de/groups/soe/local/numres/bookcpdf/c5-8.pdf" target="_blank" rel="nofollow noopener"><span class="pdf-onebox-logo"></span></a>
<h3><a href="https://www.aip.de/groups/soe/local/numres/bookcpdf/c5-8.pdf" target="_blank" rel="nofollow noopener">c5-8.pdf</a></h3>

<p class="filesize">0 B</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/16">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/16</link>
        <pubDate>Thu, 14 Dec 2017 20:18:49 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-16</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>thanks for that, will delve into this with a cup of strong black coffee <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/15">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/15</link>
        <pubDate>Thu, 14 Dec 2017 16:15:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-15</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="13" data-topic="4013"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">thetechnobear:</div>
<blockquote><p>explain how you derived your equation</p></blockquote></aside>

<p>A few posts back I wrote the equation and also posted an image of the circuit I used to model this.<br>As you can see, I assumed the operational amplifiers as "perfect amplifiers", so they appear only as abstract amplification blocks, except for the second amplifier, which has a finite input impedance of 47k, which i modeled with resistor Ri.</p>

<p>Now we need the basic equations of each components.<br>For the resistor, the current/voltage relationship is defined by Ohm's law: <code>R = Ur/Ir</code>. For the 1k resistor: <code>Ur=10*Uin - Ud</code> (<code>Ud</code> is the voltage at the node connecting the diode and the resistor relative to ground.) So that gives: <code>Ir = (10*Uin - Ud)/R</code>. For the 47k resistor that models the imput impedance of the following amplifier stage: <code>Ur = Ud</code>, so that gives: <code>Iri = Ud/Ri</code><br>For the Diode, the relationship is <code>Id = I0 * (exp(A*Ud) - 1)</code>, where <code>A</code> and <code>I0</code> are constants that I read from the datasheet. This is the very basic diode equation you will find in every textbook or on every website. Except that I concentrated three values into one constant, <code>A = q/nkT</code> - I don't need to know them all individually.</p>

<p>From  there on it's Kirchhoffs law: All currents flowing into a node have to cancel each other out. That leads directly to the equation posted above.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/14">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/14</link>
        <pubDate>Thu, 14 Dec 2017 15:28:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-14</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>could you possibly explain how you derived your equation in more detail?<br>Itâs not something Iâve seen before, or perhaps reference something I could read up on.<br>Thanks</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/13">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/13</link>
        <pubDate>Thu, 14 Dec 2017 14:55:16 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-13</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="11" data-topic="4013" data-full="true"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/sputnki/40/175_1.png" class="avatar">Sputnki:</div>
<blockquote><p>What if you fit the function with taylor expansions around several points and weigh the single contributions with a table?</p></blockquote></aside>

<p>That is actually a very nice idea! I wonder how complicated this would get, computation wise. I spent half of this morning trying to fit some polynomials into my curve. I was able to get halfway decent results with 2nd-order polynomials, but only if I split the whole curve into 100 2nd order polynomial sections. The problem with this is that low order polynomials are easy to compute but you need many of them to get decent results. On the other hand you can also (sometimes) get good results with a few high order polynomials - which saves memory but requires many additional multiplications, making it a poor solution for low-powered processors like Axoloti. Right now with my 100 2nd order sections, I don't really save enough memory  to justify the increased processing effort.</p>

<p>Coming back to your idea with the weighted taylor sections: I think the same tradeoff applies here. If I use higher order taylor expansions for this, it will be too computationally expensive. If I use lower order taylor expansions, I need more of them, mitigating the benefits alltogether. I might, however get less noise compared to the linear interpolated lookup table.</p>

<p>PS: I also tried to use 5th order polynomials, which are constrained to three points of the curve and the steepness on the points where they touch each other. However, there's still a problem in my equations, I keep getting poorly conditioned equation systems that can't be solved.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/12">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/12</link>
        <pubDate>Thu, 14 Dec 2017 13:06:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-12</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>What if you fit the function with taylor expansions around several points and weigh the single contributions with a table?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/11">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/11</link>
        <pubDate>Thu, 14 Dec 2017 12:28:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-11</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="9" data-topic="4013"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/ott/40/4529_1.png" class="avatar">Ott:</div>
<blockquote><p>[...] have your table be in log scale, [...]</p></blockquote></aside>

<p>Yes, but scaling the read index and the fractional would be way too complicated and cost a lot of CPU.</p>

<p>It dawned on me, that lookup tables are not ideal for this application.</p>

<ul>
<li>Not the exact shape of the curve is important (some deviation there wouldn't be problematic) but how smooth the interpolated waveform would be (first order deviation must be continuous)</li>
<li>The curve itself is very smooth - a low order polynomial would already be sufficient to approximate the curve well enough.</li>
</ul>

<p>From there on, its simply a matter of fitting a polynomial into the desired curve. The only important thing is that this polynomial would have to be symmetrical to the origin.<br>After I realizes that, it dawned on me that this pretty much directly leads to the typical curve found in the <code>dist/soft</code> object in the factory library, which implements this function: <code>y=1.5*x-0.5*x^3 for -1&lt;x&lt;1, y=-1 for x&lt;-1, y=1 for x&gt;1</code><br><img src="//community.axoloti.com/uploads/default/original/2X/5/590efa162064614ed597aad70bc860f0431facb5.jpg" width="658" height="406"></p>

<p>So - yea - unless I wanted to specifically model the 1N4148 circuit I have here on the breadboard, I could just stop here because I would basically recreate something that exists already.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/10">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/10</link>
        <pubDate>Thu, 14 Dec 2017 06:07:52 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-10</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@Ott]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/ott">@Ott</a> wrote:</p>
          <blockquote>
              <p>You could simply have your table be in log scale, although I'm not sure how much CPU that would end up costing.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/9">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/9</link>
        <pubDate>Thu, 14 Dec 2017 03:29:16 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-9</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>The optimized (still beta) version can now be found in the community library. <code>TSG/dist/diodeDist.axo</code><br>It consumes roughly 6% CPU (still too much if you ask me)</p>

<p>One thing that I found difficult is getting rid of noise introduced by the lookup table. For medium distortion settings and a table size of 256, only the lowest 4 values were actually used! The introduced noise was clearly audible. I tweaked the values a little bit and reduced the maximum available distortion level. Also I increased the size of the table to 1024 values. Now the noise is not audible anymore. Still, it's kind of silly to have a large lookup table, when most of the time you only really use the lowest quarter of it. It would actually be better, if there were more values in the lower ranges and fewer in the higher ranges (were the distortion will mask away any noise that may be introduced by reading from the table).</p>

<p>I'm thinking, a way out of this may be to have multiple, smaller lookup tables for different regions of the curve instead of one single table for the whole curve. I could then dynamically switch between the different tables, depending on where on the curve my input value is. Let's say I originally had a table with 1024 values for the whole input range of -1&lt;28 to 1&gt;&gt;28. That would mean, each value in the table spans over 1&lt;&lt;18 steps of the input.<br>I could instead have one table of size 512 for the whole range (step size would be 1&lt;&lt;19) and an additional table of size 512 for the range of -1&lt;&lt;22 to 1&lt;&lt;22 (stepsize would be 1&lt;&lt;13). That would be the same memory footprint, but orders of magnitude better resolution in the critical low ranges of the waveform.<br>The processing would be only marginally more complicated:</p>

<pre><code>if (input &lt; (1&lt;&lt;22))
{
    // read from small table
}
else
{
    // read from big table
}</code></pre>

<p>So that would be an additional shift, subtract and conditional jump operation - that's only very little increase. I'll try this tomorrow and see if the noise can be reduced further.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/8">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/8</link>
        <pubDate>Thu, 14 Dec 2017 00:08:37 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-8</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Okay, I fixed the issue. Turns out, I had wrong values for <code>I0</code> and <code>A</code>. I was basically taking wrong readings from the chart in the datasheet.<br>Now, with the values corrected, this is the new plot:<div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/aa1b949a043c208cecbb92e2f1c33d90a6516922" href="//community.axoloti.com/uploads/default/original/2X/a/aa1b949a043c208cecbb92e2f1c33d90a6516922.png" class="lightbox" title="model_distorted_saw_fixed.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/a/aa1b949a043c208cecbb92e2f1c33d90a6516922_1_666x500.png" width="666" height="500"><div class="meta">
<span class="filename">model_distorted_saw_fixed.png</span><span class="informations">1280x960 45.6 KB</span><span class="expand"></span>
</div></a></div><br>which looks fairly similar to the real scope shot.</p>

<p>I added the second diode antiparallel to the first to make the distortion circuit complete. In the model, simply only one diode is conductive at a time, which is a good approximation, given that the reverse current in these diodes is so incredibly small.</p>

<p>I then copied the lookup table that was generated by the script into a new axoloti object and added the code that does the interpolation. Right now, it converts to float and does everything super unoptimized. That's why it consumes around 10% CPU (for a simple lookup table read, lol!)<br>Anyway, here's the object for you to play with:<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/d/d9caa4b219c1c7955568d7e6477ce23adeabb506.axo">diodeDist.axo</a> (3.2 KB)</p>

<p>Here is a audio demo comparing the real distorted drums to the model (real first, model second):<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/6/65392b0933ed79c9bfef2fe3adb49b0c069bbb70.axp">real_vs_model.flac.axp</a> (443.2 KB - please remove *.axp file extension)<br>I can barely hear a difference. To my ears, the model lacks a little bit of top end, but that could just be a subjective thing. I'd say, it's close enough - probably not worth adding any additional stuff to this model, it would only make the computation more CPU intensive.<br>On the oscilloscope, the real signal and the model look identical now.</p>

<p>Funny, that was way simpler than I had expected.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/7</link>
        <pubDate>Wed, 13 Dec 2017 21:29:51 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Okay, so here's how far I got today.<br>I wrote down the simple equation that describes the circuit in this picture:<img src="//community.axoloti.com/uploads/default/original/2X/f/fcc033325b671fd7559653096a2bc328cb576673.png" width="602" height="173"><br>If you sum up all currents flowing out of the node connecting R, Ri and D, you get:</p>

<pre><code>0 = -(10*Uin - Ud)/R + I0*(exp(A*Ud) - 1) + Ud/Ri</code></pre>

<p>where <code>Ud</code> is the voltage between the node and GND, <code>I0 = 50.36ÂµA</code> and <code>A = 7.48336 1/V</code> (which I calculated from two points in the U/I plot in the 1N4148 datasheet).</p>

<p>I took the opportunity to finally learn some python (which I wanted to do for a long time). Here's a script that numerically solves that equation for all input voltages between 0-1V and creates the sourcecode for a lookup table to be used in C source code (this could be the start for a actual implementation). Also the script prints a saw and sine waveform together with their distorted signals, which are computed using the lookup table.<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/0/00e9a365d2e5849f763b3f46a55c6dfbe1d62c6b.axp">Approximation.py.axp</a> (3.2 KB - please remove *.axp file ending) <br>Please bear with me, it's my first ever python code. Frankly, I was quite surprised how quickly I had put this together.</p>

<p>Here's the numerical solution of the above equation:<br><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/66f2b15894d08467ee5d95ca0ddd34a0b725bba3" href="//community.axoloti.com/uploads/default/original/2X/6/66f2b15894d08467ee5d95ca0ddd34a0b725bba3.png" class="lightbox" title="Uout_vs_Uin.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/6/66f2b15894d08467ee5d95ca0ddd34a0b725bba3_1_666x500.png" width="666" height="500"><div class="meta">
<span class="filename">Uout_vs_Uin.png</span><span class="informations">1280x960 33.4 KB</span><span class="expand"></span>
</div></a></div><br>Here's a saw wave and its distorted counterpart, as computed from the equation. This plot is formatted so it can be easily compared to the scope shot from my last post. As you can see its not yet looking anything like the real scope shot, so I guess there's something wrong with my formula so far.<div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/63e2a16e205277267f2fcfbf15684a4b23dcfd7e" href="//community.axoloti.com/uploads/default/original/2X/6/63e2a16e205277267f2fcfbf15684a4b23dcfd7e.png" class="lightbox" title="model_distorted_saw.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/6/63e2a16e205277267f2fcfbf15684a4b23dcfd7e_1_666x500.png" width="666" height="500"><div class="meta">
<span class="filename">model_distorted_saw.png</span><span class="informations">1280x960 46.1 KB</span><span class="expand"></span>
</div></a></div><br>I'm currently trying to figure out why it doesn't show the same image. To me it looks like the diode curve is not quite steep enough, so maybe I picked the wrong values for I0 and A.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/6</link>
        <pubDate>Wed, 13 Dec 2017 20:09:35 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>Okay. So I went ahead and built this small setup.<div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/dafc5a480108316b706f0bdaf8d9ae373e536daf" href="//community.axoloti.com/uploads/default/original/2X/d/dafc5a480108316b706f0bdaf8d9ae373e536daf.jpg" class="lightbox" title="photo.jpg"><img src="//community.axoloti.com/uploads/default/optimized/2X/d/dafc5a480108316b706f0bdaf8d9ae373e536daf_1_690x388.jpg" width="690" height="388"><div class="meta">
<span class="filename">photo.jpg</span><span class="informations">1280x720 135 KB</span><span class="expand"></span>
</div></a></div><br>The audio from Axoloti comes in with the orange cable on the left. My soundcard/headphones are connected to the black cable on the right. Power comes from a eurorack case via the ribbon cable. There are some ground hooks for probes and two 3.5mm jacks for connecting a scope (I had the 3.5mm=&gt;BNC cables already and found this less fiddly than standard oscilloscope probes. For audio signal it doesnt make much of a difference anyway)<br>It is the circuit posted above. Only difference: There is no high pass filter cap and the diode is pointing from ground upwards to the opamp output (due to the inverted signal, this gives me clipping on the positive side of the waveform).</p>

<p>I used this Axoloti patch to send various waveforms to the circuit:<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/a/aca0c43b3bae86aac2f884312ddf8c6b0e1f5aa5.axp">testsignals.axp</a> (28.7 KB)<br>You can select between Sin/Tri/Saw/Sqr oscillators (both antialiased and not), repeating clicks/pulses, a drum pattern, a synth line and white noise. I'm not sure yet which of these will prove helpful, but it's a start.</p>

<p>I then observed the waveforms on the scope. Here is a zip file with all my measurements: <a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/e/ee0d238b678a0019b432d7de3e84751a618ee568.axp">Measurements.zip.axp</a> (1.5 MB - remove the *.axp file extension. I had to rename it to upload)</p>

<p><strong>The measurements I did (+ a few example pics, the rest is in the zip file):</strong><br>Spectrum of the sine wave I feed into the circuit as well as the spectrum of the distorted waveform with the master volume int he patch set to 32, 45, 55. Here's the distorted version with the level set to 55:<br><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/a33d60ee3fcdbf5a06c65204c5a378a106ef44f0" href="//community.axoloti.com/uploads/default/original/2X/a/a33d60ee3fcdbf5a06c65204c5a378a106ef44f0.png" class="lightbox" title="Spectrum_Dist55_sin.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/a/a33d60ee3fcdbf5a06c65204c5a378a106ef44f0_1_690x414.png" width="690" height="414"><div class="meta">
<span class="filename">Spectrum_Dist55_sin.png</span><span class="informations">800x480 84.7 KB</span><span class="expand"></span>
</div></a></div></p>

<p>Sin and Saw waveforms with the pitch control set to -38 and +16. Recorded at various levels of dirstorion (32, 40, 45, 50, 55, 64). Here's a saw wave, pitch=-38, level=50:<div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/e8518c3af12789624aec1e11c6d4c092688281d6" href="//community.axoloti.com/uploads/default/original/2X/e/e8518c3af12789624aec1e11c6d4c092688281d6.png" class="lightbox" title="-38_50_saw.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/e/e8518c3af12789624aec1e11c6d4c092688281d6_1_690x414.png" width="690" height="414"><div class="meta">
<span class="filename">-38_50_saw.png</span><span class="informations">800x480 42.7 KB</span><span class="expand"></span>
</div></a></div><br>And the same waveform recorded with the pitch set to +16: <div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/d37b4eb1de5f97bc1788d0a27bcdc49a6ca4be45" href="//community.axoloti.com/uploads/default/original/2X/d/d37b4eb1de5f97bc1788d0a27bcdc49a6ca4be45.png" class="lightbox" title=" 16_50_saw.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/d/d37b4eb1de5f97bc1788d0a27bcdc49a6ca4be45_1_690x414.png" width="690" height="414"><div class="meta">
<span class="filename"> 16_50_saw.png</span><span class="informations">800x480 50.4 KB</span><span class="expand"></span>
</div></a></div></p>

<p>Also I recorded some shots of the Drumbeat. Here's a closeup of the noise portion of a snare hit:<div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/c72939a6dd09d0a42ffa6e683fb39d986260215e" href="//community.axoloti.com/uploads/default/original/2X/c/c72939a6dd09d0a42ffa6e683fb39d986260215e.png" class="lightbox" title="Drums_55_SD_Zoomed2.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/c/c72939a6dd09d0a42ffa6e683fb39d986260215e_1_690x414.png" width="690" height="414"><div class="meta">
<span class="filename">Drums_55_SD_Zoomed2.png</span><span class="informations">800x480 36.9 KB</span><span class="expand"></span>
</div></a></div></p>

<p>Seems to me like this could be nicely recreated with just waveshaping. I was expecting to see some diode recovery effects on higher frequency signals, but apparently we're not yet high enough to <strong>see</strong> anything.</p>

<p>Here's a recording of the drumloop. First the source signal, then the distorted signal at levels of 32, 45 and 55 (all normalized so we can hear the effect of the distortion, not just the difference in volume):<a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/0/0da4557ce55c8b6e5cf34161a1a1eef566fa3db0.axp">Drums_src_32_45_55.flac.axp</a> (1.7 MB - again, remove the *.axp file extension)</p>

<p>So, that's all I can do for today, but I'll start creating a simple model later.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/5</link>
        <pubDate>Tue, 12 Dec 2017 14:09:39 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@SmashedTransistors]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/smashedtransistors">@SmashedTransistors</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="1" data-topic="4013"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/90db22/40.png" class="avatar">TheSlowGrowth:</div>
<blockquote><p>I'm currently approaching my final thesis in electrical engineering at a university in Germany.</p></blockquote></aside>

<p>Maybe it is a good idea to study <strong>how</strong> an electronic modelling software works.<br>The best exemple is the ubiquitous Spice you may know and use in your studies<br><aside class="onebox wikipedia">
  <header class="source">
    <a href="https://en.wikipedia.org/wiki/SPICE" target="_blank" rel="nofollow noopener">en.wikipedia.org</a>
  </header>
  <article class="onebox-body">
    <img src="//upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Nuvola_apps_ksim.png/28px-Nuvola_apps_ksim.png" class="thumbnail">

<h3><a href="https://en.wikipedia.org/wiki/SPICE" target="_blank" rel="nofollow noopener">SPICE</a></h3>

<p>SPICE (Simulation Program with Integrated Circuit Emphasis) is a general-purpose, open source analog electronic circuit simulator. It is a program used in integrated circuit and board-level design to check the integrity of circuit designs and to predict circuit behavior.   Unlike board-level designs composed of discrete parts, it is not practical to breadboard integrated circuits before manufacture. Further, the high costs of photolithographic masks and other manufacturing prerequisites make it e...</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
 </p>

<p>That is written in C and open source. <br>And you can find many tutorials about it. </p>

<p><aside class="onebox pdf">
  <header class="source">
    <a href="https://www3.imperial.ac.uk/pls/portallive/docs/1/7292571.PDF" target="_blank" rel="nofollow noopener">www3.imperial.ac.uk</a>
  </header>
  <article class="onebox-body">
    <a href="https://www3.imperial.ac.uk/pls/portallive/docs/1/7292571.PDF" target="_blank" rel="nofollow noopener"><span class="pdf-onebox-logo"></span></a>
<h3><a href="https://www3.imperial.ac.uk/pls/portallive/docs/1/7292571.PDF" target="_blank" rel="nofollow noopener">7292571.PDF</a></h3>

<p class="filesize">0 B</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br><a href="http://emcs.org/acstrial/newsletters/summer09/HowSpiceWorks.pdf" class="onebox" target="_blank">http://emcs.org/acstrial/newsletters/summer09/HowSpiceWorks.pdf</a></p>

<p>Personally, i think that many analog cicuits, and especially stompboxes, are particular because buffering is not very high impedance and not linear (NPN common emitter buffers), the different stages are more <em>coupled</em> than <em>chained</em>, this causes many implicit feedback loops... these feedback loops are source of chaotic behaviours that can be the kind of behaviour mentioned by <a class="mention" href="/u/gavin">@Gavin</a> ...</p>

<p>One critical issue with distortion in the digital/sampled domain is aliasing.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/4</link>
        <pubDate>Mon, 11 Dec 2017 23:40:36 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@Gavin Gavin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/gavin">@Gavin</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/theslowgrowth">@TheSlowGrowth</a>, I like your idea, and would love to participate, but I'm not sure I have anything to offer, only basic circuit building experience, and the only DSP knowledge I have is almost nil, except what I have learnt on this forum. But the main reason why I am responding is your choice of first test circuit. "Distortion" From what I have been reading on the great wide web, is that this is a bit of a holy grail search to achieve a true distortion with DSP. Even without extensive knowledge, my attempt at distortion through my "Diode Clipping Simulator" object I posted on the community contributions. But as seams to be the case with most DSP distortion is its lack of random natural feel it has, somehow randomness need to be added to the surface of where the signal is clipped. But I also believe maybe the search for the holy grail needs to end, and in stead of trying to mimic, create something new based on what DSP can achieve that circuitry cannot. The same applies to "Boost" and "Overdrive", as these are part of the family that leads to distortion. This reply is not intended to be negative in any way, as I will watch your progress with great interest and desire to test, but maybe to not follow other DSP distortion attempts to re-create, but more like what is unique about the result. Boost, Overdrive and Distortion is just a topic I am very passionate about but also want to see attempts break down barriers rather then held back by borders.<br><img src="//community.axoloti.com/images/emoji/twitter/grin.png?v=5" title=":grin:" class="emoji" alt=":grin:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/3</link>
        <pubDate>Mon, 11 Dec 2017 23:14:44 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
      <item>
        <title>Modelling analog circuits in software</title>
        <dc:creator><![CDATA[@TheSlowGrowth]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/theslowgrowth">@TheSlowGrowth</a> wrote:</p>
          <blockquote>
              <p>And to get things started, here is a suggestion for a first test circuit. The goal of this could be to find out what's important about a diode distortion. We could later on add a second diode antiparallel to the first to create the typical guitar distortion effect. For now, I think this will give a good starting point.<br>I guess we will need a high pass filter to compensate for the introduced DC offset with just one diode. Otherwise we may have trouble comparing this to our model.<br>(warning: I haven't yet built this so I don't know if the gain would be enough).</p>

<p><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/ac72587fa93173671870b580e859b62212335002" href="//community.axoloti.com/uploads/default/original/2X/a/ac72587fa93173671870b580e859b62212335002.png" class="lightbox" title="Bildschirmfoto 2017-12-11 um 14.56.05.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/a/ac72587fa93173671870b580e859b62212335002_1_690x233.png" width="690" height="233"><div class="meta">
<span class="filename">Bildschirmfoto 2017-12-11 um 14.56.05.png</span><span class="informations">1926x652 72.5 KB</span><span class="expand"></span>
</div></a></div></p>

<p>I'll build this tomorrow and see if it is a good idea, but until then it could serve as a little bait to get you interested <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013/2</link>
        <pubDate>Mon, 11 Dec 2017 13:59:47 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4013-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/modelling-analog-circuits-in-software/4013.rss">Modelling analog circuits in software</source>
      </item>
  </channel>
</rss>
