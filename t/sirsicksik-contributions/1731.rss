<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>SirSickSik Contributions</title>
    <link>http://community.axoloti.com/t/sirsicksik-contributions/1731</link>
    <description>If you would like to make a donation for my services, you can donate using this link:
[paypal.me/SirSickSik](http://paypal.me/SirSickSik)

I started coding my first modules three weeks ago and I like it! XD
So, here comes the list:

CONV:
-pitch2khz (actual khz value)

DIST:
-analogue: analogue style distortion with a &quot;capacitor&quot; holding the maximum energy that can be used for gain (gain takes energy from it, feed adds energy to it)

DYN:
-transien designer: dynamics module for adding/subtracting volume to/from the attack or decay parts of the incoming sound.

-compressor: compressor with attack/decay, threshold (oh now I notice I completely forgot the ratio hahaha), input gain, expander function and goal-gain.

-limiter: limiter with decaytime, threshold, automakeup gain and expander function

FILTER:
-36dB LP filter with resonance

FX:
-pitchshifter: with LFO-rate and window size

LFO:
-ShapingLFO: low frequency oscillator with selectable sine,tri,saw,ramp,pulse waveforms, phase input, reset/sync, uni/bipolar option, 2x bezier-curve parameters, curve mode (normal,exp,-exp, S-curve peak, S-curve Square) and extra harmonics input.

-latchfader: outputs a trigger each time the sine is at lower (trg 2) or upper (trg 1) bound. Usable for triggering latch module and the morph from one to the other using mixfader controlled by the sine output.

LOGIC:
-Shift register: CV/gate 32-step shift register with loop-position selection and 3 combi outputs for gates (trigger position selected by var inputs)

MATH:
-8x smooth: 1 control for smoothing 8 values at the same time.

-divremc: with a range input instead as attribute.

-divremcgates: each time rem is at selected countposition, outputs a high gate,

-ratioVCA: uses integers to set a division for an incoming float.

-tripplepower: 3x stacked exponential curves. Usable for curving the phase of an oscillator for example.

MUX:
-modselector: features 8 inputs for modulations and 8 outputs to send to. Has input-selectors and volume control for each output.

-smthRotator: smoothly rotates the 8 inputs over the 8 outputs.

OSC (&amp;shapers):
-11XShaper: MASSIVE phasor-oscillator shaper with 11 modes (one glitching between the 10 main modes). Each mode has 6 parameters to modulate the waveform. CPU range from 5% to up to 17% for the harmonic morphing shaper!

-3AMshape: 3 sine oscillator ringmodulating each other. 6 parameters to control

-3xModOsc: tripple sine oscillator with FM, PM and AM.

-6HrmShape: heavy harmonic shaper. Shapes incoming phase into 6 seperate sines morphing from  one harmonic to another.

-doublepulsar: pulsewidth oscillator with 2x2 cores.

-dualbezshape: bezier oscillator with 2 stacked bezier curves. One for positioning the curve and the other for the curve-amount.

-glitch osc: based on my counter modules, this just glitches the hell out of the phase input, jumping, wrapping, speeding up etc.

-ringosc: ringmod oscillator for creating bell-like tones.

-sawtrimod: oscillator with controls for morphing the waveform. Saw&lt;-tri-&gt;rampl, tri&lt;-&gt;sine, pulse etc..

-supersaw: supersaw oscillator with 6 parameter controls for detuning, pitch offset, phase, morphrate.

-vosimshaper: a vowel oscillator using 3 AM&#39;d sine oscillator each having their own rate control (in ratio to incoming phase) and width control.

PATT:
-1RngCount: single counter manipulator based around the divremc module (which I&#39;ve been calling ranger module for several years now in my synthedit projects). Incoming count gets ranged between 0 and Pre-Range. After this the rem-out gets multiplied, added to the multiplied div-out and added to a multiplied (div-out)*(rem-out). Hard to explain, but very usable for quick patterns.

-CountMem: Module for using a single knob and single selector for controlling the 9 parameters of the 4RngCounter or 3 single counters.

-ReCntMem: controller module for the ReCount module, needing only a single control, to control up to 16 parameters.

-ReCntPos: a counter &quot;restarter&quot; or polyrhythmic generator. For up to 16 steps, set the count-length that each step takes before going to the next step.

-countCtrl: controller module for the Countmem module, showing which parameter is being selected.

TABLE:
-16mod_recorder: record up to 16 modulations with just a single selector and single CV control!

TIMERS:
-Clock2Timing: converts a clock/gate signal into timing references. Outputs total amount of samples for each tick, seconds, Hz to be used with my LFO modules, khz for bpm-synced oscillators (if you&#39;ld like that), base-delay time to be used for BPM synced delays, maxdelay for bouding the delay-modulation to usable range, and &quot;maxtimes&quot;: the amount of times the basedelay time can be multiplied and still fit the delaybuffer.
The samplelength input should be set to the same binary value of the delay module (see values in xml code by opening in editor)</description>
    
    <lastBuildDate>Fri, 30 Dec 2022 15:56:49 +0000</lastBuildDate>
    <category>Community Library</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>krate XYZ-scope for CV</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/1/166ee65040a2fce78716805780770590b65cf891.axo">XYZscope.axo</a> (1.3 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1169">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1169</link>
        <pubDate>Fri, 30 Dec 2022 15:56:49 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1169</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@hitachii Hitachii]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/hitachii">@hitachii</a> wrote:</p>
          <blockquote>
              <p>Finally got to sit down and try this out. This is a whole envelope suite! Was just reading about the <a href="http://musicfromouterspace.com/index.php?MAINTAB=SYNTHDIY&amp;PROJARG=STATEVARVCFFEB2006/STATEVARVCFFEB2006.html&amp;VPW=1910&amp;VPH=759" rel="nofollow noopener">MFOS Wave Former</a> and this is like the big brother of it. Have you ever made any eurorack units? Considering your catalogue of objects, I think you'd make some mean modules.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1167">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1167</link>
        <pubDate>Sat, 08 May 2021 01:19:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1167</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>NEW MODULE</p>

<p>-multi-stage envelope</p>

<p>-up to 64 stages (though that would be a LOT of editing..LOL... or just press the randomise button I just added <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> )<br>-3 modes for auto attack/release, sustained, or looping several stages for a set amount of loops (after which it can either hold or release).<br>-different set of stages for gate and release parts<br>-stages can independently change with fixed-time, fixed-rate or exponential rate<br>-a "common" time-scaling knob to quickly set the timing range of all stages faster or slower (log, so +12 would slow it by 1 octave/double the normal time)<br>-several useful outputs for some internal values (end of envelope, stage, loop count, currently looping off/on)</p>

<p>-I added some functionality around it to get it automatically going with example envelopes</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/0/058a1cb50ab418d7abd15a340d6d642f2d71ebf2.axp">multistage envelope 0.1.axp</a> (31.1 KB)</p>

<p>To make it a bit better controllable I've added independent randomisation-inputs for "main" settings and "timing&amp;amplitude" settings plus an extra input to control the main timing and independent "main timing" controls for when gate is on and release times when gate is off.<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/9/9dff115e7f5b5e9faf1a0628628b3a315f224df2.axp">multistage envelope 0.2.axp</a> (43.8 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1166">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1166</link>
        <pubDate>Wed, 05 May 2021 13:39:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1166</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>finally got something intesting going on with the FIR filter code.</p>

<p>This filter isn't meant as a normal lowpass/highpass/bandpass filter, but more like an end-of-chain filter to shape the sound character of your synth. More like a complicated EQ.</p>

<p>Continuous modulation inputs for pitch, Q (more or less that is..) and filter variation are added, but will also mean quite an increase in cpu use. These can be switched on/off using an "update" input.</p>

<p>To make it more usable, I've added the possibility to save the shapes to your sd-card, to use later on in other patches with a trimmed down version of the module (see code which parts can be deleted for this).</p>

<p>Two "modes" are used to generate the coëfficients: one based on a sinewave to create lowpass/bandpass/highpass/notch type of filters (certainly not perfect!) and the other just randomly fills the coëfficients with values. These can then be mixed together to create the overall character.</p>

<p>Pitch and Q controls are more or less "logical", variation also in the 1st mode (mode set to 0), the others are a bit more "lets see what happens if I turn this dial".</p>

<p>This FIR filter also allows bigger coëfficient tables (max 256) than the factory FIR filter (16). Increased size allows for filtering lower frequencies, but also adds lots of cpu use (that's why you better just build a bank of presets and load these, instead of live modulating them, and then use normal IR filters for live filtering)</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/1/1f97398ed81398c70dceee389f6c645fa8464677.axp">FIR filter coëfficients controller.axp</a> (27.3 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1165">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1165</link>
        <pubDate>Sun, 25 Apr 2021 22:00:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1165</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@reubenfinger]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/reubenfinger">@reubenfinger</a> wrote:</p>
          <blockquote>
              <p>Looks Class, cheers for the constant generosity</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1164">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1164</link>
        <pubDate>Fri, 23 Apr 2021 06:26:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1164</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>earlier version which was used with external audio, use this to see the setup for layering with incoming audio.<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/a/ae94efe4013bb6178c03df5e4c78b8329d420d1e.axp">sampling oscillator.axp</a> (38.0 KB)</p>

<p>second version<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/e/eedcc6a0bbf16b7e8036f479f28b1488bf718e1e.axp">sampling osc0.1.axp</a> (34.2 KB)</p>

<p>and a version where I combined the two as external audio fx:<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/2/2074bf7ae3882b80e863ef540b94095ac71fcc85.axp">sampling oscillator0.2.axp</a> (55.2 KB)</p>

<p>and a third version with inbuild speed controller. Speed at 0 plays the audio at recording rate. Great to alter speech recordings! Still working on this module, so more revisions will show up. These will also probably add some more cpu, that's why I keep these older versions here in case you don't need all the special things..<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/4/40ee2ea1101ab2b7495709b5da0aa78abe91ef6f.axp">sampling oscillator0.3.axp</a> (16.2 KB)</p>

<p>This is a granular oscillator that generates one big continuous wavetable with stacked randomly modulated sines.<br>Two readout positions and grain-length control how the oscillator reads from the table.<br>It has the option to just record any incoming sound into the table and use it instantly.<br>Using a feedback loop, the wavetable can feed back on itself, creating freaked up wavetables for lots of sonic exploration. Very industrial sounding.<br>When used with external audio, try out some envelope followers to trigger recordings, randomisations and opening up/closing down the volume and mix it with the original audio. I found that the tracks with drums of aphex twin's cd "drukqs" worked very nice to add even more grit to his often already freaked out drums.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1163">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1163</link>
        <pubDate>Thu, 22 Apr 2021 23:29:01 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1163</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/5/5e9cbe5bea0bf2e31f5852e48ae99898d6d8b243.axp">inversed note counter0.5.axp</a> (127.5 KB)</p>

<p>a patch using a melody/chord-base/key generator (several different versions that can work together).<br>The melodies that are generated start from 0 and just randomly go up or down. But instead of reading them normally, they are read "last to first", to make sure that at the last count of the counter will always go back to "root"/"0". Several toggle switches are added to add some maximum-offset pendulum movement or limitations on the range (also creating pendulum movement). If a change in the sequence falls at a counter-beat, it checks whether it could be a pre-roll for the step after it that will also change, otherwise it will force the step before it to change. This will "remove" those odd feeling off-beat triggers you might have with "normal" randomisation.<br>This is done for 2 sequences, an "arp" and a "base" (eg. chord root). I allowed two different counter inputs for these, so you can use polyrhitmic variations in counting, but in a "normal" sense, the arp would at least reset to the first count when the base goes to the next step.<br>The "end" parameter divides the length of the counter by powers of 2 and uses this length at the end of the count to "walk" to the next "base" note. The arp is added to this base note as a note offset within the chosen scale, the key input is added to both base and note outputs. <br>A third output outputs the current "position" within the scale (always use 7 notes in this scale for these modules! I couldn't add any code anymore because of size limitations, but the modules' codes are quite easily modified to allow for less or more notes per octave)</p>

<p>well, anyways.. there's actually a bit too much to explain in this patch haha<br>I tried to make it at least oversee-able and seperated the voices. The patch is on the brink of using to much memory, so I even needed to change the order of modules to be able to get the patch to run, so be careful to not just drag modules around.. this might overflow the memory..<br>Some extra goodies are a tripple morphing PM oscillator, a random tremelo for sweeping between notes within the table, a randoming attack/decay envelope and an allpass-based reverb.</p>

<p>If you want to know what a module does exactly, just create a new patch, hook up the bare essentials and use displays to read out what it's spitting out.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1162">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1162</link>
        <pubDate>Mon, 19 Apr 2021 22:54:43 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1162</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@jcgriggs John Griggs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jcgriggs">@jcgriggs</a> wrote:</p>
          <blockquote>
              <p>Brian Eno beat you to it: <a href="http://www.generativemusic.com/bloom.html" rel="nofollow noopener">http://www.generativemusic.com/bloom.html</a></p>

<p>Regards,<br>  John</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1161">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1161</link>
        <pubDate>Mon, 12 Apr 2021 13:34:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1161</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>yes, I just love the idea of a patch that functions like a track. It's like a song that's always a little bit different from the previous time you played it, although you still recognize the sound/feel. Would be a nice twist on the normal albums that come out: a self-contained music-generating patch that runs from a flashdrive or a usb and perhaps some minimalistic control over midi/computer-GUI to personalise the music, eg. tempo, genre, key, scale and type of sounds (clear, bassy, distorted)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1160">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1160</link>
        <pubDate>Sun, 11 Apr 2021 16:25:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1160</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@hitachii Hitachii]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/hitachii">@hitachii</a> wrote:</p>
          <blockquote>
              <p>Awesome. I forget which one it was but one of your objects has a help patch with self generating audio and I like to just let it ride because it sounds great.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1159">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1159</link>
        <pubDate>Sun, 11 Apr 2021 16:10:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1159</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>The drum-sequencer makes use of a bank of 64 different drum-sequences of 16 steps each. But I added lots of goodies to spice up these 16 steps:<br>-a count&amp;phase "re-measure" that can turn the 16-step counter from a normal 4x 4/4 measure into a swinged 4/4 measure, a combined 2/2 and 3/3 measure, two versions for tripplets and even 5/5 and 6/6 measures, where the two 3/3 version just skip one of the counter-beat steps and the 5/5 and 6/6 re-use some steps. So the 0, 4, 8 and 12 steps are always used and the others are played in an order to get the measure being selected. eg one of the 5/5 versions: 0,1,3,2,1,3 for every 4 steps of the normal count.<br>-then the sequencer adds even more variations with settings like the chance of  steps being actually triggered and adding pre-rolls and post-rolls by pre-viewing where triggers will land and calculating the timing/rate that a random amount of pre-triggers will need to land on that trigger. As it uses both the counter as well as the phase-position of the LFO that drives the counter ánd the manipulation of the "re-measure" module, this can create loads of different variations on just a simple 16-step sequence.<br>-the drum-voices have special envelope generators that will calculate the level of the envelope based on the velocity of the trigger and where the envelope currently is. Then it uses this velocity to calculate the new maximum level based on how much is left between the current envelope position and maximum amplitude. So a roll of soft velocity triggers will create a drumroll with increasing amplitude. Also several parameters of the drum-voices are controlled by the velocity of the triggers to make sure they also sound differently at different velocities, just like a real drum.<br>-the cymbal is made with a fdn-feedback network and several modulations to emululate a real cymbal at any size, thickness and being broken or not.<br>-the bass is created with those oscillators I posted awhile ago, which will make sure the bass always stays in the bass region, no matter what octave is being played. Also here, I added several different version for layering the bass sound in specific regions.<br>-the violin-kind-of-sound is a live-ifft oscillator with a bank of 1024 fft-presets and 8 "fft-window" presets. Those 1024 presets will build up a waveform in the "normal" way, so the root-frequency of the fft will follow the root-note that is being played. But the window-fft is used as a static EQ-type of window, where it uses the pitch-information to look up in the table to see what volume each partial might be when playing a certain note. So the 1024 presets could be seen as 1024 different strings and the 8 window-presets could be seen as 8 different guitar-bodies that have different characteristics.<br>Though, it seems there is something wrong in this patch as I know this shóuld create a lot more different sounds than it is currently making..<br>-the melody voice is a 3x phase-modulation oscillator with just a single phase generator. The 3 phase modulating sines are calculated as harmonics on this phase and then added before sending it through a sine-shaper. Also, each of these 3 can morph through independent ranges of harmonics in any order and independent amount of steps for the range of a phasor, where also the level of each of the 3 modulations is independently controlled by envelopes.<br>-the melody and bass note-sequences are being randomly pre-generated, where the calculation of each change is started at the end of the sequence, starting from 0 (root note), then, with random chance, going 1 or 2 notes up or down in the steps before it. This way, it always ends the sequence in root note and "comes home". This is being used 3 times in 3 different timings: a very slow one for root-key, a bit faster one for selecting a chord/scale in that key and a third, fast one, to select which notes in that key and scale/chord will actually be played. As they keep track of where they are from the counter and maximum count, they can also transpose the sequence to the next chord or key at the end of the sequence, so they always line up and make sense.<br>-All the sound sources are monophonic. In the last board I used several mid/side&amp;comb-filter stages to see which frequencies are still in the center and then use comb filters to stereo-spread those frequencies. Only the bass is filtered out of this, to make sure it stays in the center.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1158">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1158</link>
        <pubDate>Thu, 08 Apr 2021 18:42:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1158</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>it's mostly all automatic, there were some brief instances I played around with some parameters to change the sound. I even went away for a while xD</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1157">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1157</link>
        <pubDate>Thu, 08 Apr 2021 09:04:09 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1157</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@hitachii Hitachii]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/hitachii">@hitachii</a> wrote:</p>
          <blockquote>
              <p>Are you doing any manipulation of the sound here at all, or are the Axolotis completely playing themselves? It's equally impressive both ways. Even the transitions sound as if they're meticulously written out.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1156">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1156</link>
        <pubDate>Wed, 07 Apr 2021 18:56:36 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1156</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>3 boards live automatic generation on facebook, all synthesis:</p>

<p><a href="https://www.facebook.com/643370625/videos/10165177734605626/" rel="nofollow noopener">live feed</a></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1155">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1155</link>
        <pubDate>Tue, 06 Apr 2021 11:17:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1155</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>A try-out to enable some sort song-generation with a meaningful way for the settings of different parts of the song.<br>It features a main "compex counter" that randomly creates an amount of poly-rhythmic measures based on a base measure-size, amount of measures per bar and amount of bars that the "part" of the song may have.</p>

<p>By adding attribute-based sequences with names, a song can be "set-up" that control other modules that will perform the dedicated function eg. the genre-sequence might be used to select different presets from a drum-sequencer to set each part of a song to another genre.</p>

<p>Basically, it just spits out sequences of index-numbers for all counting positions of beat,measures,bars, parts and the manual settings per part, that can be used to control modules. The meaning of each setting is completely up to you, I just provided several naming/meaning examples that would still need other "receiving" modules to actually perform the corresponding function selected by the index.</p>

<p>I've tried to make this as simple as possible to customise, so people can make their own lists of meanings/functions to control.</p>

<p>Note that this bunch probably already takes quite some memory of your patch-size (look at the file size! haha), so it would be mostly used in case you've got multiple axoloti that work together to create a full song and you use a single axoloti to control all of them over midi or using the analogue/digital ins/outs, or whatever way you use to make them communicate.</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/3/365cfa3b695765e92ea551a2ea4bd9d7fac37a32.axp">song creator1.0.axp</a> (559.9 KB)</p>

<p>Cleaned up patch without explanations&amp;displays of the different parts, but added an even more simplified version of the ALL SETTINGS modules.<br>Also shows how to add more of them to provide loading/saving song settings with multiples of 16 settings.<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/c/cab400887120343e6961170deedec76c3a247860.axp">song creator1.2.axp</a> (543.7 KB)</p>

<p>ps. to minimise the amount of midi-messages being send, some of the indices can be combined as they're just a couple of bits and send as one midi CC value message like this:<br>value=(indexA&amp;3)+(indexB&lt;&lt;2);<br>This way, the first 4 bits are for index A (numbers 0-15) and the next 3 bits can be used for index B (numbers 0-7).<br>The receiving side can then decompose the message like this:<br>indexA= value&amp;3;<br>indexB=value&gt;&gt;2;</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1154">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1154</link>
        <pubDate>Fri, 02 Apr 2021 14:17:38 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1154</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@hitachii Hitachii]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/hitachii">@hitachii</a> wrote:</p>
          <blockquote>
              <p>Analyizing the signal using only ears and 8" monitors, both versions sounded pretty beefy in that range. I the fifth is really great and adds a nice gritty character.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1153">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1153</link>
        <pubDate>Wed, 24 Mar 2021 03:17:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1153</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@hitachii Hitachii]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/hitachii">@hitachii</a> wrote:</p>
          <blockquote>
              <p>We're living in 2021, while SSS is in 3030 making Sheppard Tone base modules.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1150">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1150</link>
        <pubDate>Fri, 19 Mar 2021 22:14:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1150</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/3/3dd31af76c46807a6af4050c2a954d5f40f50e51.axp">number finger trigger.axp</a> (20.5 KB)</p>

<p>triggering samples with the number keys of the keyboard <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>Perhaps useful for creating drum rhythm presets by playing and recording the triggers?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1147">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1147</link>
        <pubDate>Thu, 11 Mar 2021 21:17:52 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1147</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>several new modules for:</p>

<p>-creating melody patterns that go back to 0 (root) at the end of the counter.<br>-randomisation of 4 values with shared selectable minimum and maximum value<br>-xy-shape lfo, based on sine&amp;cosine pair, it crossfades between points on the circle.<br>So when steps is set to 5 and skip to 2, it generates a pentagram movement.<br>-2 versions of synced "timbre" sine oscillators with self-fm. For generating a peak in the spectrum and then use the internal FM oscillator to create overtones and undertones around this peak.<br>-4-tap pingpong delay with individual panning and filtering for each tap<br>-sine lfo's (still called saw though haha), that randomly update their harmonic ratio at each cycle. Wob Wobwob Wobberdi Wob!<br>-interpolated audio crossfader<br>-and some more editted modules I guess..</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/3/3ce0134a2e4799043b815b232eb9281ad05fb9c5.axp">peaks0.3.axp</a> (103.3 KB)<br>and a small update:<br><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/a/a12b37881f136f9449d3c088aa265e1ef8949d42.axp">peaks0.4.axp</a> (126.8 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1146">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1146</link>
        <pubDate>Tue, 26 Jan 2021 14:12:09 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1146</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>4 types of midi note priority:<br>last, lowest, highest and loudest</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/b/b4d90242c136b567896c75f359e4e12e4f6015ba.axp">midi note priority.axp</a> (53.1 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1145">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1145</link>
        <pubDate>Fri, 22 Jan 2021 01:47:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1145</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>and as requested by philoop, a soft-syncable lfo that can be used with an external midi clock.</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/b/b013f0b82d84a0ce86246adab3ec00ec29bba1d8.axp">soft sync lfo.axp</a> (21.3 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1144">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1144</link>
        <pubDate>Wed, 20 Jan 2021 16:25:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1144</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>Somebody in a synthedit forum asked for a way to create a polyphonic portamento, so I gave him a few tips out of my head for a work around to get it to work. This soon led to some more ideas which could be done with the work around after which I thought.. hmmm, let's actually try this out for the axoloti.. itz nice <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>also has several other interesting modules I wrote on the fly<br>-simple clock lfo with pulsewidth controlled offbeat and humanize settings<br>-velocity sensitive ADSR with a nice twist<br>-randomisable integer table generator and readout in one<br>-delay with a 4-bit "sequencer"-parameter to set lightgrey/darkgrey/black delaytaps, each with their own timing interval (interval*tapnumber), panning and level. With each next tap of the same color, panning of that color swaps.<br>so all lightgrey, darkgrey and black taps will pingpong, but each at their own rhythm set by the tap-"sequencer".</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/1/12e2b93ef60857a4b57b775d5d703de8a1d3fd71.axp">random previous note portamento.axp</a> (76.4 KB)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1143">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1143</link>
        <pubDate>Wed, 20 Jan 2021 02:45:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1143</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>the problem for a highpass filter is that the samplerate combined with the highest value output of the frequency calculation "MTOF(...,...)" is too low to be able to filter out all high frequencies, but if you oversample a highpass filter about 4 times, it should be able to make the difference between the LP-filter and the input so small, that it effectively filters out all frequencies. To create oversampling on any (in this case highpass) filter, try putting a code within a for-loop like this:</p>

<p>for(int i=0;i&lt;4;i++)<br>{<br>val=___SMMLA(inlet _in - val&lt;&lt;1,f,val);<br>}<br>outlet_out=inlet_in-val;</p>

<p>note that I had to add a space between "inlet" and "_in", otherwise the browser won't display the underscore.. but of course, they should be connected without the space in the actual code.<br>You can of course add an integer controller instead of "4" to set it to any oversampling you like (lowest number should be 1, otherwise the loop stops before it has done anything).</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1142">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1142</link>
        <pubDate>Wed, 23 Dec 2020 14:29:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1142</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@Blindsmyth Simon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/blindsmyth">@Blindsmyth</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="1137" data-topic="1731"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/sirsicksik/40/5014_1.png" class="avatar">SirSickSik:</div>
<blockquote><p>mix out filter.axp (28.2 KB)</p></blockquote></aside>

<p>looks very promising, this was much needed. Especially that it can be a full range hp filter.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1141">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1141</link>
        <pubDate>Tue, 22 Dec 2020 21:31:43 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1141</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
      <item>
        <title>SirSickSik Contributions</title>
        <dc:creator><![CDATA[@MattilynMattroe]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mattilynmattroe">@MattilynMattroe</a> wrote:</p>
          <blockquote>
              <p>Thanks for this, have been playing around coding lfos, and this gave me some ideas. </p>

<p>Though I've been having tons of fun modulating the  TZMMF filter with oscillators recently! Pitch detector on input controlling 2 different oscillators offset by an octave into the fm input, sounds awesome!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sirsicksik-contributions/1731/1140">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/sirsicksik-contributions/1731/1140</link>
        <pubDate>Tue, 22 Dec 2020 16:51:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1731-1140</guid>
        <source url="http://community.axoloti.com/t/sirsicksik-contributions/1731.rss">SirSickSik Contributions</source>
      </item>
  </channel>
</rss>
