<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Midi clock instability/timing issues</title>
    <link>http://community.axoloti.com/t/midi-clock-instability-timing-issues/6526</link>
    <description>Hey all!
I use the axoloti for a while now, and generally I&#39;m a fan of it, but theres one thing that I just can&#39;t get right: stable midi clock output
I work mostly with hardware based synths and drummachines and I use the axoloti mostly as a multi function &quot;utility&quot; box.
This almost always includes transmitting midi clock, either through the DIN midi sockets or the USB host port. 

The problem I&#39;m having is, I can&#39;t get the axoloti to put out a stable midi clock, that it receives, basically midi clock through. I have a clock coming from a master (through the din midi in) and I want the axoloti to output that clock either through the usb host or din midi out. What happens is, that no matter what I try, the machines connected to the midi out of the axoloti always drift out of sync slowly, and have very poor timing in general. To me it seems that it&#39;s &quot;dropping&quot; single midi ticks, so the longer the clock is running, the more out of sync the machine connected to the axoloti out gets.
I&#39;ve tried numerous clock masters and had many machines &quot;slaved&quot;, but its always the same.
To rule out that it&#39;s my patch that&#39;s causing it, I tried making a patch just with the &quot;midithru incl. clock&quot; object, or just with the clock rx/tx objects, but it&#39;s still the same.
What am I doing wrong? To me it seems this is either a hardware timing fault or a bug in the used objects, but since these 2 objects are the only way to transmit an incoming midi clock I don&#39;t know what else to do.
any help is appreciated, because this keeps me from using it in all applications that require a stable midi clock</description>
    
    <lastBuildDate>Wed, 01 Apr 2020 14:06:08 +0000</lastBuildDate>
    <category>Hardware</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-clock-instability-timing-issues/6526.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Midi clock instability/timing issues</title>
        <dc:creator><![CDATA[@jotelcalifornia]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jotelcalifornia">@jotelcalifornia</a> wrote:</p>
          <blockquote>
              <p>yup, everything else runs tightly.<br>I also tried just using a daw as the master clock, midi out from a good midi interface into the axoloti, midi out connected to a sequencer. the daw metronome reveiled great timing flaws. i even recorded it, but I can't find the recording I did back then.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-clock-instability-timing-issues/6526/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/midi-clock-instability-timing-issues/6526/3</link>
        <pubDate>Wed, 01 Apr 2020 14:06:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6526-3</guid>
        <source url="http://community.axoloti.com/t/midi-clock-instability-timing-issues/6526.rss">Midi clock instability/timing issues</source>
      </item>
      <item>
        <title>Midi clock instability/timing issues</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>are you absolutely positive that all your hardware synths stay in sync without the axoloti? i.e. master connected to a midi splitter and to all your slaves?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-clock-instability-timing-issues/6526/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/midi-clock-instability-timing-issues/6526/2</link>
        <pubDate>Wed, 01 Apr 2020 14:03:11 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6526-2</guid>
        <source url="http://community.axoloti.com/t/midi-clock-instability-timing-issues/6526.rss">Midi clock instability/timing issues</source>
      </item>
      <item>
        <title>Midi clock instability/timing issues</title>
        <dc:creator><![CDATA[@jotelcalifornia]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jotelcalifornia">@jotelcalifornia</a> wrote:</p>
          <blockquote>
              <p>Hey all!<br>I use the axoloti for a while now, and generally I'm a fan of it, but theres one thing that I just can't get right: stable midi clock output<br>I work mostly with hardware based synths and drummachines and I use the axoloti mostly as a multi function "utility" box.<br>This almost always includes transmitting midi clock, either through the DIN midi sockets or the USB host port. </p>

<p>The problem I'm having is, I can't get the axoloti to put out a stable midi clock, that it receives, basically midi clock through. I have a clock coming from a master (through the din midi in) and I want the axoloti to output that clock either through the usb host or din midi out. What happens is, that no matter what I try, the machines connected to the midi out of the axoloti always drift out of sync slowly, and have very poor timing in general. To me it seems that it's "dropping" single midi ticks, so the longer the clock is running, the more out of sync the machine connected to the axoloti out gets.<br>I've tried numerous clock masters and had many machines "slaved", but its always the same.<br>To rule out that it's my patch that's causing it, I tried making a patch just with the "midithru incl. clock" object, or just with the clock rx/tx objects, but it's still the same.<br>What am I doing wrong? To me it seems this is either a hardware timing fault or a bug in the used objects, but since these 2 objects are the only way to transmit an incoming midi clock I don't know what else to do.<br>any help is appreciated, because this keeps me from using it in all applications that require a stable midi clock</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/midi-clock-instability-timing-issues/6526/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/midi-clock-instability-timing-issues/6526/1</link>
        <pubDate>Wed, 01 Apr 2020 13:52:22 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-6526-1</guid>
        <source url="http://community.axoloti.com/t/midi-clock-instability-timing-issues/6526.rss">Midi clock instability/timing issues</source>
      </item>
  </channel>
</rss>
