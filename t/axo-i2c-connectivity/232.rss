<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Axo I2C connectivity</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232</link>
    <description>I&#39;m currently trying to get a [2 Adafruit trellis modules][1] connected to axoloti. It&#39;s interfaced using I2C and this should be my starting point, but the object for i2c does nothing more than a setup routine I think. 

I tried the most generic I2C arduino code I could find. It&#39;s an I2C scanner, I tested it om a regular 5V arduino and on a 3.3V RFDuino (with some mods) and it works on both devices. It reports back that there is a I2C device.

includes is an axoloti &lt;a class=&quot;attachment&quot; href=&quot;/uploads/default/original/1X/4c53c80627a82c9be715deda84e5e874cfd12803.axp&quot;&gt;i2ctester.axp&lt;/a&gt; (3.0 KB) patch that has the converted code for axoloti. However it does not compile at the moment.

two questions

 1. I included the needed libraries for compiling by doing:
```
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/libraries/Wire/Wire.h
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/cores/arduino/Stream.h
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/cores/arduino/Print.h
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/cores/arduino/WString.h
ln -s /Applications/Arduino.app/Contents/Java/hardware/tools/avr/avr/include/avr/
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/cores/arduino/Printable.h
```
which is probably not the right way of including libraries, as well as I might be naive to believe this would just work? What is the right way and can this be done with arduinolibs?
 2.  is the logic level on the SDA/SCL lines defined by axoloti or by the device I connect? will I fry axoloti if I connect a device with a 5V logic level that is powered by 5V


  [1]: https://learn.adafruit.com/adafruit-trellis-diy-open-source-led-keypad/connecting</description>
    
    <lastBuildDate>Sat, 30 Apr 2016 08:38:19 +0000</lastBuildDate>
    <category>Hardware</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@MrBim Bim ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mrbim">@MrBim</a> wrote:</p>
          <blockquote>
              <p>That makes a lot of sense. I think I am really trying to over complicate things for myself. </p>

<p>That little screen looks awesome. Might have to look into them myself (for future projects.)<br> I think for now I need to stop getting excited about so many things and focus on some serious learning. </p>

<p>Thank you for all the pointers too.<br>I plan to put everything I have learned and am doing in to some kind of guide for noobs as written by noobs once I have completed my project.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/11">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/11</link>
        <pubDate>Sat, 30 Apr 2016 08:38:19 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-11</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@mongrol]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mongrol">@mongrol</a> wrote:</p>
          <blockquote>
              <p>Well since I've got all my pots and switches going through the Teensy it makes sense to keep all the parameter states there too so I have no need for reading Axo's parameters. The setting in the Axo will be exactly what the Teensy tells it to be, and that's what I display on the oled.</p>

<p>This is all theory atm. I've proven all my code for the individual pieces (Trellis, Oled, pots etc) but I've yet to merge them all into one sketch (waiting on some parts coming).</p>

<p>I also found this <a href="https://github.com/laurb9/tiny_scope" rel="nofollow">https://github.com/laurb9/tiny_scope</a> which hopefully I'll have enough memory for. <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/10">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/10</link>
        <pubDate>Sat, 30 Apr 2016 02:17:04 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-10</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@MrBim Bim ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mrbim">@MrBim</a> wrote:</p>
          <blockquote>
              <p>Ok that's cool. Didn't realise I could have both <img src="/images/emoji/emoji_one/smile_cat.png?v=2" title=":smile_cat:" class="emoji" alt=":smile_cat:"><br>That's probably the way to go then. <br>Still need to work out sending info in the other direction to drive my alphanumerical displays tho.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/9">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/9</link>
        <pubDate>Fri, 29 Apr 2016 07:53:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-9</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@mongrol]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mongrol">@mongrol</a> wrote:</p>
          <blockquote>
              <p>I have my Teensy hooked up to a header at the back of the Midi-IN socket (I soldered on some a female header strip there) so I don't take up the socket. Of course, running Midi into the socket while pressing my buttons may give funny results but at least I leave the socket free and it will all stay internal to my enclosure.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/8">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/8</link>
        <pubDate>Fri, 29 Apr 2016 03:10:19 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-8</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@MrBim Bim ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mrbim">@MrBim</a> wrote:</p>
          <blockquote>
              <p>So I am back with the stupid questions. <img src="/images/emoji/emoji_one/wink.png?v=2" title=":wink:" class="emoji" alt=":wink:"></p>

<p>I like the arduino dealing with all the UI bits but I have 2 issues with doing it like <a class="mention" href="/users/mongrol">@mongrol</a></p>

<p>1) I don't want to sacrifice the midi in socket as I am looking to make a UI that can control many different patches and some of these I will want to play nice with other hardware (some of which has no USB midi) </p>

<p>2)I want to use some of these ( <a href="https://learn.adafruit.com/adafruit-led-backpack/0-54-alphanumeric" rel="nofollow">https://learn.adafruit.com/adafruit-led-backpack/0-54-alphanumeric</a> ) to display parameter values which will mean I need 2 way communication. </p>

<p>Any ideas. I don't mind doing a bunch of reading, I just don't know where to start. Looking.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/7</link>
        <pubDate>Fri, 29 Apr 2016 01:29:41 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@MrBim Bim ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mrbim">@MrBim</a> wrote:</p>
          <blockquote>
              <p>Having thought about all of this, i decided that using an arduino as a go between is probably the best idea. </p>

<p>I now have my Trellis and an Arduino Micro which is what i plan to use to deal with all the physical controls and possibly some 7 segment displays.</p>

<p>My axolotl board should arrive tomorrow. So that will be when all the ideas can start to come to life. <br>I guarantee that i will be  back asking stupid questions within a few days. <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/6</link>
        <pubDate>Thu, 14 Apr 2016 19:45:40 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@mongrol]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mongrol">@mongrol</a> wrote:</p>
          <blockquote>
              <p>This is how I'm using a Trellis. I have it connected to a Teensy which sends MidiCC to the Axo  (header soldered behind the Midi Serial IN socket). I've then found I might as well continue using the Teensy for all other input as it keeps my controller logic and state in one device and reserves the Axo for it's pure audio functions.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/5</link>
        <pubDate>Mon, 04 Apr 2016 00:00:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <p>I'm sure it is possible, I had an I2C scanner demo detecting the trellis directly from the axoloti, but I found it much much easier to connect a 3.3V arduino comptible device (I used an RFduino) and have it send MIDI to GPIO-based midi port on the Axoloti.</p>

<p>It saves you the work of writing/translating a trellis library</p>

<p>--K</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/4</link>
        <pubDate>Sun, 03 Apr 2016 18:37:31 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@MrBim Bim ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mrbim">@MrBim</a> wrote:</p>
          <blockquote>
              <p>Can the trellis be used directly with axoloti Or is it adviseable to use an arduino aswel? Sorry if this is super dumb, I have no experience with i2c</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/3</link>
        <pubDate>Sun, 03 Apr 2016 12:47:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>The I2C object indeed only does the setup.<br>These Arduino includes are not compatible. <br>Use this API:<br><a href="http://chibios.sourceforge.net/html/group___i2_c.html" class="onebox" target="_blank">http://chibios.sourceforge.net/html/group___i2_c.html</a><br>An I2C scanner would totally make sense in the object library, I'll add this when I find time.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/2</link>
        <pubDate>Fri, 14 Aug 2015 12:23:55 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
      <item>
        <title>Axo I2C connectivity</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <p>I'm currently trying to get a <a href="https://learn.adafruit.com/adafruit-trellis-diy-open-source-led-keypad/connecting" rel="nofollow">2 Adafruit trellis modules</a> connected to axoloti. It's interfaced using I2C and this should be my starting point, but the object for i2c does nothing more than a setup routine I think. </p>

<p>I tried the most generic I2C arduino code I could find. It's an I2C scanner, I tested it om a regular 5V arduino and on a 3.3V RFDuino (with some mods) and it works on both devices. It reports back that there is a I2C device.</p>

<p>includes is an axoloti <a class="attachment" href="//community.axoloti.com/uploads/default/original/1X/4c53c80627a82c9be715deda84e5e874cfd12803.axp">i2ctester.axp</a> (3.0 KB) patch that has the converted code for axoloti. However it does not compile at the moment.</p>

<p>two questions</p>

<ol><li>I included the needed libraries for compiling by doing:</li></ol>

<p></p><pre><code class="lang-auto">ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/libraries/Wire/Wire.h
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/cores/arduino/Stream.h
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/cores/arduino/Print.h
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/cores/arduino/WString.h
ln -s /Applications/Arduino.app/Contents/Java/hardware/tools/avr/avr/include/avr/
ln -s /Applications/Arduino.app/Contents/Java/hardware/arduino/avr/cores/arduino/Printable.h</code></pre>

<p>which is probably not the right way of including libraries, as well as I might be naive to believe this would just work? What is the right way and can this be done with arduinolibs?<br> 2.  is the logic level on the SDA/SCL lines defined by axoloti or by the device I connect? will I fry axoloti if I connect a device with a 5V logic level that is powered by 5V</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232/1</link>
        <pubDate>Fri, 14 Aug 2015 12:03:48 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-232-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/axo-i2c-connectivity/232.rss">Axo I2C connectivity</source>
      </item>
  </channel>
</rss>
