<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Two layers Arpeggiator</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925</link>
    <description>Hi Everyone, 

Haven&#39;t yet found an exact answer as browsing the posts in the forum, but do guys feel free to delete this if inappropriate.

I&#39;m looking for a way to use an Oxaloti board to make a double layer arppegiator that could generate midi from played notes as well as patterns, either calculated or from SMF, on different midi out channels. 
Let&#39;s say the Axoloti would have to :slight_smile:
- add 3 fixed midi notes to 3 played midi notes, 
- process the result given different programmed patterns 
- to the first midi channel ; 
as well as :slight_smile:slight_smile:
- extract the fondamental midi note from the 3 played and 
- apply a different programmed pattern to the fondamental and 
- midi out it on another channel.

My question as a newbie and a futur user is :
can Axoloti  do this in a simple way?

As I prefer picturing the process rather than trying to make a bad explanation : 

https://imgshare.io/image/MB1Wj

Thank you by advance for any comment and help about this project.</description>
    
    <lastBuildDate>Mon, 16 Sep 2019 19:07:58 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Two layers Arpeggiator</title>
        <dc:creator><![CDATA[@Cedrick Cedrick]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/cedrick">@Cedrick</a> wrote:</p>
          <blockquote>
              <p>Whao!</p>

<p>Andrew, your positive answers are... Let's say that most of the forums I've been on these years are, most of the time, more of some " well, no... Maybe, but, you know, it's not done for it, so... But it's gonna be difficult I guess... " or places when the asker ends on more time spent to explain the why of the project than to get practical and clear answers.<br>Well, these have been really productive and clear answers in a short time! I'm impressed <img src="//community.axoloti.com/images/emoji/twitter/+1.png?v=5" title=":+1:" class="emoji" alt=":+1:"><br>I think this gear could the answer to put on hardware what I like on plug-ins and vst as well as focus on the main features I like using arps like Podolsky, BlueArp and Bitsonic WT-01 without re inventing the wheel...<br>Ok, you've convinced me to join the community, I guess <img src="//community.axoloti.com/images/emoji/twitter/grin.png?v=5" title=":grin:" class="emoji" alt=":grin:"><br>Thanks again for your time, Andrew!<br>I'll post here the result ( and buy Jan's book before everything to learn things while waiting for new boards to be produced. Great thing is that platform patching is available even if the board isn't connected to test the results).</p>

<p>Best Regards, <br>Ced.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/5</link>
        <pubDate>Sat, 17 Aug 2019 06:46:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5925-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925.rss">Two layers Arpeggiator</source>
      </item>
      <item>
        <title>Two layers Arpeggiator</title>
        <dc:creator><![CDATA[@AndrewChi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/andrewchi">@AndrewChi</a> wrote:</p>
          <blockquote>
              <p>Hi Cedrick,</p>

<p>I'm more of a patcher than a programmer too, but programming a lot of conditions is probably easier to code. Something like case 0, case 1, ... would prove very handy.<br>The patching route would involve a lot of = AND and OR modules together with MUX and DEMUX objects.<br>I still think it is doable.</p>

<p>So fundamental: I would start with the standard chord position for starters and implement the inversion calculator later</p>

<p>fixed notes: this is easy! Take the midi/out/note object, get the right note in there with a const/i object and give it the trig out from your keyb object. repeat 3 times et voila <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"><br>If you want to choose the notes live, just use a dial in stead of the const/i</p>

<p>Patterns: you should look at logic/counter. You can drive it with a square wave LFO. Again with a const/i you can set the maximum steps by putting your maxnumber to the reset inlet of the counter.</p>

<p>For the HOLD, you can attach any button or knob to a MIDIcontroller by rightclicking on it and selecting the corresponding MIDI note or cc.<br>Just think about what parts of your patch you want to be polyphonic. If you want to hold multiple notes, you have to make a subpatch and set it to polyphonic. It is pretty well explained in Jan his book too!</p>

<p>So for your last 2 questions:<br>Making a bank of patterns and selecting them could be achieved with MUX objects. Depends on how many patterns I guess. I would say between 4 and 8 you can patch this easily but for a long list of choices you should look at implementing tables, so you can load a lot of patterns from the SD card or from a longer table in the RAM.</p>

<p>For adding a display or 2: yes you can. Check <a href="//community.axoloti.com/t/spi-i2c-oled-display/638">https://sebiik.github.io/community.axoloti.com.backup/t/spi-i2c-oled-display/638</a><br>but expect to be ready to solder at least some pin headers for some breadboard fun to start with.<br>But yeah.. technically it is possible! (thanks to the incredible work of some skilled coders in the community)</p>

<p>Happy patching <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/4</link>
        <pubDate>Fri, 16 Aug 2019 20:53:56 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5925-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925.rss">Two layers Arpeggiator</source>
      </item>
      <item>
        <title>Two layers Arpeggiator</title>
        <dc:creator><![CDATA[@Cedrick Cedrick]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/cedrick">@Cedrick</a> wrote:</p>
          <blockquote>
              <p>hi Andrew,</p>

<p>Tx for the welcoming and this quick answer <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>Fundamental : calculation if calculatable, otherwise lowest, you're right.</p>

<p>Fixed notes : always the same notes, like open chords triplet on guitar. Ideal would be that these fixed notes wouldn't be noticed if the midi played chord went more than 3 different notes ( why not adding this option ). Option : Why not being able to choose the fixed notes from a list set by the user? ( different base tuning for these open chords )</p>

<p>Midi Patterns : I'm a bit lost with the options of the gear, as its said that Axoloti cannot host midi files, but I've seen on demos that it was possible to patch some seq patterns that can, if I'm not wrong, logicaly loop....</p>

<p>I'm a fast learner when it comes to fiddling with modules rather than learning to code <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> As far as the concept is easy as : enter/exit, values/ON/OFF/step seq/IF/etc. Color system seems to be of a great help for people to patch the Axoloti.<br>As the manual of Jan, you're right <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>"Hold note" option seems to be easy to achieve, if I understand first chapter of Jan's manual <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> But I'm curious it could be triggered by a pad or button, like on the Arturia Keystep, for instance?</p>

<p>Two last questions, for know :<br>- Is it possible and easy to attribute a knob to a patch to modify its values? ( I was thinking about a knob to navigate the menu of each seq to determine which midi pattern was to be used )<br>- Is it possible to use either a screen being able to display to columns or  to plug two displays on one Axoloti ( shared or separate menus for each seq as the Axoloti will have to seq playing at the same time with differnt patterns and midi channels )?</p>

<p>I guess I merely can contact Johannes to be put on the list for next units fab <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>

<p>Thanks again for your help, Andrew <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>Best Regards,<br>Ced.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/3</link>
        <pubDate>Fri, 16 Aug 2019 16:30:13 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5925-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925.rss">Two layers Arpeggiator</source>
      </item>
      <item>
        <title>Two layers Arpeggiator</title>
        <dc:creator><![CDATA[@AndrewChi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/andrewchi">@AndrewChi</a> wrote:</p>
          <blockquote>
              <p>Hi Cedric,</p>

<p>Welcome to the Axoloti world!!!<br>I don't know if I understand you completely,<br>but I think it should be doable.</p>

<p>What do you mean with the fundamental? The lowest note played, or a calculation that extracts the fundamental even if it's an inversion? Both are possible but the latter might be a little more difficult I guess.<br>Also what are the fixed notes, always the same notes or fixed intervals?<br>Triggering the patterns wouldn't be too difficult. </p>

<p>I think with some clever patching this is definitely possible with the built in modules, without having to program your own!<br>I suggest you take a look to the midi/in/keyb object, the math objects (+) and the mux and demux objects first? Also the AND OR ... modules are great to patch a logical 'conditional' data flow.<br>There are also midi out objects with selectable midi channels so yeah, sounds cool!</p>

<p>I don't know how much patching experience you already have on other platforms like Reaktor, Pure Data or Max and such, but the concept is ofcourse fairly similar.<br>For me personally, Jan Vantomme's book 'Getting started with Axoloti' was a great great help to, well ... getting started, without too much of a headache <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/2</link>
        <pubDate>Thu, 15 Aug 2019 18:51:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5925-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925.rss">Two layers Arpeggiator</source>
      </item>
      <item>
        <title>Two layers Arpeggiator</title>
        <dc:creator><![CDATA[@Cedrick Cedrick]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/cedrick">@Cedrick</a> wrote:</p>
          <blockquote>
              <p>Hi Everyone, </p>

<p>Haven't yet found an exact answer as browsing the posts in the forum, but do guys feel free to delete this if inappropriate.</p>

<p>I'm looking for a way to use an Oxaloti board to make a double layer arppegiator that could generate midi from played notes as well as patterns, either calculated or from SMF, on different midi out channels. <br>Let's say the Axoloti would have to <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>- add 3 fixed midi notes to 3 played midi notes, <br>- process the result given different programmed patterns <br>- to the first midi channel ; <br>as well as <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:">slight_smile:<br>- extract the fondamental midi note from the 3 played and <br>- apply a different programmed pattern to the fondamental and <br>- midi out it on another channel.</p>

<p>My question as a newbie and a futur user is :<br>can Axoloti  do this in a simple way?</p>

<p>As I prefer picturing the process rather than trying to make a bad explanation : </p>

<aside class="onebox whitelistedgeneric">
  <header class="source">
    <a href="https://imgshare.io/image/axoloti.MB1Wj" target="_blank" rel="nofollow noopener">imgshare.io</a>
  </header>
  <article class="onebox-body">
    <img src="https://imgshare.io/images/2019/08/15/axoloti.jpg" width="" height="" class="thumbnail">

<h3><a href="https://imgshare.io/image/axoloti.MB1Wj" target="_blank" rel="nofollow noopener">axoloti</a></h3>

<p>Image axoloti hosted in ImgShare.io</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>


<p>Thank you by advance for any comment and help about this project.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925/1</link>
        <pubDate>Thu, 15 Aug 2019 14:29:11 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-5925-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/two-layers-arpeggiator/5925.rss">Two layers Arpeggiator</source>
      </item>
  </channel>
</rss>
