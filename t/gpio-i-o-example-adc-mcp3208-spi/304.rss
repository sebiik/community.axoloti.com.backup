<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
    <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304</link>
    <description>Hi everyone,
this example should show, how a MCP3208 can be used to read eight analog sources. The MCP3208 is connected to axoloti SPI port. This ADC method is much faster then the 4051 method and the MCP3208 has an input protection. Each ADC channel has a 12bit resolution and is compared to the VREF voltage. VREF should be in a range of 0,25V to VDD and decoupled/stabilized by a 100nF capacitor and min. 10uF polarized capacitor (not shown in the wiring picture). If you want to use more then one SPI device, be sure to disable the CS pins of the unused devices. CS Pin can be controlled by axoloti NSS(PA4) or any other digital out GPIO pin.

The bits are send by LSB and read each single analog input channel. By changing the Single/Diff bit (bit 7 of the first byte) you will get the differential between e.g. CH0+ and CH1- etc.. Check page 19 f. of the [MCP3208 datasheet][1].


Patch: MCP3208 single channel: 
&lt;a class=&quot;attachment&quot; href=&quot;/uploads/default/original/1X/7c4b2e2b37b6f385361ddcf8480d2c8c307ef623.axp&quot;&gt;mcp3208 signle channel example.axp&lt;/a&gt; (5.9 KB) 
[Script code][2] 
&lt;img src=&quot;/uploads/default/original/1X/d7dc02701aa8cc8e7ce431a9e2476345c377de1b.png&quot; width=&quot;559&quot; height=&quot;263&quot;&gt; 

Wiring (without caps)
&lt;img src=&quot;/uploads/default/original/1X/4d13396b11275250a45388e12b85fa06fce1b61f.jpg&quot; width=&quot;550&quot; height=&quot;500&quot;&gt; 


  [1]: http://ww1.microchip.com/downloads/en/DeviceDoc/21298e.pdf
  [2]: http://pastebin.com/E0dPe2zb</description>
    
    <lastBuildDate>Mon, 04 May 2020 13:55:38 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@Keeze101 Kees]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/keeze101">@Keeze101</a> wrote:</p>
          <blockquote>
              <p>Hi all,</p>

<p>I cascaded 3 MCP3008's and added some series resistors  (47Ohm) in the CLK/MISO and MOSI lines to get the reading stable. This seems to work, but now the readings are fine till a potmeter passes half the range. Where am I missing a point...</p>

<div class="lazyYT" data-youtube-id="0w140a2NcQ0" data-youtube-title="" data-width="480" data-height="270" data-parameters="feature=oembed&amp;wmode=opaque"></div>

<p>BTW, when lowering the potmeter below the half-point, readings get stable again...</p>

<p>Patch used: <a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/6/6a122d535583e9fa0eb15c3a9e4b48be6eff746e.axp">mcp3208 tripple channel example.axp</a> (13.2 KB)</p>

<p><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/79bf79b750d4b76c3d5f6332d0f67c062252f42e" href="//community.axoloti.com/uploads/default/original/2X/7/79bf79b750d4b76c3d5f6332d0f67c062252f42e.jpg" class="lightbox" title="3mcp3008-2.jpg"><img src="//community.axoloti.com/uploads/default/optimized/2X/7/79bf79b750d4b76c3d5f6332d0f67c062252f42e_1_550x500.jpg" width="550" height="500"><div class="meta">
<span class="filename">3mcp3008-2.jpg</span><span class="informations">550x1200 206 KB</span><span class="expand"></span>
</div></a></div><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/7f040ee9926d6484e4262ea50d88bbacde198161" href="//community.axoloti.com/uploads/default/original/2X/7/7f040ee9926d6484e4262ea50d88bbacde198161.jpg" class="lightbox" title="3mcp3008-1.jpg"><img src="//community.axoloti.com/uploads/default/optimized/2X/7/7f040ee9926d6484e4262ea50d88bbacde198161_1_550x500.jpg" width="550" height="500"><div class="meta">
<span class="filename">3mcp3008-1.jpg</span><span class="informations">550x1200 241 KB</span><span class="expand"></span>
</div></a></div></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/33">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/33</link>
        <pubDate>Mon, 04 May 2020 13:07:46 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-33</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@Ac-tone Ac-tone]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/ac-tone">@Ac-tone</a> wrote:</p>
          <blockquote>
              <p>Hello ! <br>I've wired my MCP3008 and seem to get an accurate reading, but like matthewcleplak a few post earlier, I can't get a value more than 3.97 and cannot figure out why..<br>I'm not that good with coding so i'm having troubles figuring out if it is in the script or due to the 10-bit depth of the MCP3008,  or if it's a VREF problem...<br>I've used a 100nf cap beetwen pin 2 and 3 and a 100uf beetween the main Vdda and GND, it seem to work as there is almost no jitter. I'm using 100k pot, that works fine when connected into the Axo's DAC. <br>Any ideas ? I couldn't find a simple answer in that post, even though I think matthewcleplak figured it out...</p>

<p>EDIT : SOMEHOW, I FOUND THE ANSWER WHILE TRYING TO FIGURE OUT THE CODE; YOU NEED TO CHANGE THIS LINE, that is in the first example script : <br> int z = (rxbuf[1] &lt;&lt; 8| rxbuf[0]) &lt;&lt; 16; <br>to<br> int z = (rxbuf[1] &lt;&lt; 8| rxbuf[0]) &lt;&lt; 20;</p>

<p>The value now goes to 63.50... that'll do it for me, although I did It kinda randomly, if somebody could explain a little bit how this work and get that last 0.50...</p>

<p>Hope this will be useful to someone <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/32">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/32</link>
        <pubDate>Sat, 12 Oct 2019 16:55:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-32</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@MC_DETH]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/mc_deth">@MC_DETH</a> wrote:</p>
          <blockquote>
              <p>Does that mean 8 mpc3208's can be connected directly to axoloti? Or do they need to be chained? I am building an enclosure with 48 pots, 6 tact buttons, 6 leds, a 4 digit LCD display and a rotary encoder and I am trying to find out the best strategy to approach this.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/31">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/31</link>
        <pubDate>Sun, 01 Oct 2017 17:10:00 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-31</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@gagarin]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/gagarin">@gagarin</a> wrote:</p>
          <blockquote>
              <p>Somehow I find the answer</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/30">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/30</link>
        <pubDate>Thu, 05 Jan 2017 20:06:24 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-30</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@gagarin]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/gagarin">@gagarin</a> wrote:</p>
          <blockquote>
              <p>Thank you Johannes.</p>

<p>I have one more question:</p>

<p>In this example, the MCP3208 CS pin is connected to axoloti B0(GPIOB,0) pin.</p>

<p>If you use more then one spi device, it's importent to disable every other spi device by switching their cs pin. <br>*/</p>

<p>uint8_t *txbuf;<br>uint8_t *rxbuf;<br>const SPIConfig spicfg_a = {NULL, GPIOA, 4, 3&lt;&lt;3  | SPI_CR1_LSBFIRST }; //MCP3208 pin PA4<br>const SPIConfig spicfg_b = {NULL, GPIOA, 3, 3&lt;&lt;3  | SPI_CR1_LSBFIRST }; //MCP3208 pin PA3</p>

<p>Does this mean that second mcp3208 CS pin connected to PA3, but not to B0(GPIOB,0) pin? Or there is somewhere mismatch in axoloti labels?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/28">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/28</link>
        <pubDate>Sat, 26 Nov 2016 10:39:24 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-28</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>Sorry, it is not possible to move the pin assignments for MOSI, MISO and SCK.<br></p>

<aside class="quote" data-post="25" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/g/e9a140/40.png" class="avatar">gagarin:</div>
<blockquote><p>Can I use 74HC4051 or 74HC4067 multiplexer, wil the script code wil be the same?</p></blockquote></aside>

<p>I have not studied those, I guess it will be the same or very similar.<br></p>

<aside class="quote" data-post="25" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/g/e9a140/40.png" class="avatar">gagarin:</div>
<blockquote><p>potentiometer values</p></blockquote></aside>

<p>yeah, use the same.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/27">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/27</link>
        <pubDate>Fri, 25 Nov 2016 14:25:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-27</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@gagarin]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/gagarin">@gagarin</a> wrote:</p>
          <blockquote>
              <p>Can I connect MOSI, MISO, SCK, NSS/CS of MCP3208 to pins PB6-PB9?<br>Then it will be possible to use all 15 analog inputs of axoloti and 8 additional from MCP3208, so in total 23 ins?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/26">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/26</link>
        <pubDate>Fri, 25 Nov 2016 09:11:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-26</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@gagarin]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/gagarin">@gagarin</a> wrote:</p>
          <blockquote>
              <p>What potentiometer values I should use with MCP3208? The same as for axoloti analog inputs?<br>Can I use 74HC4051 or 74HC4067 multiplexer, wil the script code wil be the same?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/25">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/25</link>
        <pubDate>Tue, 04 Oct 2016 06:43:06 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-25</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>After setup, for every transaction, you need these calls:</p>

<p><code>		spiSelect(&amp;SPID1);			// START SPI<br>		spiSend(&amp;SPID1,3,txbuf);	// send SPI data txbuf[]<br>		spiReceive(&amp;SPID1,3,rxbuf);	// receive SPI data from MCP3208<br>		spiUnselect(&amp;SPID1);</code></p>

<p>I think <code>spiSend()</code> and <code>spiReceive()</code> can be merged in one call of <code>spiExchange</code>. But the chip select input must see a high pulse between transactions. The data sheet shows DIN is "don't care" after the first transaction.</p>

<p>The <code>spiSend()</code>, <code>spiReceive()</code> and <code>spiExchange()</code> function calls setup the transaction (using DMA), suspends the current thread so other threads can do useful work in the meantime, and when the transaction is finished, it resumes the original thread.</p>

<p>There are several option to schedule the transactions:</p>

<ul>
<li>Making a thread with a tight loop with <code>spiX..()</code> is a bit too aggressive, perhaps with the spi bitrate set to the slowest possible. I would not recommend.</li>
<li>Creating a thread with chThdSleepMilliseconds() in the loop is fine, but has a 1 millisecond timing granularity (as configured in firmware: chconfig.h). This is what I'd recommend</li>
<li>Calling <code>spiX..()</code> at k-rate (from the dsp thread), I would not recommend as that makes the time during the transaction unavailable for audio processing... It is possible to do SPI without the <code>spiX..()</code> calls, by manipulating the memory-mapped IO registers defined in stm32fxxx.h, within k-rate and poll for the result at the next k-rate interval. But such an implementation is very unportable.</li>
</ul>

<p>The capacitor between pin 2 and 3, I think you're referring to pin 14 and 15. Pin numbering start at a "mark", often a dot, then go around counter-clock-wise. As a starting point I'd suggest a 100nF capacitor across every GND/VDD pair of pins of every chip, close to each pin pair. In this case, pin 15 is the voltage reference input, I'd give it a 100nF capacitor too on each chip. The <a href="http://ww1.microchip.com/downloads/en/DeviceDoc/21298c.pdf" rel="nofollow">mcp3208 datasheet</a> has a chapter on Layout Considerations, they recommend a 1uF capacitor "placed as close as possible to the device pin". Such layout considerations are not supercritical to get it to work, but certainly useful to reach best possible performance. But I would not be surprised if it also works fine without any respect for the layout recommendations.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/24">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/24</link>
        <pubDate>Mon, 19 Sep 2016 18:49:51 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-24</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="22" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>the update rate. If a single conversion is scheduled every millisecond, at 128 channels that gets you 8 samples per second. Scheduling conversions at 3kHz (control rate), gets you 24 samples per second.</p></blockquote></aside>

<p>can I just understand this correctly?<br>so basically, because they share the same spi port, you can only address one 3208 (and one pin of it) on each cycle, and you have to issue the send and receive on different cycles. </p>

<p>also quick wiring question...<br>on the above diagram the first 3208 has a cap between pins  2 and 3, is this also required for the second (and subsequent) 3208s?</p>

<p>(I'll note for my usage I'm not planning on that many pots ...  but thought I might have some analogue inputs that I want a high sample rates, e.g. ribbon but a fews pots that could be lower if necessary)</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/23">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/23</link>
        <pubDate>Mon, 19 Sep 2016 15:35:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-23</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>Yes, 8 MCP3208 devices is the maximum that can be addressed.<br>The main concern is not CPU load, but the update rate. If a single conversion is scheduled every millisecond, at 128 channels that gets you 8 samples per second. Scheduling conversions at 3kHz (control rate), gets you 24 samples per second. Scheduling faster gets tricky, as it will start to interfere with control rate.<br>The MCP3208 protocol requires to setup a data transaction for each conversion, it would be much nicer if it could read out its 8 channels in a single data transaction. Perhaps some other converter exists that can do this, but don't know a widely available cheap part number that can do this, but I have not searched extensively.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/22">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/22</link>
        <pubDate>Mon, 19 Sep 2016 14:55:49 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-22</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>My not the best to answer this BUT I think the max is 8 per 3208 , so that gives 128<br>Load I'd assume with increase linearly per 3208, as each is streated separately </p>

<p>Note: if not tried this, as I don't have any 3208s, this is based on the code and circuits I've seen here</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/21">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/21</link>
        <pubDate>Fri, 16 Sep 2016 07:54:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-21</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@gagarin]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/gagarin">@gagarin</a> wrote:</p>
          <blockquote>
              <p>How many MCP3208 devices is possible to use with axoloti or what is the max number of pots is posible to connect to axoloti using mcp chips? Do they intorduce aditional cpu load?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/20">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/20</link>
        <pubDate>Wed, 14 Sep 2016 07:00:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-20</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <p>OK it works!</p>

<p><code>&gt; spiStart(&amp;SPID1, &amp;spicfg_b);</code></p>

<p>16 pots using only 5 pins...optimising will be for some other time!<br>onto the next challenge <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"></p>

<p>Thanks!</p>

<pre><code>/*
MCP3208 script2 code
by paul
adapted by kaos, this script is not optimized, but it works!
Connect the MCP3208 CS pin to the NSS(PA4) or any other digital out pin of axoloti.
In this example, the MCP3208 CS pin is connected to axoloti B0(GPIOB,0) pin.

If you use more then one spi device, it's importent to disable every other spi device by switching their cs pin. 
*/

uint8_t *txbuf;
uint8_t *rxbuf;
const SPIConfig spicfg_a = {NULL, GPIOA, 4, 3&lt;&lt;3  | SPI_CR1_LSBFIRST }; //MCP3208 pin PA4
const SPIConfig spicfg_b = {NULL, GPIOA, 3, 3&lt;&lt;3  | SPI_CR1_LSBFIRST }; //MCP3208 pin PA3




void setup(void){
	static uint8_t _txbuf[8] __attribute__ ((section (".sram2")));
	static uint8_t _rxbuf[8] __attribute__ ((section (".sram2")));
	txbuf = _txbuf;
	rxbuf = _rxbuf;

	palSetPadMode(GPIOA,4,PAL_MODE_OUTPUT_PUSHPULL);	// MCP3208
	palSetPadMode(GPIOA,3,PAL_MODE_OUTPUT_PUSHPULL);	// MCP3208
	//changes
	palWritePad(GPIOA,4,1);								// pull high to disable first MCP3208
	palWritePad(GPIOA,3,1);								// pull high to disable second MCP3208
}

void loop(void){
	// txtbuf[0] = txtbuf[1] = txtbuf[2] = 0b00000000;
   	txbuf[2] = 0b00000000;
 	
    	for(int pin=0; pin&lt;8; pin++){
 
	        txbuf[0] = pin &lt; 4 ? 0b01100000 : 0b11100000;
	 
	        if (pin % 4 == 0) { // pin == 0 || pin == 4
	            txbuf[1] = 0b00000000;
	        } else if (pin % 4 == 1) { // pin == 1 || pin == 5
	            txbuf[1] = 0b00000010;
	        } else if (pin % 4 == 2) { // pin == 2 || pin == 6
	            txbuf[1] = 0b00000001;
	        } else {
	            txbuf[1] = 0b00000011;
	        }
			

		palWritePad(GPIOA,4,0);		// enable MCP3208 #1
		spiStart(&amp;SPID1, &amp;spicfg_a);
		spiSelect(&amp;SPID1);			// START SPI
		spiSend(&amp;SPID1,3,txbuf);	// send SPI data txbuf[]
		spiReceive(&amp;SPID1,3,rxbuf);	// receive SPI data from MCP3208
		spiUnselect(&amp;SPID1);		// STOP SPI
		palWritePad(GPIOA,4,1);		// disable MCP3208 #1
				
		int z = (rxbuf[1] &lt;&lt; 8| rxbuf[0]) &lt;&lt; 16;

		if (pin == 0){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c0_value],z,0xFFFD);
		}
		else if (pin == 1){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c1_value],z,0xFFFD); 
		}
		else if (pin == 2){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c2_value],z,0xFFFD);
		}
		else if (pin == 3){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c3_value],z,0xFFFD);
		}
		else if (pin == 4){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c4_value],z,0xFFFD);
		}
		else if (pin == 5){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c5_value],z,0xFFFD);
		}
		else if (pin == 6){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c6_value],z,0xFFFD);
		}
		else if (pin == 7){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c7_value],z,0xFFFD);
		}
	
	}
	chThdSleepMilliseconds(10);
	txbuf[2] = 0b00000000;

	for(int pin=0; pin&lt;8; pin++){
 
	        txbuf[0] = pin &lt; 4 ? 0b01100000 : 0b11100000;
	 
	        if (pin % 4 == 0) { // pin == 0 || pin == 4
	            txbuf[1] = 0b00000000;
	        } else if (pin % 4 == 1) { // pin == 1 || pin == 5
	            txbuf[1] = 0b00000010;
	        } else if (pin % 4 == 2) { // pin == 2 || pin == 6
	            txbuf[1] = 0b00000001;
	        } else {
	            txbuf[1] = 0b00000011;
	        }

		palWritePad(GPIOA,3,0);		// enable MCP3208  #2
		spiStart(&amp;SPID1, &amp;spicfg_b);
		spiSelect(&amp;SPID1);			// START SPI
		spiSend(&amp;SPID1,3,txbuf);	// send SPI data txbuf[]
		spiReceive(&amp;SPID1,3,rxbuf);	// receive SPI data from MCP3208
		spiUnselect(&amp;SPID1);		// STOP SPI
		palWritePad(GPIOA,3,1);		// disable MCP3208 #2
				
		int zz = (rxbuf[1] &lt;&lt; 8| rxbuf[0]) &lt;&lt; 16;

		if (pin == 0){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d0_value],zz,0xFFFD);
		}
		else if (pin == 1){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d1_value],zz,0xFFFD); 
		}
		else if (pin == 2){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d2_value],zz,0xFFFD);
		}
		else if (pin == 3){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d3_value],zz,0xFFFD);
		}
		else if (pin == 4){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d4_value],zz,0xFFFD);
		}
		else if (pin == 5){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d5_value],zz,0xFFFD);
		}
		else if (pin == 6){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d6_value],zz,0xFFFD);
		}
		else if (pin == 7){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d7_value],zz,0xFFFD);
		}	
	}
	chThdSleepMilliseconds(10);
}</code></pre>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/19">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/19</link>
        <pubDate>Tue, 19 Jan 2016 20:42:56 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-19</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>scroll up a bit here<br><aside class="quote" data-topic="304" data-slug="gpio-i-o-example-adc-mcp3208-spi" data-post="3"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/matthewcieplak/40/280_1.png" class="avatar">matthewcieplak:</div>
<blockquote><p>I had a closer look at some of the code used for SPI configuration and it seems like this would be theoretically possible, but maybe not with the provided objects. For example, the gpio/spi/config object initializes a named static "spicfg" constant that would conflict other config objects.     Nonetheless, ChibiOS does support sequential spiStart() calls with different config objects, according to this thread: <a href="http://forum.chibios.org/phpbb/viewtopic.php?f=2&amp;t=676" class="onebox" target="_blank" rel="nofollow"></a><a href="http://forum.chibios.org/phpbb/viewtopic.php?f=2&amp;amp;t=676" rel="nofollow">http://forum.chibios.org/phpbb/viewtopic.php?f=2&amp;t=676</a>   An example is given as:   if …</p></blockquote></aside></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/18">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/18</link>
        <pubDate>Tue, 19 Jan 2016 20:33:11 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-18</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <p>right, so I call it in the setup routine as something like this:</p>

<blockquote>
<pre><code>palWritePad(GPIOA,4,0);		// enable MCP3208 #1</code></pre>
<p><strong>&gt;     	spiStart(&amp;spicfg_a);</strong><br>    	spiSelect(&amp;SPID1);			// START SPI<br>    	spiSend(&amp;SPID1,3,txbuf);	// send SPI data txbuf[]<br>    	spiReceive(&amp;SPID1,3,rxbuf);	// receive SPI data from MCP3208<br>    	spiUnselect(&amp;SPID1);		// STOP SPI<br>    	palWritePad(GPIOA,4,1);		// disable MCP3208 #1</p>
</blockquote>

<p>but that fails. looking in the SPI<a href="http://chibios.sourceforge.net/html/group___s_p_i.html#ga6752c9f736f8de774a5bef6dfe2aae2e" rel="nofollow"> Chibios Docs</a> i need to call it as</p>

<pre><code>void spiStart	(	
   SPIDriver * 	spip,
const SPIConfig * 	config 
)</code></pre>

<p> but I have no clue on the SPIdriver, no pointers defined in the example code...</p>

<p>K</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/17">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/17</link>
        <pubDate>Tue, 19 Jan 2016 20:29:19 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-17</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="15" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/kaos/40/147_1.png" class="avatar">kaos:</div>
<blockquote><p>I am</p></blockquote></aside>

<p>err, no, that's only the declaration.<br>spiStart() takes it as an argument.<br>No need to reset rxbuf.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/16">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/16</link>
        <pubDate>Tue, 19 Jan 2016 19:37:19 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-16</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="14" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>spicfg_a/spicfg_b configs, and you should...</p></blockquote></aside>

<p>I am, in the script it says<br></p>

<aside class="quote" data-post="13" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/kaos/40/147_1.png" class="avatar">kaos:</div>
<blockquote><p>const SPIConfig spicfg_a = {NULL, GPIOA, 4, 3&lt;&lt;3  | SPI_CR1_LSBFIRST }; //MCP3208 pin PA4<br>const SPIConfig spicfg_b = {NULL, GPIOA, 3, 3&lt;&lt;3  | SPI_CR1_LSBFIRST }; //MCP3208 pin PA3</p></blockquote></aside>

<p>I guess I have to reset the rxbuf somewhere? It just gets copied over<br></p>

<aside class="quote" data-post="13" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/kaos/40/147_1.png" class="avatar">kaos:</div>
<blockquote><p>int zz = (rxbuf[1] &lt;&lt; 8| rxbuf[0]) &lt;&lt; 16;</p></blockquote></aside>

<p>I'll google the spiExchange, makes sense to me to make it more efficient, not done adding stuff here <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"></p>

<p>K</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/15">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/15</link>
        <pubDate>Tue, 19 Jan 2016 19:32:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-15</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="13" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/kaos/40/147_1.png" class="avatar">kaos:</div>
<blockquote><p>I only get accurate readings from MCP3208 #2, connected to PA3 if the pot on the same pin number on the other MCP3208 is turned to the maximum, otherwise I get some sort of average. If I turn the pot down, I get no reading at all..</p></blockquote></aside>

<p>Sounds like #1 is replying too when you try to address only #2, and you get a "bitwise and" of the two pots as a result...<br>Looks like you're not using spicfg_a/spicfg_b configs, and you should...</p>

<p>Let me also suggest to try sending and receiving all channel data in a single spiExchange() call, way more efficient...</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/14">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/14</link>
        <pubDate>Tue, 19 Jan 2016 19:19:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-14</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <p>Ok I'm hoping this is a software problem. I get accurate readings on 16 pots using 2 MCP3208 if, and here's the catch...</p>

<p>I always get accurate readings from MCP3208 #1, the one connected to axoloti PA4<br>I only get accurate readings from MCP3208 #2, connected to PA3 if the pot on the same pin number on the other MCP3208 is turned to the maximum, otherwise I get some sort of average. If I turn the pot down, I get no reading at all..<br>I'm guessing somewhere in my script I multiply the values, <br>- but I reinitialised the vars,<br>- I increased the sleeptime between polling (thought it was some overflow)<br>- I renamed the z var in the second loop</p>

<p>It took me quite a while to figure out why everything was dancing and then not, I thought it was hardware, so I resoldered a lot of things... apparently for nothing, or not? a bit puzzled.</p>

<p>below is my version of the script</p>

<pre><code>/*
MCP3208 script2 code
by paul
adapted by kaos, this script is not working, there is problem...

Connect the MCP3208 CS pin to the NSS(PA4) or any other digital out pin of axoloti.
In this example, the MCP3208 CS pin is connected to axoloti B0(GPIOB,0) pin.

If you use more then one spi device, it's importent to disable every other spi device by switching their cs pin. 
*/

uint8_t *txbuf;
uint8_t *rxbuf;
const SPIConfig spicfg_a = {NULL, GPIOA, 4, 3&lt;&lt;3  | SPI_CR1_LSBFIRST }; //MCP3208 pin PA4
const SPIConfig spicfg_b = {NULL, GPIOA, 3, 3&lt;&lt;3  | SPI_CR1_LSBFIRST }; //MCP3208 pin PA3




void setup(void){
	static uint8_t _txbuf[8] __attribute__ ((section (".sram2")));
	static uint8_t _rxbuf[8] __attribute__ ((section (".sram2")));
	txbuf = _txbuf;
	rxbuf = _rxbuf;

	palSetPadMode(GPIOA,4,PAL_MODE_OUTPUT_PUSHPULL);	// MCP3208
	palSetPadMode(GPIOA,3,PAL_MODE_OUTPUT_PUSHPULL);	// MCP3208
	//changes
	palWritePad(GPIOA,4,1);								// pull high to disable first MCP3208
	palWritePad(GPIOA,3,1);								// pull high to disable second MCP3208
}

void loop(void){
	// txtbuf[0] = txtbuf[1] = txtbuf[2] = 0b00000000;
   	txbuf[2] = 0b00000000;
 	
    	for(int pin=0; pin&lt;8; pin++){
 
	        txbuf[0] = pin &lt; 4 ? 0b01100000 : 0b11100000;
	 
	        if (pin % 4 == 0) { // pin == 0 || pin == 4
	            txbuf[1] = 0b00000000;
	        } else if (pin % 4 == 1) { // pin == 1 || pin == 5
	            txbuf[1] = 0b00000010;
	        } else if (pin % 4 == 2) { // pin == 2 || pin == 6
	            txbuf[1] = 0b00000001;
	        } else {
	            txbuf[1] = 0b00000011;
	        }
			

		palWritePad(GPIOA,4,0);		// enable MCP3208 #1
		spiSelect(&amp;SPID1);			// START SPI
		spiSend(&amp;SPID1,3,txbuf);	// send SPI data txbuf[]
		spiReceive(&amp;SPID1,3,rxbuf);	// receive SPI data from MCP3208
		spiUnselect(&amp;SPID1);		// STOP SPI
		palWritePad(GPIOA,4,1);		// disable MCP3208 #1
				
		int z = (rxbuf[1] &lt;&lt; 8| rxbuf[0]) &lt;&lt; 16;

		if (pin == 0){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c0_value],z,0xFFFD);
		}
		else if (pin == 1){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c1_value],z,0xFFFD); 
		}
		else if (pin == 2){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c2_value],z,0xFFFD);
		}
		else if (pin == 3){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c3_value],z,0xFFFD);
		}
		else if (pin == 4){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c4_value],z,0xFFFD);
		}
		else if (pin == 5){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c5_value],z,0xFFFD);
		}
		else if (pin == 6){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c6_value],z,0xFFFD);
		}
		else if (pin == 7){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_c7_value],z,0xFFFD);
		}
	
	}
	chThdSleepMilliseconds(10);
	txbuf[2] = 0b00000000;

	for(int pin=0; pin&lt;8; pin++){
 
	        txbuf[0] = pin &lt; 4 ? 0b01100000 : 0b11100000;
	 
	        if (pin % 4 == 0) { // pin == 0 || pin == 4
	            txbuf[1] = 0b00000000;
	        } else if (pin % 4 == 1) { // pin == 1 || pin == 5
	            txbuf[1] = 0b00000010;
	        } else if (pin % 4 == 2) { // pin == 2 || pin == 6
	            txbuf[1] = 0b00000001;
	        } else {
	            txbuf[1] = 0b00000011;
	        }

		palWritePad(GPIOA,3,0);		// enable MCP3208  #2
		spiSelect(&amp;SPID1);			// START SPI
		spiSend(&amp;SPID1,3,txbuf);	// send SPI data txbuf[]
		spiReceive(&amp;SPID1,3,rxbuf);	// receive SPI data from MCP3208
		spiUnselect(&amp;SPID1);		// STOP SPI
		palWritePad(GPIOA,3,1);		// disable MCP3208 #2
				
		int zz = (rxbuf[1] &lt;&lt; 8| rxbuf[0]) &lt;&lt; 16;

		if (pin == 0){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d0_value],zz,0xFFFD);
		}
		else if (pin == 1){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d1_value],zz,0xFFFD); 
		}
		else if (pin == 2){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d2_value],zz,0xFFFD);
		}
		else if (pin == 3){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d3_value],zz,0xFFFD);
		}
		else if (pin == 4){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d4_value],zz,0xFFFD);
		}
		else if (pin == 5){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d5_value],zz,0xFFFD);
		}
		else if (pin == 6){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d6_value],zz,0xFFFD);
		}
		else if (pin == 7){
			PExParameterChange(&amp;parent-&gt;PExch[PARAM_INDEX_d7_value],zz,0xFFFD);
		}	
	}
	chThdSleepMilliseconds(10);
}</code></pre>

<p>Kaos</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/13">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/13</link>
        <pubDate>Tue, 19 Jan 2016 19:06:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-13</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="304"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/matthewcieplak/40/280_1.png" class="avatar">matthewcieplak:</div>
<blockquote><p>const SPIConfig spicfg_a = {NULL, GPIOA, 4, 3&lt;&lt;3}; //MCP23S17 takes MSB first, uses standard axoloti Chip Select pin PA4<br>const SPIConfig spicfg_b = {NULL, GPIOA, 0, 3&lt;&lt;3 | SPI_CR1_LSBFIRST}; //MCP3008 takes LSB first, uses extra Chip Select pin PA0</p></blockquote></aside>

<p>this was what I was missing.. you need to use the "alternate config" thing</p>

<p>I got it working for one device allready, now I will try it for the second</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/12">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/12</link>
        <pubDate>Tue, 19 Jan 2016 13:33:10 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-12</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/users/matthewcieplak">@matthewcieplak</a>, I did all the soldering as you mentioned and as I described and while it worked for one MCP3208 I'm making some mistake for the second. I think and hope it is on the software side. <a class="mention" href="/users/paul">@paul</a>, your script comment mentions:</p>

<blockquote><p>Connect the MCP3208 CS pin to the NSS(PA4) or any other digital out pin of axoloti.<br>In this example, the MCP3208 CS pin is connected to axoloti B0(GPIOB,0) pin.</p></blockquote>

<p>but in the code I have the feeling you're using different pins</p>

<blockquote><p>palWritePad(GPIOA,0,0);		// enable MCP3208 </p></blockquote>

<p>this is the NSS/CS pin right?</p>

<p>While I'm using the pins labeled PA4 for the first and PA3 for the second one I soldered, My guess is I should use</p>

<blockquote><p>palWritePad(GPIOA,4,0);  </p></blockquote>

<p>to enable the first one and </p>

<blockquote><p>palWritePad(GPIOA,3,0);</p></blockquote>

<p>to enable the second one</p>

<p>the strange thing is, that this worked when I copy-pasted your code using  palWritePad(GPIOA,0,0);<br>This does not make sense as in my opinion, nothing is connected to that pin...</p>

<p>What am I missing?</p>

<p>Kasper</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/11">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/11</link>
        <pubDate>Tue, 19 Jan 2016 13:28:07 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-11</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@kaos Kasper Jordaens]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/kaos">@kaos</a> wrote:</p>
          <blockquote>
              <p>allright, going for this now. Thanks for the input<br><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/fbd4f06033af862c4852537b918922492687c641" href="//community.axoloti.com/uploads/default/original/2X/f/fbd4f06033af862c4852537b918922492687c641.png" class="lightbox" title="Screen Shot 2015-12-28 at 12.21.38.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/f/fbd4f06033af862c4852537b918922492687c641_1_640x499.png" width="640" height="499"><div class="meta">
<span class="filename">Screen Shot 2015-12-28 at 12.21.38.png</span><span class="informations">855x667 144 KB</span><span class="expand"></span>
</div></a></div></p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/10">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/10</link>
        <pubDate>Mon, 28 Dec 2015 12:36:56 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-10</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@paul]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/paul">@paul</a> wrote:</p>
          <blockquote>
              <p>hi kaos, <br>what matthewcieplak writed is right. There is a error at the wiring picture. </p>

<p>If you want more than 8 input by one mcp3208 you can check <a href="http://ucapps.de/mbhp_ainser64.html" rel="nofollow">ucapps AINSER 64 module</a> .<br>It uses a mcp3208, 74hc595 and some 4051 multiplexer. The mcp3208 and 74hc595 use the same NSS/CS pin. I get it working by disconnect the NSS pin of the 74hc595 and connected it to separate NSS pin and powered the AINSER64 it from an external power source.<br>The other DIN and DOUT Moduls are working without any modifications. </p>

<p>It would be great if someone get this Module working with shared NSS pin.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/9">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/9</link>
        <pubDate>Mon, 28 Dec 2015 09:45:40 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-9</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
      <item>
        <title>[GPIO I/O] Example ADC MCP3208 &amp; SPI</title>
        <dc:creator><![CDATA[@matthewcieplak Matthew Cieplak]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/matthewcieplak">@matthewcieplak</a> wrote:</p>
          <blockquote>
              <p>To add an additional MCP3208, it will share all the same connections (3.3v, GND, SCK, MISO, MOSI) except NSS/CS. That stands for "not slave select"/"chip select." So you will need to spare another PA pin from Axoloti (one for each chip basically) as a digital output. Pull it high to disable the chip, low to enable it. Only one CS output should be low at any given time, so you can read the inputs from one chip at a time.</p>

<p>As johannes mentioned, some chips have SPI addressing via bias pins (like the MCP23S17) so you could share the CS pin on up to 8 separate chips, but I don't think that's a feature on MCP3008/3208, so I'd start by separating it.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/8">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/8</link>
        <pubDate>Sun, 27 Dec 2015 19:15:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-304-8</guid>
        <source url="http://community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304.rss">[GPIO I/O] Example ADC MCP3208 &amp; SPI</source>
      </item>
  </channel>
</rss>
