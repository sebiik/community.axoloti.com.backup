<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Saving/loading module-code as text?</title>
    <link>http://community.axoloti.com/t/saving-loading-module-code-as-text/3281</link>
    <description>Isn&#39;t it possible to save the code of a module to the SD-card and load it on command, using a &quot;char&quot; array?
Would be a way of keeping code-size and multiple oscillator instances to a minimum..
Of course there are some requirements, like having the same local-data and parameter-calling.. but it might be very interesting for simple code-modules (eg. logic and maths)</description>
    
    <lastBuildDate>Thu, 04 May 2017 09:54:34 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/saving-loading-module-code-as-text/3281.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Saving/loading module-code as text?</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>simple answer - no </p>

<p>compilation/storing on sdcard/loading/executing could work.<br>the issue is linking the code to other existing code, it would need to utilise dynamic linking. this is theoretically possible, but is hard to implement generically.<br>also a significant issue is performance, currently code is compiled inline by the optimiser, so as not to include the overhead of function calls... this of course is not possible if you dynamically load code.<br>(so doing low level objects like logic/maths as you suggest, would be the worst, it would work better with high level functional blocks)</p>

<p>these issues are the same as for 'live coding' which we discussed quite a while back</p>

<aside class="quote" data-post="1" data-topic="1498">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="20" height="20" src="/user_avatar/community.axoloti.com/thetechnobear/40/6_1.png" class="avatar">
    <a href="//community.axoloti.com/t/live-coding-patching/1498?source_topic_id=3281">Live coding/patching</a> <a class="badge-wrapper  bullet" href="/c/developer"><span class="badge-category-bg" style="background-color: #BF1E2E;"></span><span style="color: #FFFFFF;" class="badge-category clear-badge" title="This category is for discussion about the development of Axoloti at a low level, its intended only for developers/programmers.">Developer</span></a>
  </div>
  <blockquote>
    Note: this is a 'pie in the sky' topic, just a discussion...  (i.e. dont get your hopes up on it being implemented :smile: )  

Ive been recently playing with Extempore <a href="http://extempore.moso.com.au">(http://extempore.moso.com.au</a>), and quite like what it has to offer, and wondered how something similar might be possible be offered on the axoloti core board,  and direction we might go to add some of its ideas to axoloti. 

(you could argue, SonicPi and many others offer similar... though many of these rely on Supercollider)  
â€¦
  </blockquote>
</aside>


<p>when I raised this, I did recognise this is very much 'against the spirit' of Axoloti, which builds its performance on static compilation/optimisation... but is an interesting area, though probably not a likely direction Axoloti would go, or excel at.</p>

<p>that said, if you have some knowledge of development tools, you could try to 'hack' this , perhaps in some cases it could work.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/saving-loading-module-code-as-text/3281/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/saving-loading-module-code-as-text/3281/2</link>
        <pubDate>Thu, 04 May 2017 09:54:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3281-2</guid>
        <source url="http://community.axoloti.com/t/saving-loading-module-code-as-text/3281.rss">Saving/loading module-code as text?</source>
      </item>
      <item>
        <title>Saving/loading module-code as text?</title>
        <dc:creator><![CDATA[@SirSickSik Remco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sirsicksik">@SirSickSik</a> wrote:</p>
          <blockquote>
              <p>Isn't it possible to save the code of a module to the SD-card and load it on command, using a "char" array?<br>Would be a way of keeping code-size and multiple oscillator instances to a minimum..<br>Of course there are some requirements, like having the same local-data and parameter-calling.. but it might be very interesting for simple code-modules (eg. logic and maths)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/saving-loading-module-code-as-text/3281/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/saving-loading-module-code-as-text/3281/1</link>
        <pubDate>Wed, 03 May 2017 17:23:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3281-1</guid>
        <source url="http://community.axoloti.com/t/saving-loading-module-code-as-text/3281.rss">Saving/loading module-code as text?</source>
      </item>
  </channel>
</rss>
