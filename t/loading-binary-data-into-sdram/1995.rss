<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Loading Binary Data Into SDRAM</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995</link>
    <description>This is probably really simple, but I&#39;m failing dismally in my attempts so far.

I want to load a 16kb array of 8-bit ints into a table in SDRAM.
I don&#39;t want to load it from a file, as I want to roll the data into a custom &#39;ROM&#39; object.
I need need to be able to access the table by reference, in another object, as with the Factory table alloc/read objects.

Could anyone tell me how this is done?

a|x</description>
    
    <lastBuildDate>Sun, 17 Jul 2016 15:14:25 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I'll give that a go. I'm going to focus on loading the data from file first, now, though.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/36">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/36</link>
        <pubDate>Sun, 17 Jul 2016 15:14:25 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-36</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>patch code is loaded into SRAM, only firmware into flash. <br>(limited flash cycles and size/length of time it takes to flash)</p>

<p>using explicitly assignment I expect be less efficient than using a static array of data.<br>the former creates lots of instructions, the later simply calls an initialiser when the patch is loaded. <br>(both use sram, as both .text and .rodata go into sram ... see ramlink.ld)</p>

<p>if this was a normal use case, I wonder if  you would move .rodata to sdram....<br>(I suspect there would be performance issues with this move)</p>

<p>EDIT: <br>in your example, try to make your array a constant... see if it uses less memory.<br>(I'm wondering if your getting 2 copies, one in .rodata and one in .bss, both for a patch reside in sram,<br>it may not be happening as it may be optimised out by the compiler when it sees no writes, but worth a try to save sram)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/35">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/35</link>
        <pubDate>Thu, 14 Jul 2016 18:55:47 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-35</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>It looks like that's what's happening, because it's the SRAM that's running out.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/34">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/34</link>
        <pubDate>Thu, 14 Jul 2016 18:44:31 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-34</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@rvense]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/rvense">@rvense</a> wrote:</p>
          <blockquote>
              <p>If you just put a long line of assignments like that, it's going to get put into the actual executable code as constants. This is stored in Flash/ROM, but the patch might get loaded into SRAM on start up, I'm not sure.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/33">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/33</link>
        <pubDate>Thu, 14 Jul 2016 18:42:51 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-33</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I see. But if I do</p>

<p>array[0] = 0x5a;</p>

<p>Would I be right in thinking that 8 bits of SRAM are required to allocate that value to SDRAM, plus some extra RAM required to do the assignment itself, and that memory is never reclaimed?</p>

<p>Just getting things clear in my head..</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/32">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/32</link>
        <pubDate>Thu, 14 Jul 2016 18:04:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-32</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@rvense]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/rvense">@rvense</a> wrote:</p>
          <blockquote>
              <p>Yeah, if you're doing it in a loop then all the variables inside the loop are only allocated once. Say you're computing a stupidly high-resolution sawtooth wave:</p>

<p>int wave[] = .... // array in sdram</p>

<p>for (int i = 0; i &lt; 65535; i++) {<br>  wave[i] = i;<br>}</p>

<p>That's only going to use one word of working memory for the counter, but it'll fill a 64k look-up table.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/31">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/31</link>
        <pubDate>Thu, 14 Jul 2016 15:31:57 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-31</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="29" data-topic="1995" data-full="true"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>When the initial values are computed in a loop, the resulting binary code size can be pretty small.</p></blockquote></aside>

<p>Interesting. That seems counter-intuitive. Is it because 'working memory' (i.e. memory used to perform the computation) is reused more efficiently, in this case?</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/30">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/30</link>
        <pubDate>Thu, 14 Jul 2016 15:26:29 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-30</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>When the initial values are <strong>computed</strong> in a loop, the resulting binary code size can be pretty small.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/29">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/29</link>
        <pubDate>Thu, 14 Jul 2016 15:22:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-29</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>It's just occurred to me:</p>

<p>Given that simply assigning a value to an array item is about as simple an operation as you can do, isn't any Init routine in the table/alloc object that attempts to fill a largish array in SDRAM going to hit a similar issue (ie running out of SRAM before it manages to fill up the array)?</p>

<p>I was only trying to fill 16kb, the object size attribute allows for the creation of much larger arrays than that.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/28">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/28</link>
        <pubDate>Thu, 14 Jul 2016 15:16:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-28</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="26" data-topic="1995"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>Patches use static memory. Garbage collection is not real time. Dynamic memory allocation can cause memory fragmentation, and overflow during runtime. With static memory, the compiler knows before running the patch.</p></blockquote></aside>

<p>I see...........</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/27">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/27</link>
        <pubDate>Thu, 14 Jul 2016 14:51:29 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-27</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="24" data-topic="1995"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>Shouldn't the extra SRAM used by the assignment operation be freed up after each assignment, though?</p></blockquote></aside>

<p>You've got me thinking here if this is possible. A memory segment containing initialization code could be re-used for other things, <strong>but</strong> it must be certain that those other things are not accessed by the initialization code. So how are those other things initialized? A "2nd stage" initializer for blank memory only? Potentially a source of confusion and weird errors...</p>

<aside class="quote" data-post="25" data-topic="1995"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>Are there any objects that actually use explicit C memory-assignment/garbage-collection commands?</p></blockquote></aside>

<p>Patches use static memory. Garbage collection is not real time. Dynamic memory allocation can cause memory fragmentation, and overflow during runtime. With static memory, the compiler knows before running the patch.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/26">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/26</link>
        <pubDate>Thu, 14 Jul 2016 12:46:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-26</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Are there any objects that actually use explicit C memory-assignment/garbage-collection commands?</p>

<p>I must say I was a little surprised not to see any of that in any of the objects I've poked around inside (bear in mind that my very basic C knowledge dates back to the end of the last century..).</p>

<p>Maybe all that stuff is handled behind the scenes.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/25">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/25</link>
        <pubDate>Thu, 14 Jul 2016 12:37:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-25</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Oops, I meant overflowing SRAM (see error message above).</p>

<p>Shouldn't the extra SRAM used by the assignment operation be freed up after each assignment, though?</p>

<p>If not, I guess that would explain where all the SRAM went..</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/24">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/24</link>
        <pubDate>Thu, 14 Jul 2016 12:21:01 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-24</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="20" data-topic="1995"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>Hang on though, if there's 256kb of SRAM, and my patch contains just the one alloc 8b sdram object, why is it overflowing the SDRAM trying to allocate 16kb?</p></blockquote></aside>

<p>Sram overflowing or sdram overflowing?<br>Literal assignment code like<br><code>array[0] = 0x29;</code><br>expands to multiple bytes of binary executable code.</p>

<aside class="quote" data-post="20" data-topic="1995"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>Is there a hard limit on the amount of SRAM a single object can use?</p></blockquote></aside>

<p>There is no per-object limit.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/23">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/23</link>
        <pubDate>Thu, 14 Jul 2016 12:17:25 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-23</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>just checked, for my own interest <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"> </p>

<p>goes via fbuff , which is a 256 byte  buffer in sram2. this is of course reused across objects.<br>(so may have to be careful if multiple loads being done in separate threads!?) ... also used by pconnection.</p>

<p>(streamer has a different implementation I think, but not checked)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/22">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/22</link>
        <pubDate>Thu, 14 Jul 2016 12:15:38 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-22</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="19" data-topic="1995"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>So presumably the load from file object loads the file a byte at a time, and transfers each byte to SDRAM.</p></blockquote></aside>

<p>I believe it goes from sdcard to sdram without even touching sram.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/21">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/21</link>
        <pubDate>Thu, 14 Jul 2016 12:11:28 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-21</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Hang on though, if there's 256kb of SRAM, and my patch contains just the one alloc 8b sdram object, why is it overflowing the SDRAM trying to allocate 16kb?</p>

<p>Is there a hard limit on the amount of SRAM a single object can use?</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/20">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/20</link>
        <pubDate>Thu, 14 Jul 2016 12:08:15 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-20</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="17" data-topic="1995" data-full="true"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>The initialization code can compute values to write into SDRAM. Such computation code will often be quite small. But not if you use this to copy a ROM image.</p></blockquote></aside>

<p>So presumably the load from file object loads the file a byte at a time, and transfers each byte to SDRAM.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/19">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/19</link>
        <pubDate>Thu, 14 Jul 2016 12:05:17 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-19</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="14" data-topic="1995"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>The only way to supply initialization data in SDRAM without adding data in SRAM is loading the data from sdcard. "table/load" shows how it is done.</p></blockquote></aside>

<p>I'll do it that way, then.<br>Sorry for the silly questions, guys, and thanks for your patience answering them..</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/18">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/18</link>
        <pubDate>Thu, 14 Jul 2016 12:01:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-18</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>The initialization code can compute values to write into SDRAM. Such computation code will often be quite small. But not if you use this to copy a ROM image.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/17">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/17</link>
        <pubDate>Thu, 14 Jul 2016 12:01:03 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-17</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="14" data-topic="1995"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar">johannes:</div>
<blockquote><p>The "table/alloc 8b sdram" does not transfer data from SRAM to SDRAM. But it can supply initialization code, which will be in SRAM, if that code transfers a ROM image to SDRAM, the initialization data is still in SRAM.</p></blockquote></aside>

<p>Hmm.. so what's this object actually for, then? If all the data is stored in SRAM, anyway, then as you said before, why not just use it from SRAM?</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/15">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/15</link>
        <pubDate>Thu, 14 Jul 2016 11:55:44 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-15</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@johannes johannes]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/johannes">@johannes</a> wrote:</p>
          <blockquote>
              <p>The only way to supply initialization data in SDRAM without adding data in SRAM is loading the data from sdcard. "table/load" shows how it is done.</p>

<p>The "table/alloc 8b sdram" does not transfer data from SRAM to SDRAM. But it can supply initialization code, which will be in SRAM, if that code transfers a ROM image to SDRAM, the initialization data is still in SRAM.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/14">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/14</link>
        <pubDate>Thu, 14 Jul 2016 11:52:35 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-14</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>ok, but this is as <a class="mention" href="/users/johannes">@johannes</a> pointed out...</p>

<p>in your init code you are allocating an array for the initialisation data, and that is in SRAM.<br>but the issue is you cannot put that constant data in SDRAM, which means there is no point in copying it there, as you have already allocated the memory to hold the initialisation data, so  you might as well use as is.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/13">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/13</link>
        <pubDate>Thu, 14 Jul 2016 11:50:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-13</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Here's the latest version of the patch.</p>

<p><a class="attachment" href="//community.axoloti.com/uploads/default/original/2X/4/44a7b36b61a7ac12bab10dcbe7c4634abaf56b68.axp">TableAllocRead_test01.axp</a> (84.2 KB)</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/12">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/12</link>
        <pubDate>Thu, 14 Jul 2016 11:45:38 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-12</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
      <item>
        <title>Loading Binary Data Into SDRAM</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>the access you show wont cause overflows.</p>

<p>as i said, Id need to see your allocation of the array. I can only guess for some reason, the attribute is not applied properly. (it defaults to SRAM, so if its wrong, this would be expected)</p>

<p>EDIT: its probably easier if you upload a test patch with the relevant object embedded. then we can see what the issue is/what you are trying to do.</p>

<p>(minimal patch, with just your allocate/read/write nothing else <img src="/images/emoji/emoji_one/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"> )</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/11">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995/11</link>
        <pubDate>Thu, 14 Jul 2016 11:42:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1995-11</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/loading-binary-data-into-sdram/1995.rss">Loading Binary Data Into SDRAM</source>
      </item>
  </channel>
</rss>
