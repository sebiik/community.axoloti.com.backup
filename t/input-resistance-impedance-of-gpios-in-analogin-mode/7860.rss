<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Input resistance/impedance of GPIOs in AnalogIn Mode?</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860</link>
    <description>Hi there,

I hope some hardware specialists are still around here.
I am planning to use some of the GPIO analog ins as low frequency / band width &lt;&lt;1,5kHz audio ins. The frequency limitation is no problem.
Of course, I would put some second order LP-filters in front of the GPIO in order to avoid aliasing. I suppose 3kHz is the respective sampling rate.
Thus, I have a few questions.

- Does this seen feasible at all? I plan to use 6 additional low frequency (but audio) ins.
- What is the input impedance in analog-in mode? I suppose roughly 100k, according to this thread. https://sebiik.github.io/community.axoloti.com.backup/t/what-is-the-adc-input-impedance-for-connecting-sensors/1773/4. Correct?
- Are the GPIOs biased to a certain voltage level, e.g. VDDA/2? Could this be done by software, or just simply do the biasing by two resistors?
- I plan to protect the GPIO ins by simply using antiparallel NIR IR LEDs with 850nm wavelength. They have a suitable forward voltage of around roughly 1,45V, connected against a capacitor buffered VDDA/2 voltage. Feasible solution?
(Of course I could also use a 1/4 MPC6004 OPA per input, but I like the idea ...) 

Thanks in advance!</description>
    
    <lastBuildDate>Thu, 08 Dec 2022 11:36:39 +0000</lastBuildDate>
    <category>Hardware</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Input resistance/impedance of GPIOs in AnalogIn Mode?</title>
        <dc:creator><![CDATA[@ricard Ricard Wanderlof]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/ricard">@ricard</a> wrote:</p>
          <blockquote>
              <p>Yes, the further to the top left of patch an object is located, the earlier it is run, which would help, but there's still the actual latency from the time the timer interrupt hits until the interrupt routine starts its execution, and there are also other things that the Axo OS does before calling the user code, which might vary in execution time, I don't know.</p>

<p>But do give it a try. Normally you don't need a lot of latency to degrade the audio, but your sampling rate is also pretty low, so perhaps it will be acceptable.</p>

<p>The reference to the other thread, were you specifically referring to setting up a specific timer interrupt and associated thread in order to get more accurate sampling intervals, or hooking into the Axo DSP thread? I think that that would be an improvement over having it in the patcher, but I still think there will be quite a lot of jitter.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/7</link>
        <pubDate>Thu, 08 Dec 2022 11:36:39 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7860-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860.rss">Input resistance/impedance of GPIOs in AnalogIn Mode?</source>
      </item>
      <item>
        <title>Input resistance/impedance of GPIOs in AnalogIn Mode?</title>
        <dc:creator><![CDATA[@opt.x]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/opt.x">@opt.x</a> wrote:</p>
          <blockquote>
              <p>Thanks ricard! That's a thought I suppressed up to now <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> <br>I wonder, how much relativ or absolute jitter I should expect here.</p>

<p>So as far as I roughly remember, the order of  code execution depends on the position of the modules in the GUI.<br>If I would try to position them smarlty, and maybe, "write code" that is time-wise quite "linear", could it help? </p>

<p>I maybe just give it a try and hear what it sounds like.</p>

<p>I suppose a relative jitter of let's say 10% would also shift frequencies accordingly. Of course, it would also change the waveform's shape. Or depending on the point of view, bring in some higher frequency noise that is actually not present.</p>

<p>I suppose, this approach would suffer from the same potential problem, or doesn't it?<br><aside class="quote" data-topic="304" data-slug="gpio-i-o-example-adc-mcp3208-spi" data-post="27"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/johannes/40/8_1.png" class="avatar"><a href="//community.axoloti.com/t/gpio-i-o-example-adc-mcp3208-spi/304/27" rel="nofollow noopener">[GPIO I/O] Example ADC MCP3208 &amp; SPI</a>
</div>
<blockquote><p>Sorry, it is not possible to move the pin assignments for MOSI, MISO and SCK.   I have not studied those, I guess it will be the same or very similar.   yeah, use the same.</p></blockquote></aside></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/6</link>
        <pubDate>Thu, 08 Dec 2022 06:38:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7860-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860.rss">Input resistance/impedance of GPIOs in AnalogIn Mode?</source>
      </item>
      <item>
        <title>Input resistance/impedance of GPIOs in AnalogIn Mode?</title>
        <dc:creator><![CDATA[@ricard Ricard Wanderlof]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/ricard">@ricard</a> wrote:</p>
          <blockquote>
              <p>The thing that would worry me in this scenario, apart from the limited bandwidth, is that it will be hard to get exact timing of the sampling point of the GPIO pins. Normally an audio ADC is driven by some form of stable clock, and the digital output is then buffered in such a way that the CPU access the data in bursts (in the Axoloti case 16 samples). But the point I'm trying to make is that the actual point in time where the sample is taken is very accurately controlled by the clock supplied to the ADC chip. But if you're sampling GPIO pins using the CPU, the timing will essentially depend on various interrupt latencies and delays in the code path which will result in the sampling point jittering quite severely, resulting in noticeable artifacts in the sound.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/5</link>
        <pubDate>Thu, 08 Dec 2022 05:23:15 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7860-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860.rss">Input resistance/impedance of GPIOs in AnalogIn Mode?</source>
      </item>
      <item>
        <title>Input resistance/impedance of GPIOs in AnalogIn Mode?</title>
        <dc:creator><![CDATA[@sebiiksbcs Sebastian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sebiiksbcs">@sebiiksbcs</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="7860"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/opt.x/40/6784_1.png" class="avatar">opt.x:</div>
<blockquote><p>half of the sampling frequency</p></blockquote></aside>

<p>If you have a 2-pole Sallen-Key this should be sufficient. I am guessing you'll have aliasing but it would not be bad-sounding. At this sample rate anything will be crunchy really?</p>

<aside class="quote" data-post="3" data-topic="7860"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/opt.x/40/6784_1.png" class="avatar">opt.x:</div>
<blockquote><p>Could I import sample tables into SPICE?</p></blockquote></aside>

<p>Not sure seems like SPICE is not made for this. Falstad circuitjs is basic but does have some "audio" functions and FFT. Do you want to simulate inputs? Then a sawtooth wave should be just fine, change the frequency between some points you consider useful and look at the results</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/4</link>
        <pubDate>Thu, 08 Dec 2022 05:02:06 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7860-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860.rss">Input resistance/impedance of GPIOs in AnalogIn Mode?</source>
      </item>
      <item>
        <title>Input resistance/impedance of GPIOs in AnalogIn Mode?</title>
        <dc:creator><![CDATA[@opt.x]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/opt.x">@opt.x</a> wrote:</p>
          <blockquote>
              <p>Thank you, Sebastian!</p>

<p>I already simulated the below 1,5kHz for my application by some high order LPFs, and it seems to be sufficient.</p>

<p>I will most probably use some MCP600x. Currently I'd like to use them only for getting a higher input impedance for external sensors.<br>Or also a second stage of MPCs for a Sallen-Key LP for the anti-aliasing.<br>What ist the typical frequency I should choose for the filter, just half of the sampling frequency or even less?<br>Or even a higher order than the 2 of the Sallen-Key?</p>

<p>I would also like to model the schematic in SPICE. However, I am not sure, how to model the input audio signals.<br>Could I import sample tables into SPICE?</p>

<p>Any additional hints or comments?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/3</link>
        <pubDate>Wed, 07 Dec 2022 15:45:36 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7860-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860.rss">Input resistance/impedance of GPIOs in AnalogIn Mode?</source>
      </item>
      <item>
        <title>Input resistance/impedance of GPIOs in AnalogIn Mode?</title>
        <dc:creator><![CDATA[@sebiiksbcs Sebastian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sebiiksbcs">@sebiiksbcs</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="1" data-topic="7860"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/opt.x/40/6784_1.png" class="avatar">opt.x:</div>
<blockquote><p>Does this seen feasible at all? I plan to use 6 additional low frequency (but audio) ins.</p></blockquote></aside>

<p>Feasible yes but it's going to sound twice as "bad" as a narrowband telephone. Which may be what you want.</p>

<aside class="quote" data-post="1" data-topic="7860"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/opt.x/40/6784_1.png" class="avatar">opt.x:</div>
<blockquote><p>What is the input impedance in analog-in mode? I suppose roughly 100k, according to this thread</p></blockquote></aside>

<p>Not sure even though I worked with the STM32F4 datasheet and reference manual a lot, but if the master himself writes it it must be true.</p>

<aside class="quote" data-post="1" data-topic="7860"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/opt.x/40/6784_1.png" class="avatar">opt.x:</div>
<blockquote><p>Are the GPIOs biased to a certain voltage level, e.g. VDDA/2</p></blockquote></aside>

<p>They're not biased. Biasing using two resistors usually is a solution though not very stable.</p>

<aside class="quote" data-post="1" data-topic="7860"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/opt.x/40/6784_1.png" class="avatar">opt.x:</div>
<blockquote><p>I plan to protect the GPIO ins by simply using antiparallel NIR IR LEDs with 850nm wavelength.</p></blockquote></aside>

<p>Not sure, this is beyond my skills.</p>

<p>All of this sounds like a lot of work with quite some side effects to achieve something that would be stable and predictable with some MCP600x? I don't know really.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/2</link>
        <pubDate>Wed, 07 Dec 2022 13:18:01 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7860-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860.rss">Input resistance/impedance of GPIOs in AnalogIn Mode?</source>
      </item>
      <item>
        <title>Input resistance/impedance of GPIOs in AnalogIn Mode?</title>
        <dc:creator><![CDATA[@opt.x]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/opt.x">@opt.x</a> wrote:</p>
          <blockquote>
              <p>Hi there,</p>

<p>I hope some hardware specialists are still around here.<br>I am planning to use some of the GPIO analog ins as low frequency / band width &lt;&lt;1,5kHz audio ins. The frequency limitation is no problem.<br>Of course, I would put some second order LP-filters in front of the GPIO in order to avoid aliasing. I suppose 3kHz is the respective sampling rate.<br>Thus, I have a few questions.</p>

<ul>
<li>Does this seen feasible at all? I plan to use 6 additional low frequency (but audio) ins.</li>
<li>What is the input impedance in analog-in mode? I suppose roughly 100k, according to this thread. <a href="//community.axoloti.com/t/what-is-the-adc-input-impedance-for-connecting-sensors/1773/4">https://sebiik.github.io/community.axoloti.com.backup/t/what-is-the-adc-input-impedance-for-connecting-sensors/1773/4</a>. Correct?</li>
<li>Are the GPIOs biased to a certain voltage level, e.g. VDDA/2? Could this be done by software, or just simply do the biasing by two resistors?</li>
<li>I plan to protect the GPIO ins by simply using antiparallel NIR IR LEDs with 850nm wavelength. They have a suitable forward voltage of around roughly 1,45V, connected against a capacitor buffered VDDA/2 voltage. Feasible solution?<br>(Of course I could also use a 1/4 MPC6004 OPA per input, but I like the idea ...) </li>
</ul>

<p>Thanks in advance!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860/1</link>
        <pubDate>Sat, 03 Dec 2022 21:16:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-7860-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/input-resistance-impedance-of-gpios-in-analogin-mode/7860.rss">Input resistance/impedance of GPIOs in AnalogIn Mode?</source>
      </item>
  </channel>
</rss>
