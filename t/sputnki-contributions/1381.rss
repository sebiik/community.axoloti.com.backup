<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Sputnki contributions</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381</link>
    <description># Objects

##Filter

**vowel.axs -** 3 bandpass filters in parallel, tuned to specific frequencies in order to emulate vowels. Formant dial (and inlet) morphs between various vowels. The other parameters enable further tweaking of filter.
Sounds quite nice and is fairly light (6% dsp load). 
You can find more information eventually in this old topic: https://sebiik.github.io/community.axoloti.com.backup/t/subpatch-vowel-filter/219

##table
Various math functions fitted to polynomial expansions and put inside a 16bit sdram table object. Size parameter determines how many samples are stored into the table.
Official topic here: https://sebiik.github.io/community.axoloti.com.backup/t/mathematical-functions-fit-to-polynomial-expansions/1301/7
Inside this category you&#39;ll find
**arcsin_t.axo -** 
**arctan_t.axo -** value determines the x range of the function
**arcsinh_t.axo -** value determines the x range of the function
**crossover_hard_t.axo -** value determines the size of the gap
**crossover_p_t.axo -** value determines the size of the gap
**crossover_c_t.axo -** value determines the size of the gap
**slicer.axo** sample slicer, see below for further info
**slicer i.axo** like the previous, but with intlet controls for parameters.

##Osc
**vosim.axs -** inspired by this topic: https://sebiik.github.io/community.axoloti.com.backup/t/vosim-possible-in-axolotl/1335/16?u=sputnki , it&#39;s basically a formant oscillator, best results if pitched down near -24/-36, not really light (8% cpu load)
**vosim FM.axs -** like the previous, but with integrated fm operator
**mandelbrot.osc -** Oscillator based on the mandelbrot fractal iteration. Check below for info.

##Sequencer
**Sequencer 16 v2 -** one of my first objects, not really a great object but might be useful to some: more informations here https://sebiik.github.io/community.axoloti.com.backup/t/subpatch-16-step-sequencer/237
**fibonacci.axo** Fibonacci sequencer. Every time trig is activated, the sequencer goes one cycle forward. At every cycle the output is calculated with the formula o=i1+i2, where i2 is the first preceding output, and i1 is the second preceding output. At reset i1=0 , i2=1 unless i1 and i2 are connected. For example, the normal sequence is 1, 1 , 2 , 3, 5, 8, 13, 21, 34, 55, etc..
**fibonacci astarb.axo** A variation on the fibonacci sequencer. In this case the output is calculated with o=i1*i2, and the default starting i1 and i2 are 1 and 2. Grows very quickly.
**pseudo factorial.axo** Another variation on the fibonacci sequencer. In this case the output is calculated with o=i*(i+a+1) , where i is the preceding output. a is provided with inlet_a . At reset if inlet_i0 is disconnected, i=1, otherwise i=inlet_i0.
Grows really quickly, may result in overflowing and therefore unexpected big numbers.
**euclid.axo** Euclidean rhythm generator. Chainable. **Notes** specifics the number of active steps, **rests** the number of rests. Inlet in specifics what step to read, like sel i 16/32  or disp/ibar . If outside the range the default inlet will be outputted (like said objects).
Dynamic algorithm, 10% dsp load worst case with 63 notes and 64 rests.
**euclid length.axo** Like the prevous, but this time you won&#39;t have to fiddle with rests: you just have to specify the length of the pattern (also if you set more steps than the pattern length the sequence will be calculated on the max length.
**euclid length out.axo** Like the previous, but there&#39;s an outlet that outputs an integer which you can decode to get the individual steps (use decode bin 8.axo Maximum pattern length=31 ( i know, it&#39;s an odd number.)
**chorder.axo** Stores 8 chords in memory. See the post below for more informations, this is quite a fat object!
**chorder adv.axo** Like the previous, but allows to individually pitch up or down chords (basically reduces the need for a pitch cv in)
**24ppq to bpm.axo** This object can be used to detect the bpm speed of a midi clock signal expressed in 24ppq.
Outlets:
-bpm     - outputs the integer part of the bpm 
-mill    - outputs the fractional part of the bpm
-1000bpm - outputs bpm*100
**24ppq to phase64.axo** This object generates a phase signal that goes from 0 to 64 in 64 beats (16 quarters) when fed with a 24ppq signal.
**24ppq to pos** Converts a 24ppq counter signal into different subdivisions: quarters, sixteenths and triplet eights. 
Length parameter can be used to set the length (in quarters) before resetting the counter (works exactly like divremc).
Cue parameter offsets the incoming signal by a constant number of ppqs.
24ppqrem outputs the cued and divided 24ppq signal.
**maestro.axo** Melody sequencer object, see below for more information (it&#39;s a very big object)

inlet -&gt; +cue -&gt; divremc -&gt; 24ppqrem -&gt; other outputs
**clock out dual** Midi clock master, also outputs Midi clock, start, stop, and continue messages on two separate Midi devices.
The secondary device can be switched on or off (when off, the behavior is identical to the midi/out/clock by Johannes).
Based on midi/out/clock by Johannes Taelman.</description>
    
    <lastBuildDate>Mon, 24 Feb 2020 23:58:01 +0000</lastBuildDate>
    <category>Community Library</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@weasel79 blender]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/weasel79">@weasel79</a> wrote:</p>
          <blockquote>
              <p>hey <span class="mention">@Sputnkii</span> reallly love your multi VCO object and have been using it as the main VA osc in my synth, but i just noticed some quite heavy aliasing noise on some frequencys of the sine wave. iirc i tested the factory sine at one point and it behaved similar, where as the MI sine doesn't do this. any idea on how to approach this?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/78">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/78</link>
        <pubDate>Mon, 24 Feb 2020 23:58:01 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-78</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@JonasBers Jonas Bers]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/jonasbers">@JonasBers</a> wrote:</p>
          <blockquote>
              <p>re: your cartesian formula objects: so cool. after a few years of studying this stuff, I discovered these formulas and then came back here to ask if you'd have any interest in coding objects like this. quick search first and found that you did it three years ago, lol. thanks for all your work, this stuff is awesome.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/77">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/77</link>
        <pubDate>Fri, 08 Mar 2019 14:14:43 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-77</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Hi Sellu, thank you for the report. I will look into this bug when possible. In the mean time you could edit the object and correct it for your needs.<br>If i remember correctly, however, i adapted the formula in order to further reduce the error away from pi/4+ k*pi/2. It could be very well that the discontinuity stems from this personalization.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/76">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/76</link>
        <pubDate>Wed, 16 Jan 2019 12:57:33 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-76</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@sellu]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sellu">@sellu</a> wrote:</p>
          <blockquote>
              <p>Hi Sputnki!</p>

<p>I think I found a bug on sptnk/math/cartesian2polar, both *k.axo and *s.axo. It outputted some unexpected values when I tested it. For example (10.00 ; 10.00) -&gt; (5.51; 14.14) and (9.99; 10.00) -&gt; (10.49; 14.14)</p>

<p>I think <code>float param = 0.849;</code> should be <code>float param = 0.28125;</code> instead. The website on the object description also uses this value to estimate arctan. (<a href="https://www.embedded.com/design/other/4216719/Performing-efficient-arctangent-approximation" rel="nofollow noopener">https://www.embedded.com/design/other/4216719/Performing-efficient-arctangent-approximation</a>) What do you think?</p>

<p>BR, sellu</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/75">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/75</link>
        <pubDate>Tue, 15 Jan 2019 19:33:10 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-75</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Unless you hack the object i'd say no way. Have you checked the factory grain delay?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/74">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/74</link>
        <pubDate>Tue, 12 Dec 2017 15:42:24 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-74</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@AdrianWillaert]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/adrianwillaert">@AdrianWillaert</a> wrote:</p>
          <blockquote>
              <p>Hi Sputnki,</p>

<p>do you think there's a way to use the granular stereo player in real-time with live audio input?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/73">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/73</link>
        <pubDate>Tue, 12 Dec 2017 11:06:55 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-73</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@studiokpg Karl Gruenewald]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/studiokpg">@studiokpg</a> wrote:</p>
          <blockquote>
              <p>Cool, I'll try that. Thanks!<br>(edit) Yay! it worked!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/72">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/72</link>
        <pubDate>Mon, 04 Dec 2017 08:06:09 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-72</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>You could use a dirty hack: connect the counter output (green) with a logic/change and then logic/inv. This way you have a boolean signal that pulses every time the counter increments<br> You can then multiply this with the euclid object with logic/and, thus getting a trig output</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/71">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/71</link>
        <pubDate>Sun, 03 Dec 2017 21:43:23 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-71</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@studiokpg Karl Gruenewald]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/studiokpg">@studiokpg</a> wrote:</p>
          <blockquote>
              <p>Hi Sputniki! I'm using your Euclidian In object, and I'm wondering about something. I am using it to trigger an external synth, and I don't get a retrigger when two or more beats have a note. In other words, the pulse level stays high until there is a silent beat. Here is a screenshot of my patch:<br><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/66fbc160c3eb7519a46e698f2f2b1790887e0e99" href="//community.axoloti.com/uploads/default/original/2X/6/66fbc160c3eb7519a46e698f2f2b1790887e0e99.png" class="lightbox" title="Screen Shot 2017-12-03 at 9.11.01 PM.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/6/66fbc160c3eb7519a46e698f2f2b1790887e0e99_1_690x260.png" width="690" height="260"><div class="meta">
<span class="filename">Screen Shot 2017-12-03 at 9.11.01 PM.png</span><span class="informations">1144x432 64.1 KB</span><span class="expand"></span>
</div></a></div><br>Looking at the chart, you can see that the level stays high when subsequent beats have a note. In this example, I have length 8 and notes 7.<br>Is there any way you could tweek the code so the level would drop, or use a shorter pulse length? I took a peek at the code, but I am a novice and couldn't figure it out. <br>I would appreciate anything you could suggest. And thanks for all the contributions you make to the community!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/70">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/70</link>
        <pubDate>Sun, 03 Dec 2017 19:18:16 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-70</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@AdrianWillaert]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/adrianwillaert">@AdrianWillaert</a> wrote:</p>
          <blockquote>
              <p>I feel that the problem is that I'm trying to assing a delay/write sdram table instead an alloc one <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>I thought it was possible to find a workaround and make the granular player work with real time buffers</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/69">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/69</link>
        <pubDate>Sun, 26 Nov 2017 23:50:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-69</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Hey, thanks for the report. Right now i can't check if there's any error in the code (i presume not), however i suggest you to check the name of the table the granular object points to (because the patcher it's signalling you that he can't find some variables that are normally present in table/alloc objects)<br>Maybe pm me or post here a screenshot of some stripped down version of your patch. Also check if there is an help object!)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/68">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/68</link>
        <pubDate>Sun, 26 Nov 2017 17:34:53 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-68</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@AdrianWillaert]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/adrianwillaert">@AdrianWillaert</a> wrote:</p>
          <blockquote>
              <p>Hi there,</p>

<p>can't compile any patch with granular player * series of objects, <br>always receiving errors like this</p>

<p>! C:\Users\Utente\DOCUME~1\axoloti/build/xpatch.h.gch<br>C:\Users\Utente\DOCUME~1\axoloti/build/xpatch.cpp: In member function 'void rootc::instancegranular__1::dsp(int32_t, int32_t, int32_t, int32_t, bool, int32_t (&amp;)[16], int32_t (&amp;)[16], int32_t&amp;, int, int, int, int, int)':<br>C:\Users\Utente\DOCUME~1\axoloti/build/xpatch.cpp:248:160: error: 'class rootc::instancewrite__2' has no member named 'GAIN'<br>     accum[j][grain_pan[i]]+=parent-&gt;instancewrite__2_i.array[<strong>USAT(grain_phase[i],27)&gt;&gt;(27-parent-&gt;instancewrite</strong>2_i.LENGTHPOW)]&lt;instancewrite__2_i.GAIN&gt;&gt;param_gainreduction;<br>                                                                                                                                                                ^<br>make: *** [C:\Users\Utente\DOCUME~1\axoloti/build/xpatch.bin] Error 1<br>shell task failed, exit value: 1<br>Compiling patch failed ( untitled )</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/67">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/67</link>
        <pubDate>Sat, 25 Nov 2017 16:49:20 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-67</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@hyena giona vinti]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/hyena">@hyena</a> wrote:</p>
          <blockquote>
              <p>sorry but still find it very confusing, i ask you a simple question:<br>with your implementation will i be able to just have one clock in , one knob to control length and one knob to control notes given just a maximum length, all realtime? <br>let's suppose i say the limit is 16 steps, will i be able to control realtime the two parameters, seamlessly changing both length and notes without issues? if it is possible i will do my best to understand it and implement it in my patch <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>(by the way, ciao! <img src="//community.axoloti.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> )</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/66">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/66</link>
        <pubDate>Tue, 24 Oct 2017 20:09:48 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-66</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>The basic principle of euclidean rhytms is to spread a number of notes and rests in the most uniform way possible. <br>The euclid.axo object i made (the one with notes and rests) takes notes and rests as parameters, so if you set it to work with 3 notes and 4 rests it will create a rhythm of 7 steps in total length, and it will spread notes and rests among these 7 steps.<br>Everything outside that range is treated as a rest (output is 0).<br>You can chain several objects together, to create complex rhythms, i.e. you could spread 2 notes and 3 rests over the first 5 steps and then 1 note and 2 rests over the next 3 steps. <br>If you want to wrap the rhythm over 8 steps you must do this before the first euclid object (use divremc)<br>Also, check the help patch in case you didn't!<br>P.s: euclid length.axo is really not much different, but instead of reasoning with notes and rests it deals with a total length and a number of notes. Rests are calculated as a difference between total length and notes</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/65">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/65</link>
        <pubDate>Tue, 24 Oct 2017 17:00:26 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-65</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@hyena giona vinti]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/hyena">@hyena</a> wrote:</p>
          <blockquote>
              <p>Hello Sputnki! i'm totally n00b but gettin my head around things and having a very good time <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> i'm struggling with euclidean objects. i had in mind to recreate the simple behaviour of Mutable Instruments Grids in euclidean mode, which is fairly simple (and has no offset or rotate parameter). it has a clock in and then you have three channels, on each one you can control length and fill (same as length and notes on yours). at first i had problems understanding that i needed a counter for your objects to work, now i kinda grasped it but still i don't know if i misunderstand them or if they behave in a way that i think is not how i understand euclidean pattern generators:<br>1) if you change the length parameter you also have to change the MAX count on the counter, otherwise if you have (say) length=8 and max count=16 you end up with only half of the pattern working. i managed to put a range dial controlled by midi cc that contemporarily controls MAX and length to have them always the same value. then another range dial for notes. it kinda works but i noticed that after a certain amount the actual filled steps start to decrease. then i realized it probably has something to do with the clock resolution i'm feeding it. i usually put up a midi clock receive object and then divide it by 6 to get a tick for each 1/16th. but , and here maybe i'm totally off, i think that for this to work correctly one will have to change the clock resolution WITH the max count AND the length, otherwise it doesn't work as i suppose it to. other problem i have to implement it for live purposes is that if notes &gt; length it stops working, i'd have to find a way to constrain notes maximum range to length...but still bashing my head on the wall to find a solution <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> obviously the goal here is to have a realtime performance euclidean drum machine. thanks for any guidance in advance <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> i attach a zip with my patches if anyone wanna give it a check ! <a href="https://www.dropbox.com/s/qnh2dflp2vgmk4b/hyeuclid.zip?dl=0" rel="nofollow noopener">https://www.dropbox.com/s/qnh2dflp2vgmk4b/hyeuclid.zip?dl=0</a></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/64">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/64</link>
        <pubDate>Tue, 24 Oct 2017 09:18:11 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-64</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <h2>Distortion objects:</h2>

<p><strong>sptnk/effect fold 1.axo</strong><br>Symmetrical waveshaper distortion based on 5th order polynomial, that folds the signal for sufficiently great values of the m parameter. Mildly antialiased, wild, with internal feedback and the ability to chain several waveshaper units with different m values.</p>

<p><strong>sptnk/effect fold 2.axo</strong><br>Symmetrical wavefolder distortion based on 5th order polynomial, looks like a sine shaper for intermediate values. Mildly antialiased, very very very wild, with internal feedback and the ability to chain several waveshaper units with different m values.</p>

<p><strong>sptnk/effect waveshaper 16p.axo</strong><br>Symmetrical waveshaper with user definable shape, similar to waveshaping with a table, but with "some sort of antialiasing that works well if you like it" added. This object has internal feedback and allows to chain several units together for utter sound devastation<br>Also<br><strong>sptnk/effect waveshaper 16p coefs.axo</strong><br>Allows to generate coefficients for the previous object.</p>

<p>You can see all the objects in action in the help file</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/63">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/63</link>
        <pubDate>Fri, 09 Jun 2017 18:04:29 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-63</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <h2>Pitch detection objects:</h2>

<p><strong>sptnk/detect/0x k.axo</strong><br><strong>sptnk/detect/0x s.axo</strong></p>

<p>These are very naive zero crossing detection objects, the former working at k-rate and the latter at s-rate.<br>These objects count how many samples occur between consequent zero crossings. The number of samples (green outlet) refers to the corresponding rate: k counts samples at k-rate and s count samples at s-rate.<br>No interpolation of any kind is implemented in these objects. The k-rate objects outputs a trigger pulse when a zero crossing has occurred.</p>

<p><strong>sptnk/detect/0x k f.axo</strong><br><strong>sptnk/detect/0x s f.axo</strong><br>Again, zero crossing detection in s-rate and k-rate. These however are slightly more precise, as they work in floating point and interpolate the wave in zero crossings. A conversion between sample period and frequency is also implemented (it's the frequency of a saw wave that goes from 0 to 64 in a number of samples equal to <br>the detected period </p>

<p><strong>sptnk/detect/period mono.axo</strong><br>This object is based on zero crossing detection, however it keeps track of the "mean value" and filters out  readings that are too slow or too fast (maximum and minimum periods can be specified in the spinner boxes)<br>The objects starts to count when it finds a zero crossing in the signal.<br>While counting it checks if it encounters another zero crossing, and if the mean value of the signal is sufficiently close to zero (how close is specified by the tolerance knob) it outputs the readout.<br>Output is in number of samples (integer)<br><strong>sptnk/detect/period mono f.axo</strong><br>A variation on the previous object. This one interpolates the wave during zero crossings to achieve a better readout, and also outputs a frequency.</p>

<p><strong>sptnk/conv/ftom.axs</strong><br>This one converts a frequency to a midi note. You can see it as the "inverse" function of mtof. I tried to make it the most precise possible, however it still has a very little error, due to the non perfect logarithm computation. The error however is distributed as evenly as possible inside the whole -64 : 64 range</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/62">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/62</link>
        <pubDate>Sat, 27 May 2017 15:51:44 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-62</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p><strong>sptnk/math/rot 2d</strong><br><strong>sptnk/math/rot 2d k</strong><br><strong>sptnk/math/rot 3d</strong><br><strong>sptnk/math/rot 3d k</strong></p>

<p>Geometric rotations for 2d and 3d coordinates.. Useful for lissajous applications. <br>Based on this: <a href="https://en.wikipedia.org/wiki/Rotation_matrix" rel="nofollow noopener">https://en.wikipedia.org/wiki/Rotation_matrix</a></p>

<p><strong>sptnk/math/knee</strong><br><strong>sptnk/math/knee 2</strong><br>Some k-rate mappings. You can see the meaning of parameters in the pictures. m stands for angular coefficient (in y = mx + q)<br><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/36896ddb72f9413ef3fdc2081fe8fb83e482d985" href="//community.axoloti.com/uploads/default/original/2X/3/36896ddb72f9413ef3fdc2081fe8fb83e482d985.png" class="lightbox" title="k.png"><img src="//community.axoloti.com/uploads/default/optimized/2X/3/36896ddb72f9413ef3fdc2081fe8fb83e482d985_1_690x301.png" width="690" height="301"><div class="meta">
<span class="filename">k.png</span><span class="informations">834x364 4.96 KB</span><span class="expand"></span>
</div></a></div></p>

<p><strong>sptnk/math/grid</strong><br><strong>sptnk/math/grid k</strong><br>Not sure if they should go in the math folder... Again, they're for lissajous purposes. These objects will generate a set of coordinates (with pitch) to form a grid with R rows and N columns.<br>Available in k-rate and s-rate</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/61">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/61</link>
        <pubDate>Sun, 02 Apr 2017 22:31:32 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-61</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p><strong>sptnk/effect/hard 1.axo</strong><br>Waveshaper distortion (hardclipping + crossover). Antialiased.<br>The amt parameter controls the position of the peak (it's basically a gain).<br><img src="//community.axoloti.com/uploads/default/original/2X/e/ef00426688c9fd96af753cc74ef29b66a998c909.png" width="202" height="299"><br><strong>sptnk/effect/hard 2.axo</strong><br>Waveshaper distortion (pseudo tanh). Antialiased<br><img src="//community.axoloti.com/uploads/default/original/2X/a/a0cc5c3ac497fd2c2383a96bd89f7d42137dc863.png" width="203" height="303"></p>

<p>Plots are courtesy of wolfram alpha</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/60">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/60</link>
        <pubDate>Tue, 14 Mar 2017 14:23:18 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-60</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p><strong>sptnk/effect/sat ur hate 2.axo</strong></p>

<p>Yet another polynomial waveshaper, antialiased, with internal feedback loop, but also variable waveshape and modulation inlets. You can see some <strong>shapes</strong> it can do here:<br><img src="//community.axoloti.com/uploads/default/original/2X/6/62c8c4bd3f0314008f7cf15725904b059869401f.png" width="570" height="409"></p>

<p><strong>IMPORTANT!</strong> Input is hard saturated to normal range, but no antialiasing is applied in this stage!</p>

<p><strong>Feedback</strong> can be either positive or negative, sets the amount of output signal that is mixed with the input (it can beef up the sound, but also totally destroy it). <strong>Tame</strong> option automatically lowers input volume according to feedback amount.</p>

<p>A <strong>filter</strong> can be inserted in the feedback loop (no filter / lowpass 1 pole / highpass 1 pole) to stabilize or cancel dc.</p>

<p>Shape, feedback and filter pitch can be modulated, with little or no artifacts.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/59">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/59</link>
        <pubDate>Sun, 05 Mar 2017 17:18:44 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-59</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@mwvm Michael Walton]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mwvm">@mwvm</a> wrote:</p>
          <blockquote>
              <p>Ah...by patch you mean help information?  Yeah I've seen that.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/58">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/58</link>
        <pubDate>Mon, 27 Feb 2017 22:08:27 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-58</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p>Have you tried clicking on the arrow of the object?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/57">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/57</link>
        <pubDate>Mon, 27 Feb 2017 21:12:14 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-57</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@mwvm Michael Walton]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/mwvm">@mwvm</a> wrote:</p>
          <blockquote>
              <p>i can't find the slicer help patch?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/56">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/56</link>
        <pubDate>Mon, 27 Feb 2017 17:40:51 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-56</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p><strong>sptnk/logic shift register 2d.axo</strong><br>2 dimensional 4x4 shift register. <br>Data is organized in a 4x4 matrix. You can access singular values with x and y coordinates.<br>You can find a brief schematic of the matrix inside the local data of the object</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/55">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/55</link>
        <pubDate>Sun, 26 Feb 2017 19:50:14 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-55</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
      <item>
        <title>Sputnki contributions</title>
        <dc:creator><![CDATA[@Sputnki Filippo Tamagnini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/sputnki">@Sputnki</a> wrote:</p>
          <blockquote>
              <p><strong>sptnk/logic/shift register.axo</strong></p>

<p>It's a shift register that can do SISO and SIPO.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/54">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381/54</link>
        <pubDate>Sun, 26 Feb 2017 10:29:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1381-54</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/sputnki-contributions/1381.rss">Sputnki contributions</source>
      </item>
  </channel>
</rss>
