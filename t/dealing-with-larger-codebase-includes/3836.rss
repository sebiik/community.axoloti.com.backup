<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Dealing with larger codebase / includes</title>
    <link>http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836</link>
    <description>Hello,

After a while off, I want to start investigating some module ideas I have. However, most of them will be fairely &#39;large&#39; and I was wondering what it the status of using #includes in objects. Ideally I would like to have all the implementation in external classes and only &#39;bridge&#39; the class in an axoloti module. Last time I tried I didn&#39;t find a way of referring to external classes (maybe this was only a wrong path issue ?) but It&#39;d be cool to have a little pointer on the topic. This would also allow me to re-use classes across different modules.

Thanks in advance !
/M</description>
    
    <lastBuildDate>Mon, 09 Oct 2017 14:47:05 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Dealing with larger codebase / includes</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>the main thing to be careful of is by default the compiler will inline all code that's brought in via headers (this is normal compiler behaviour) , which this can huge code sizes. you will need to explicitly tell the compiler not to inline the code... choosing which , of course depends on your use-case, and you have to take care as it will impact performance... again, my push object shows how to do this.<br>if you don't do this you <strong>will</strong> run out of memory in the code segment for anything other than pretty trivial code.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/6">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/6</link>
        <pubDate>Mon, 09 Oct 2017 14:47:05 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3836-6</guid>
        <source url="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836.rss">Dealing with larger codebase / includes</source>
      </item>
      <item>
        <title>Dealing with larger codebase / includes</title>
        <dc:creator><![CDATA[@Mdashdotdashn Marc Nostromo]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/mdashdotdashn">@Mdashdotdashn</a> wrote:</p>
          <blockquote>
              <p>Thanks a lot.<br>In the mean time I can use templates and header only code <img src="//community.axoloti.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> I'll try and report if anything weird comes up</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/5">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/5</link>
        <pubDate>Mon, 09 Oct 2017 14:34:49 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3836-5</guid>
        <source url="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836.rss">Dealing with larger codebase / includes</source>
      </item>
      <item>
        <title>Dealing with larger codebase / includes</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>you can include a header file from the object (relative to objects location), and then you can do includes in that relative to that header files (as with normal C)</p>

<p>what you can't do add paths to the include path.</p>

<p>obviously, this extends beyond include paths, since to have separate C files, you would also need to be able to compile these or add libraries to the link path... which is what the new modules stuff is all about.<br>I refer you to my push object where you can see what I did to workaround this.</p>

<p>basically my objective was to structure the code, such that when we developed 'compile units' I would be able to transition the code simply.</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/4">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/4</link>
        <pubDate>Mon, 09 Oct 2017 13:31:56 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3836-4</guid>
        <source url="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836.rss">Dealing with larger codebase / includes</source>
      </item>
      <item>
        <title>Dealing with larger codebase / includes</title>
        <dc:creator><![CDATA[@Mdashdotdashn Marc Nostromo]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/mdashdotdashn">@Mdashdotdashn</a> wrote:</p>
          <blockquote>
              <p>Thanks. Can you tell me where I need to put the includes for the compiler to find them ?</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/3</link>
        <pubDate>Mon, 09 Oct 2017 13:12:45 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3836-3</guid>
        <source url="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836.rss">Dealing with larger codebase / includes</source>
      </item>
      <item>
        <title>Dealing with larger codebase / includes</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>In current version all you can do is include files<br>( see my push example in community library)</p>

<p>In the next release I've implemented something called ''modules' which allows separate compileable units.  </p>

<p>The reason for this, is the namespace needs to be managed to ensure object developers don't break other developers objects ( inadvertently)</p>

<p>Of course for private code you could also start hacking makefiles</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/2</link>
        <pubDate>Mon, 09 Oct 2017 13:07:55 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3836-2</guid>
        <source url="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836.rss">Dealing with larger codebase / includes</source>
      </item>
      <item>
        <title>Dealing with larger codebase / includes</title>
        <dc:creator><![CDATA[@Mdashdotdashn Marc Nostromo]]></dc:creator>
        <description><![CDATA[
          <p><a href="http://community.axoloti.com/u/mdashdotdashn">@Mdashdotdashn</a> wrote:</p>
          <blockquote>
              <p>Hello,</p>

<p>After a while off, I want to start investigating some module ideas I have. However, most of them will be fairely 'large' and I was wondering what it the status of using <span class="hashtag">#includes</span> in objects. Ideally I would like to have all the implementation in external classes and only 'bridge' the class in an axoloti module. Last time I tried I didn't find a way of referring to external classes (maybe this was only a wrong path issue ?) but It'd be cool to have a little pointer on the topic. This would also allow me to re-use classes across different modules.</p>

<p>Thanks in advance !<br>/M</p>
          </blockquote>
          <p><a href="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836/1</link>
        <pubDate>Mon, 09 Oct 2017 12:14:13 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3836-1</guid>
        <source url="http://community.axoloti.com/t/dealing-with-larger-codebase-includes/3836.rss">Dealing with larger codebase / includes</source>
      </item>
  </channel>
</rss>
