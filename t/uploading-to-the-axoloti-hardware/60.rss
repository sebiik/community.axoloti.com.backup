<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Uploading to the Axoloti hardware</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/uploading-to-the-axoloti-hardware/60</link>
    <description>#Overview
In the main user guide, we mentioned that taking a patch live in the Axoloti UI will upload it to the hardware.
The Axoloti UI is where you _build_ your patches, but it is not compulsary for _using_ them.
In this post we will be discussing how to use patches when not connected to a computer.

#Uploading firmware
## Live
When we take a patch &#39;Live&#39; we are uploading the patch to the Axoloti, and then maintaining a connection with this patch so that the UI can interact with it. e.g. by using the dials with the mouse.

When you open a patch and take it live, you will notice that when closing the UI, the Axoloti will continue running that patch happily.
(try it with a sequenced patch like the tybett demo, but it&#39;s true for synths etc. as well)

Of course, with the UI closed, you can&#39;t control the patch via the UI, but you can still control it from a midi keyboard or controller.

However, you will notice that if you remove the power from the board, and then power it up again, the patch will not restart (i.e. you will have silence).

## Upload to flash memory
So, how about using the Axoloti board standalone? (e.g. lets say we want to use it as an FX pedal, or a synth controlled via a midi controller.)

To do this, first open the patch as normal (again try the tybett demo).
Then, rather than pressing the LIVE button, go to the Board menu and select &#39;upload to internal flash&#39;.

At this point the patch will be uploaded to the board, and ... nothing will happen :smile:

Now in order to start the patch without the GUI, power off the board, power it on again, and presto, 
you should now hear the running patch, and it can be controlled via a midi keyboard/controller.

##Upload to SDCARD as startup
This is basically the same as uploading to flash memory, but the patch will be stored on your (micro-)SDCARD instead.
It will behave the same as with the previous method, starting up as soon as you power up the board.

Once you uploaded a patch with &quot;Upload to flash memory&quot; or &quot;Upload to SDCARD as startup&quot;, you can power cycle the board repeatedly and the patch will start each time, without the need for any computer connection.

So how to stop it from starting? :)
there are two ways
a) connect the Axoloti UI to the board (most common, as you most likely want to upload a new patch!)
b) hold down button S1 as you power on the board

The main difference between &quot;Upload to flash memory&quot; and &quot;Upload to SDCARD&quot;, is that the latter allows you to store different patches on different SDCARDs so that, depending on the SDCARD you insert, a different patch will be started. 
By ejecting an SDCARD, the patch will stop, inserting an SDCARD while powered will load the startup patch from it.

##Upload to SDCARD
This option allows you to upload a patch to an SDCARD, but not to be used as the startup patch.
Instead, the patch can then be loaded dynamically by using the patch/load object.

##Uploading samples to SDCARD
you can also store samples on the SDCARD by using the menu Window-&gt;File Manager.

Note: SDCARD should be FAT formatted</description>
    
    <lastBuildDate>Tue, 28 Jul 2015 10:48:10 +0000</lastBuildDate>
    <category>User Guide</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/uploading-to-the-axoloti-hardware/60.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Uploading to the Axoloti hardware</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <h1>Overview</h1>

<p>In the main user guide, we mentioned that taking a patch live in the Axoloti UI will upload it to the hardware.<br>The Axoloti UI is where you <em>build</em> your patches, but it is not compulsary for <em>using</em> them.<br>In this post we will be discussing how to use patches when not connected to a computer.</p>

<h1>Uploading firmware</h1>

<h2>Live</h2>

<p>When we take a patch 'Live' we are uploading the patch to the Axoloti, and then maintaining a connection with this patch so that the UI can interact with it. e.g. by using the dials with the mouse.</p>

<p>When you open a patch and take it live, you will notice that when closing the UI, the Axoloti will continue running that patch happily.<br>(try it with a sequenced patch like the tybett demo, but it's true for synths etc. as well)</p>

<p>Of course, with the UI closed, you can't control the patch via the UI, but you can still control it from a midi keyboard or controller.</p>

<p>However, you will notice that if you remove the power from the board, and then power it up again, the patch will not restart (i.e. you will have silence).</p>

<h2>Upload to flash memory</h2>

<p>So, how about using the Axoloti board standalone? (e.g. lets say we want to use it as an FX pedal, or a synth controlled via a midi controller.)</p>

<p>To do this, first open the patch as normal (again try the tybett demo).<br>Then, rather than pressing the LIVE button, go to the Board menu and select 'upload to internal flash'.</p>

<p>At this point the patch will be uploaded to the board, and ... nothing will happen <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt="smile" width="64" height="64"></p>

<p>Now in order to start the patch without the GUI, power off the board, power it on again, and presto, <br>you should now hear the running patch, and it can be controlled via a midi keyboard/controller.</p>

<h2>Upload to SDCARD as startup</h2>

<p>This is basically the same as uploading to flash memory, but the patch will be stored on your (micro-)SDCARD instead.<br>It will behave the same as with the previous method, starting up as soon as you power up the board.</p>

<p>Once you uploaded a patch with "Upload to flash memory" or "Upload to SDCARD as startup", you can power cycle the board repeatedly and the patch will start each time, without the need for any computer connection.</p>

<p>So how to stop it from starting? <img src="/images/emoji/emoji_one/smile.png?v=0" title=":smile:" class="emoji" alt="smile" width="64" height="64"><br>there are two ways<br>a) connect the Axoloti UI to the board (most common, as you most likely want to upload a new patch!)<br>b) hold down button S1 as you power on the board</p>

<p>The main difference between "Upload to flash memory" and "Upload to SDCARD", is that the latter allows you to store different patches on different SDCARDs so that, depending on the SDCARD you insert, a different patch will be started. <br>By ejecting an SDCARD, the patch will stop, inserting an SDCARD while powered will load the startup patch from it.</p>

<h2>Upload to SDCARD</h2>

<p>This option allows you to upload a patch to an SDCARD, but not to be used as the startup patch.<br>Instead, the patch can then be loaded dynamically by using the patch/load object.</p>

<h2>Uploading samples to SDCARD</h2>

<p>you can also store samples on the SDCARD by using the menu Window-&gt;File Manager.</p>

<p>Note: SDCARD should be FAT formatted</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/uploading-to-the-axoloti-hardware/60/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/uploading-to-the-axoloti-hardware/60/1</link>
        <pubDate>Sun, 26 Jul 2015 18:19:12 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-60-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/uploading-to-the-axoloti-hardware/60.rss">Uploading to the Axoloti hardware</source>
      </item>
  </channel>
</rss>
