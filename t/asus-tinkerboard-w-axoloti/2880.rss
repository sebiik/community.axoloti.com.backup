<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Asus Tinkerboard w/ Axoloti</title>
    <link>http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880</link>
    <description>In the past there has been a bit of discussion about running the **Axoloti Patcher UI** on something like a Raspberry PI (see [here](http://community.axoloti.com/t/is-anyone-using-the-patcher-software-on-a-raspberry-pi-3/2038)) .

Unfortunately, testing showed this is not possible the PI (all models) have not got the required processing power.

Yesterday, (for another project Im working on) I got an [Asus Tinkerboard](https://arstechnica.com/gadgets/2017/01/asus-tinker-board-price-specs-release-date/).
Given its  higher specs than the rPI3 - I thought Id give axoloti another  go...

&lt;img src=&quot;/uploads/default/original/2X/d/d2ccc51500ca0fed740abe48ac5f1a268461d222.JPG&quot; width=&quot;333&quot; height=&quot;250&quot;&gt;

from a users perspective
-----

the board is generally pretty fast, and its a nice package.
Id say the patcher is &#39;borderline useable&#39;, this means its definitely laggy, takes a second to draw new wires etc... but at pinch you could use it.. if you had no choice. But more interestingly, I think LIVE mode could work ok, as this has much less screen redrawing.
ok, so I probably wouldn&#39;t recommend it yet... but it does demonstrate we are getting much closer to having something small that could run the patcher.

(info: running at something like 1920x1080 on my TV over HDMI .. so this could possibly be dropped down, especially on small touch screen, might help performance)


from a developers perspective
------
I ran the current master tag (basically 1.0.12) and it was ok, @urklang branch (piccolo_e) the piccolo render *seemed* a bit faster/smoother ... switched to swing, it seemed slower (than master), it could be somethings are disabled on master(?)

what I think perhaps is more interesting, is being relatively underpowered, it could be a good &#39;test platform&#39; for performance/optimisations, as improvements in rendering performance will probably be more noticeable. This is not only good for trying to run on this platform, but to generally make axoloti feel &#39;snappier&#39; for all users.
it also highlights some bugs e.g. patches can be loaded before the objects are loaded into memory, and also this loading takes quite a long time.

I think its definitely a possibility that axoloti could with optimisation run on this board,even if it didn&#39;t it would be a good step forward, and there are going to be newer/faster boards in the next year or so....

summary, its an interesting board,  you get a lot of processing power for 65 euros ... perhaps not quite there for Axoloti yet, but its close.</description>
    
    <lastBuildDate>Sat, 11 Feb 2017 19:49:02 +0000</lastBuildDate>
    <category>Hardware</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/asus-tinkerboard-w-axoloti/2880.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Asus Tinkerboard w/ Axoloti</title>
        <dc:creator><![CDATA[@urklang Nicolas Steven Miller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/urklang">@urklang</a> wrote:</p>
          <blockquote>
              <p>My experience with Pi boards has shown that a lot can be gained from messing around with raspi-config/config.txt (which I think is a Raspian thing? That's what you're running right?). Overclocking seems to be really effective for example, if you're willing to risk reduced board lifetime. In practice, I haven't noticed any issues with maxed out or heavily tweaked pi boards. I think the default configuration is pretty conservative. My experience comes mostly from running the RetroPie vintage console emulation package on a very old Pi Model B. Config tweaking helped me get from unplayable lag to playable performance.</p>

<p><a class="mention" href="/users/thetechnobear">@thetechnobear</a> Great to hear that the piccolo_e branch was working for you. You mean that Swing mode in that branch seemed slower than the normal swing renderer in master? I'll look into that. It should be effectively equivalent in terms of rendering code except that there is some amount of function call overhead introduced as a result of the model state being moved out of the views. It would be really helpful if you could point to a specific use case or patch where the discrepancy is obvious that I could use for comparison.</p>

<p>PS here's a nice summary of the config performance presets:<br><aside class="onebox wikipedia">
  <header class="source">
    <a href="https://en.wikipedia.org/wiki/Raspberry_Pi#Overclocking" target="_blank" rel="nofollow">en.wikipedia.org</a>
  </header>
  <article class="onebox-body">
    <img src="//upload.wikimedia.org/wikipedia/en/thumb/c/cb/Raspberry_Pi_Logo.svg/100px-Raspberry_Pi_Logo.svg.png" class="thumbnail" width="100" height="126">

<h3><a href="https://en.wikipedia.org/wiki/Raspberry_Pi#Overclocking" target="_blank" rel="nofollow">Raspberry Pi | Overclocking</a></h3>

<p>The CPU chips of the first and second generation Raspberry Pi board did not require cooling, such as a heat sink, unless the chip was overclocked, but the Raspberry Pi 2 SoC may heat more than usual under overclocking.[citation needed] Most Raspberry Pi chips could be overclocked to 800 MHz, and some to 1000 MHz. There are reports the Raspberry Pi 2 can be similarly overclocked, in extreme cases, even to 1500 MHz (discarding all safety features and over-voltage limitations). In the Raspbian Linux...</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/asus-tinkerboard-w-axoloti/2880/4">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880/4</link>
        <pubDate>Sat, 11 Feb 2017 19:39:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2880-4</guid>
        <source url="http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880.rss">Asus Tinkerboard w/ Axoloti</source>
      </item>
      <item>
        <title>Asus Tinkerboard w/ Axoloti</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>already looked at the ODRIOD C2, the bigger ones are not of interest due to power/size etc for my project.</p>

<p>the tinkerboard and odriod c2 are quite 'similar', but the tinkerboard slightly 'edges' it for me, due to:<br>- 4.4 kernel (... the odriod was 3.x but not sure if this has changed now) <br>- faster GPU <br>- 32bit processor, given only 2MB of ram on both... smaller binaries.</p>

<p>I was tempted by the C2 though, I like the display offerings they have, and also having eMMC is a real advantage.</p>

<p>also, the tinkerboard/asus support, is no where near as mature as the PI or ODRIOD, we will see how this goes over the next few months, asus definitely need to improve there. apparently, CPC, the main tinkerboard distributer in the UK has withdrawn the tinkerboard from sale, due to lack of support/software! </p>

<p>I dont actually think in real terms there is much between them, and will probably get a C2 (or more likely the next iteration) for testing purposes... but for now the 4.4 kernel 'out the box' was the main deciding factor.<br>but I can certainly see why for others the C2 would be preferable.</p>

<p>btw... if you dont mind bigger/more expensive there are quite a few alternatives, the <a href="https://beagleboard.org/x15/">Beaglebone X15</a> is one I'm watching in particular (partly due to its DSP processors :))</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/asus-tinkerboard-w-axoloti/2880/3">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880/3</link>
        <pubDate>Sat, 11 Feb 2017 16:07:42 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2880-3</guid>
        <source url="http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880.rss">Asus Tinkerboard w/ Axoloti</source>
      </item>
      <item>
        <title>Asus Tinkerboard w/ Axoloti</title>
        <dc:creator><![CDATA[@strum]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/strum">@strum</a> wrote:</p>
          <blockquote>
              <p>Have a look at ODRIOD, probably the most powerful single board computers around.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/asus-tinkerboard-w-axoloti/2880/2">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880/2</link>
        <pubDate>Sat, 11 Feb 2017 15:13:48 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2880-2</guid>
        <source url="http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880.rss">Asus Tinkerboard w/ Axoloti</source>
      </item>
      <item>
        <title>Asus Tinkerboard w/ Axoloti</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>In the past there has been a bit of discussion about running the <strong>Axoloti Patcher UI</strong> on something like a Raspberry PI (see <a href="//community.axoloti.com/t/is-anyone-using-the-patcher-software-on-a-raspberry-pi-3/2038">here</a>) .</p>

<p>Unfortunately, testing showed this is not possible the PI (all models) have not got the required processing power.</p>

<p>Yesterday, (for another project Im working on) I got an <a href="https://arstechnica.com/gadgets/2017/01/asus-tinker-board-price-specs-release-date/">Asus Tinkerboard</a>.<br>Given its  higher specs than the rPI3 - I thought Id give axoloti another  go...</p>

<p><div class="lightbox-wrapper"><a data-download-href="//community.axoloti.com/uploads/default/d2ccc51500ca0fed740abe48ac5f1a268461d222" href="//community.axoloti.com/uploads/default/original/2X/d/d2ccc51500ca0fed740abe48ac5f1a268461d222.JPG" class="lightbox" title="IMG_1522.JPG"><img src="//community.axoloti.com/uploads/default/optimized/2X/d/d2ccc51500ca0fed740abe48ac5f1a268461d222_1_333x250.JPG" width="333" height="250"><div class="meta">
<span class="filename">IMG_1522.JPG</span><span class="informations">3264x2448 1.81 MB</span><span class="expand"></span>
</div></a></div></p>

<h2>from a users perspective</h2>

<p>the board is generally pretty fast, and its a nice package.<br>Id say the patcher is 'borderline useable', this means its definitely laggy, takes a second to draw new wires etc... but at pinch you could use it.. if you had no choice. But more interestingly, I think LIVE mode could work ok, as this has much less screen redrawing.<br>ok, so I probably wouldn't recommend it yet... but it does demonstrate we are getting much closer to having something small that could run the patcher.</p>

<p>(info: running at something like 1920x1080 on my TV over HDMI .. so this could possibly be dropped down, especially on small touch screen, might help performance)</p>

<h2>from a developers perspective</h2>

<p>I ran the current master tag (basically 1.0.12) and it was ok, <a class="mention" href="/users/urklang">@urklang</a> branch (piccolo_e) the piccolo render <em>seemed</em> a bit faster/smoother ... switched to swing, it seemed slower (than master), it could be somethings are disabled on master(?)</p>

<p>what I think perhaps is more interesting, is being relatively underpowered, it could be a good 'test platform' for performance/optimisations, as improvements in rendering performance will probably be more noticeable. This is not only good for trying to run on this platform, but to generally make axoloti feel 'snappier' for all users.<br>it also highlights some bugs e.g. patches can be loaded before the objects are loaded into memory, and also this loading takes quite a long time.</p>

<p>I think its definitely a possibility that axoloti could with optimisation run on this board,even if it didn't it would be a good step forward, and there are going to be newer/faster boards in the next year or so....</p>

<p>summary, its an interesting board,  you get a lot of processing power for 65 euros ... perhaps not quite there for Axoloti yet, but its close.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/asus-tinkerboard-w-axoloti/2880/1">Read full topic</a></p>
        ]]></description>
        <link>http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880/1</link>
        <pubDate>Sat, 11 Feb 2017 15:10:04 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-2880-1</guid>
        <source url="http://community.axoloti.com/t/asus-tinkerboard-w-axoloti/2880.rss">Asus Tinkerboard w/ Axoloti</source>
      </item>
  </channel>
</rss>
