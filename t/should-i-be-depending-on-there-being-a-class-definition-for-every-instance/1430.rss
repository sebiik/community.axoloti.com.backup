<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Should I be depending on there being a class definition for every instance?</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/should-i-be-depending-on-there-being-a-class-definition-for-every-instance/1430</link>
    <description>I noticed that the generated patch code contains a class definition for every patcher object instance, not for every patcher object type. This was a little surprising to me, but I assume there is some reason. Is it to avoid using new/malloc?

And now I&#39;m making an object where I use some &quot;clever&quot; preprocessor tricks (\__COUNT__ macro in the local data section) to make the patch #error if you make too many instances of another object. This, however, depends on there being a class definition for each instance. I realize this is in poor taste but I was wondering if I can depend on this structure or the patches might quietly shift to class-per-type instead of class-per-instance?</description>
    
    <lastBuildDate>Fri, 01 Apr 2016 22:59:12 +0000</lastBuildDate>
    <category>Developer</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/should-i-be-depending-on-there-being-a-class-definition-for-every-instance/1430.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Should I be depending on there being a class definition for every instance?</title>
        <dc:creator><![CDATA[@rvense]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/rvense">@rvense</a> wrote:</p>
          <blockquote>
              <p>I noticed that the generated patch code contains a class definition for every patcher object instance, not for every patcher object type. This was a little surprising to me, but I assume there is some reason. Is it to avoid using new/malloc?</p>

<p>And now I'm making an object where I use some "clever" preprocessor tricks (__COUNT__ macro in the local data section) to make the patch #error if you make too many instances of another object. This, however, depends on there being a class definition for each instance. I realize this is in poor taste but I was wondering if I can depend on this structure or the patches might quietly shift to class-per-type instead of class-per-instance?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/should-i-be-depending-on-there-being-a-class-definition-for-every-instance/1430/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/should-i-be-depending-on-there-being-a-class-definition-for-every-instance/1430/1</link>
        <pubDate>Fri, 01 Apr 2016 22:50:08 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-1430-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/should-i-be-depending-on-there-being-a-class-definition-for-every-instance/1430.rss">Should I be depending on there being a class definition for every instance?</source>
      </item>
  </channel>
</rss>
