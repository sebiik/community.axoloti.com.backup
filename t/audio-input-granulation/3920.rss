<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Audio Input Granulation</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920</link>
    <description>Howdy! First post here. I&#39;m working on a Theremin-CV controlled instrument, which would granulate sound from a live-sampled input and/or a delay line. With the sample written to a table, pitch shifting the playback would also be possible.

I would love to see examples of how people have done these kinds of things with the Axo, and I would prefer to see patches written in the Axo patcher itself rather than C code of finished objects.

I could write the Pd code for this with both hands tied behind my back, but this is a new environment and has different idiosyncrasies. It&#39;s not that I miss [trigger bang float], it&#39;s just the I&#39;ve learned how to fully exploit it over the years! ;-)

Thank you for your kind attention!
Derek</description>
    
    <lastBuildDate>Wed, 07 Feb 2018 12:50:31 +0000</lastBuildDate>
    <category>Patching</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@macumbista DH]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/macumbista">@macumbista</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/orlandodoom">@OrlandoDoom</a> Real time input granulates from a delay line, whereas sampled (even live-sampled) granulation is read from a table. If you wanted to have things synchronized to some sort of rhythmic meter, it would be much easier to do with a table since the length is the sample is known and can be quantized to different musical measures. This is how Ableton does it's stretching and quantizing, for example. I would suggest a similar approach to what I have taken: some kind of trigger (footswitch?) to capture a sample, and then rhythmically quantized granulation. I think most of the Axo patches mentioned in this thread could be used for something like that. I don't tend to work with quantization at all so my help in that area would be very limited. Good luck!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/11">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/11</link>
        <pubDate>Wed, 07 Feb 2018 12:50:31 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-11</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@OrlandoDoom]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/orlandodoom">@OrlandoDoom</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/macumbista">@macumbista</a> wow, that sound very cool and a great job!<br>I would like to make something that granulates in real time from the audio input, controlling grain size, shift speed and grain pitch from three knobs. Do you know how can I make it, or some patches that I could use or look at?<br>The main aim would be to use it on rhythmic parts to "stretch" them and make them glitchy ( as a break in a live set situation, if u get me)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/10">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/10</link>
        <pubDate>Tue, 06 Feb 2018 15:20:39 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-10</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@macumbista DH]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/macumbista">@macumbista</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/orlandodoom">@OrlandoDoom</a>:  Right now it uses one footswitch to record a sample from the microphone into a buffer. Then another footswitch (soon to be three discrete footswitches in a single enclosure) changes the parameters which the two theremin antennas control:</p>

<p>MODE____LEFT HAND____RIGHT HAND</p>

<p>One______Volume________Pitch Shift<br>Two______Grain Position__Grain Length<br>Three_____Filter Reson____Filter Frequency</p>

<p>The granulator reads from a buffer, the volume and playback speed (pitch) of each grain are controlled by one of the antenna modes. </p>

<p>The position of the grains in the buffer and the length of the grains are controlled by the second mode.</p>

<p>The granulator is followed by a resonant low pass filter, so the third mode controls the frequency and resonance of that.</p>

<p>The main challenge was to find something that was highly playable instead of relying on LFOs or random generators for animation of the sound. Currently, the last input value from the theremin antennas is held by each mode when switching to another one. However I may add another pedal function which samples a hand gesture as sensed by the antennas, to be looped in one mode when switching to another. </p>

<p>The purpose of the instrument is for spoken word performance, a kind of vocal glitch/stutter machine. Documentation eventually, once the client makes a proper piece with it.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/9">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/9</link>
        <pubDate>Tue, 06 Feb 2018 09:07:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-9</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@OrlandoDoom]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/orlandodoom">@OrlandoDoom</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/macumbista">@macumbista</a> is your project gonna granulate an incoming audio input like a pedal would do?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/8">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/8</link>
        <pubDate>Tue, 06 Feb 2018 00:11:25 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-8</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@austingreen Austin Green]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/austingreen">@austingreen</a> wrote:</p>
          <blockquote>
              <p>You guys should look at sss's factotum module as well.  gets very grainy.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/7</link>
        <pubDate>Sat, 18 Nov 2017 04:41:02 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@macumbista DH]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/macumbista">@macumbista</a> wrote:</p>
          <blockquote>
              <p>Thx <a class="mention" href="/u/servandisco">@servandisco</a> I'll dive into that thread now!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/6</link>
        <pubDate>Sun, 12 Nov 2017 12:00:58 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@macumbista DH]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/macumbista">@macumbista</a> wrote:</p>
          <blockquote>
              <p>I found a very nice intro "show and tell" video by <a class="mention" href="/u/mtyas">@mtyas</a>  which explained polyphony which could also be useful for granulators. I couldn't find a topic here or a YouTube video on granulation per se, however. Matthew, if you are tuned in, could you send me a more direct link to what <a class="mention" href="/u/brasso">@brasso</a> mentioned? Thanks!</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/5</link>
        <pubDate>Sun, 12 Nov 2017 11:55:54 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@brasso Marc Brassé]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/brasso">@brasso</a> wrote:</p>
          <blockquote>
              <p>I f I am correct Matthew Tyas ( <a class="mention" href="/u/mtyas">@mtyas</a>) has already tackled most of the issues. Also see his Youtube video's.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/4</link>
        <pubDate>Sat, 11 Nov 2017 22:06:59 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@servandisco servando barreiro]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/servandisco">@servandisco</a> wrote:</p>
          <blockquote>
              <p>This is how I implemented un-pitched grains:<br>When I will have time again, I will try out the pitched options.<br>greetings.<br><aside class="quote" data-topic="2996" data-slug="the-holy-grail-second-reprise" data-post="179"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/user_avatar/community.axoloti.com/servandisco/40/4507_1.png" class="avatar"><a href="//community.axoloti.com/t/the-holy-grail-second-reprise/2996/179" rel="nofollow noopener">The Holy Grail ? (second reprise)</a>
</div>
<blockquote><p>here a single instance of a  grain player I used (4x times)  rest of objects in the patch are made to interact with the controller + filtering / mixing. check out also the help file for [graintable] [image]</p></blockquote></aside></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/3</link>
        <pubDate>Fri, 10 Nov 2017 12:50:39 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@macumbista DH]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/macumbista">@macumbista</a> wrote:</p>
          <blockquote>
              <p>I have located the /js and /jt granulators. I am just wondering if it even makes sense to try and build one from factory Axo objects themselves. Continuing my plunge through the archives here....</p>

<p>/cpwitz/effects/grains/grain-mill<br>/jt/grainy-table<br>/demos/audio_in/granular_verb</p>

<p>Anything I missed?</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/2</link>
        <pubDate>Fri, 10 Nov 2017 12:17:47 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
      <item>
        <title>Audio Input Granulation</title>
        <dc:creator><![CDATA[@macumbista DH]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/macumbista">@macumbista</a> wrote:</p>
          <blockquote>
              <p>Howdy! First post here. I'm working on a Theremin-CV controlled instrument, which would granulate sound from a live-sampled input and/or a delay line. With the sample written to a table, pitch shifting the playback would also be possible.</p>

<p>I would love to see examples of how people have done these kinds of things with the Axo, and I would prefer to see patches written in the Axo patcher itself rather than C code of finished objects.</p>

<p>I could write the Pd code for this with both hands tied behind my back, but this is a new environment and has different idiosyncrasies. It's not that I miss [trigger bang float], it's just the I've learned how to fully exploit it over the years! <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>

<p>Thank you for your kind attention!<br>Derek</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920/1</link>
        <pubDate>Fri, 10 Nov 2017 11:05:07 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-3920-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/audio-input-granulation/3920.rss">Audio Input Granulation</source>
      </item>
  </channel>
</rss>
