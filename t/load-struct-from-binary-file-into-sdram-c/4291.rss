<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Load Struct from binary file into SDRAM (C)</title>
    <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291</link>
    <description>This has been partially covered in other threads (including this one https://sebiik.github.io/community.axoloti.com.backup/t/two-questions-arrays-and-where-to-put-them-solved/4252/28 ), I think, but the specifics are confusing me.

I have some structs saved to a binary file. The struct is defined as:

    struct lpcTables {
        uint16_t    subtype;
        uint8_t     num_k;
        uint8_t     energy_bits;
        uint8_t     pitch_bits;
        uint8_t     kbits[10];
        uint8_t     energytable[64];
        uint8_t     pitchtable[64];
        int16_t     ktable[10][64];
        uint8_t     interp_coeff[8];
    };

    lpcTables *lpf_coeffs_data;


and there are 8 of them rolled into the binary file.

I want to load this data into SDRAM, but I&#39;m not sure how exactly to do this.
I currently have this in my Init Code:

    // FatFS file_erroror message container
    FRESULT file_error;
    FIL bin;

    LogTextMessage(&quot;Attempting to load binary data&quot;);

    // Attempt to open binary file, and keep return status in file_error var
    file_error = f_open(&amp;bin, &quot;attr_table&quot;, FA_READ | FA_OPEN_EXISTING);

    // Exit if binary file not found
    if(file_error != FR_OK) {
    	LogTextMessage(&quot;Unable to open binary data file&quot;);
    	return;
    }

    /////////////////////////////
    // Allocate array in SDRAM //
    /////////////////////////////

    LogTextMessage(&quot;Allocating space in SDRAM for LPC Coefficents tables&quot;);
    static lpcTables lpc_coeffs_data_sdram[attr_poly][11872] __attribute__ ((section (&quot;.sdram&quot;)));

    // Set pointer to SDRAM array
    LogTextMessage(&quot;Setting pointer to LPC Coefficents tables&quot;);
    lpf_coeffs_data = &amp;lpc_coeffs_data_sdram[parent -&gt; polyIndex][0];

I get this error message in the console:

    region `sdram&#39; overflowed by 8612096 bytes
    collect2: error: ld returned 1 exit status
    make: *** [/Users/adrin009/Documents/axoloti/build/xpatch.bin] Error 1
    shell task failed, exit value: 2
    Compiling patch failed ( /Users/adrin009/Library/Mobile

I managed to load a binary before, but that was just a straight array of bytes. This time, I want to load structured data, and I can&#39;t work out how to do it.

Sorry if this is really basic stuff, but it&#39;s confusing the hell out of me..

a|x</description>
    
    <lastBuildDate>Thu, 01 Mar 2018 05:44:50 +0000</lastBuildDate>
    <category>AxoObject coding</category>
    <atom:link href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>i guess that is ok. <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/17">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/17</link>
        <pubDate>Thu, 01 Mar 2018 05:44:50 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-17</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p><img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>Multiple instances of the object will load the data into SDRAM multiple times, but, since the file is less that 6kb, I'm not sure that's too much of an issue.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/16">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/16</link>
        <pubDate>Wed, 28 Feb 2018 23:40:43 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-16</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>yes!! very nice... <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/15">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/15</link>
        <pubDate>Wed, 28 Feb 2018 23:36:37 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-15</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>And now it works!</p>

<p>I've padded out all the arrays in my C binary-export program so that they all match the struct definition</p>

<pre><code>struct lpcTables {
    uint16_t    subtype;
    uint8_t     num_k;
    uint8_t     energy_bits;
    uint8_t     pitch_bits;
    uint8_t     kbits[10];
    uint8_t     energytable[16];
    uint8_t     pitchtable[64];
    int16_t     ktable[10][32];
    uint8_t     interp_coeff[8];
};</code></pre>

<p>Now, I can increment the pointer</p>

<p><code>lpc_coeffs_data++;</code></p>

<p><code>lpc_coeffs_data+=2;</code></p>

<p>etc., to get the correct values for the second/third etc. set of tables.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/14">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/14</link>
        <pubDate>Wed, 28 Feb 2018 23:18:37 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-14</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Yeah, I think I know what's going wrong. Not all the arrays are the right length, so I'm adding padding to the binary data, now.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/13">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/13</link>
        <pubDate>Wed, 28 Feb 2018 23:05:44 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-13</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="9" data-topic="4291"><div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//community.axoloti.com/letter_avatar_proxy/v2/letter/t/b9e5f3/40.png" class="avatar">toneburst:</div>
<blockquote><p>The array should have the values {0,3,3,3,2,2,1,1}, so value at index 4 should be 2, NOT 42. Is this where byte-alignment rears it's ugly head?</p></blockquote></aside>

<p>you are reading index 1 there, at least according to the source you posted...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/12">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/12</link>
        <pubDate>Wed, 28 Feb 2018 23:04:30 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-12</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>would it not be lpc_coeffs_data[1]  to access the second entry? EDIT: that is of course bullshit since it is a struct. sorry</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/11">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/11</link>
        <pubDate>Wed, 28 Feb 2018 22:34:06 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-11</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>If I increment the pointer</p>

<p><code>lpc_coeffs_data++;</code></p>

<p>I get garbage values.</p>

<pre><code>subtype: 57602
num_k: 197
energy_bits: 2
pitch_bits: 95
kbits[9]: 220
energytable[2]: 43
pitchtable[5]: 0
ktable[5][3]: 0
interp_coeff[4]: 0</code></pre>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/10">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/10</link>
        <pubDate>Wed, 28 Feb 2018 22:08:47 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-10</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>This kind of works, at least for extracting data from the first 'record' in the binary file.</p>

<pre><code>// FatFS file_erroror message container
FRESULT file_error;
FIL bin;
UINT bytes_read;

LogTextMessage("Attempting to load binary data");

// Attempt to open binary file, and keep return status in file_error var
file_error = f_open(&amp;bin, "attr_table", FA_READ | FA_OPEN_EXISTING);

// Exit if binary file not found
if(file_error != FR_OK) {
	LogTextMessage("Unable to open binary data file");
	return;
}

const uint32_t binsize = f_size(&amp;bin);

LogTextMessage("binsize: %d", binsize);

/////////////////////////////
// Allocate array in SDRAM //
/////////////////////////////

LogTextMessage("Allocating space in SDRAM for LPC Coefficents tables");

lpf_coeffs_data = (lpcTables *)sdram_malloc(binsize);

// Load lpcdata into sdram
int remaining_bytes = binsize;
int offset = 0;

while (remaining_bytes &gt; 0) {
	if (remaining_bytes &gt; sizeof(fbuff)) {
		file_error = f_read(&amp;bin, fbuff, sizeof(fbuff), &amp;bytes_read);
		if (bytes_read == 0)
			break;
		memcpy((char*)(&amp;lpf_coeffs_data[0]) + offset,(char *)fbuff,bytes_read);
		remaining_bytes -= bytes_read;
		offset += bytes_read;
	} else {
		file_error = f_read(&amp;bin, fbuff, remaining_bytes, &amp;bytes_read);
		memcpy((char*)(&amp;lpf_coeffs_data[0]) + offset,(char *)fbuff,bytes_read);
		remaining_bytes = 0;
	}
}

if (file_error != FR_OK) {
	LogTextMessage("Failed reading lpc data file, aborting...\n");
	return; 
}

file_error = f_close(&amp;bin);
if (file_error != FR_OK) {
	LogTextMessage("Failed closing lpc data file, aborting...\n");
	return; 
}

/*struct lpcTables {
    uint16_t    subtype;
    uint8_t     num_k;
    uint8_t     energy_bits;
    uint8_t     pitch_bits;
    uint8_t     kbits[10];
    uint8_t     energytable[64];
    uint8_t     pitchtable[64];
    int16_t     ktable[10][64];
    uint8_t     interp_coeff[8];
};*/

LogTextMessage("subtype: %d", lpf_coeffs_data-&gt;subtype);
LogTextMessage("num_k: %d", lpf_coeffs_data-&gt;num_k);
LogTextMessage("energy_bits: %d", lpf_coeffs_data-&gt;energy_bits);
LogTextMessage("pitch_bits: %d", lpf_coeffs_data-&gt;pitch_bits);
LogTextMessage("kbits[9]: %d", lpf_coeffs_data-&gt;kbits[9]);
LogTextMessage("energytable[2]: %d", lpf_coeffs_data-&gt;energytable[2]);
LogTextMessage("pitchtable[5]: %d", lpf_coeffs_data-&gt;pitchtable[5]);
LogTextMessage("ktable[5][3]: %d", lpf_coeffs_data-&gt;ktable[5][3]);
LogTextMessage("interp_coeff[4]: %d", lpf_coeffs_data-&gt;interp_coeff[1]);</code></pre>

<p>This is what I see in the console:</p>

<pre><code>Attempting to load binary data
binsize: 11872
Allocating space in SDRAM for LPC Coefficents tables
subtype: 1
num_k: 10
energy_bits: 4
pitch_bits: 5
kbits[9]: 3
energytable[2]: 1
pitchtable[5]: 49
ktable[5][3]: -163
interp_coeff[4]: 42</code></pre>

<p>Everything checks out fine (even with the 2-dimensional array at 'coeffs_data-&gt; ktable), except that it goes a bit screwy when it hits the array at 'coeffs_data-&gt;interp_coeff'</p>

<p>The array should have the values {0,3,3,3,2,2,1,1}, so value at index 4 should be 2, NOT 42. Is this where byte-alignment rears it's ugly head, <a class="mention" href="/u/thetechnobear">@thetechnobear</a>?</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/9">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/9</link>
        <pubDate>Wed, 28 Feb 2018 21:41:39 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-9</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@thetechnobear Mark Harris]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/thetechnobear">@thetechnobear</a> wrote:</p>
          <blockquote>
              <p>you can load a struct if it’s flat ( so that’s includes arrays) , <br>one thing I’d need to check though  is byte alignments.   It may be your struct needs padding to deal with this ... but can’t remember off hand.  </p>

<p>If your using pointers then you need to a ‘resolving’ step which can be non trivial, depending on requirements.</p>

<p><a class="mention" href="/u/lokki">@lokki</a> I’d assume <a class="mention" href="/u/toneburst">@toneburst</a> code is casting the data to the struct ie it assumes this binary data Ian in the format of the struct ... as such like a static cast, the compiler doesn’t care ... unless you start using it as a pointer <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"><br>( and also if byte alignment is required, hence point above)</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/8">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/8</link>
        <pubDate>Wed, 28 Feb 2018 19:15:25 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-8</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>It’s certainly possible to load data into a struct from a binary file.</p>

<p>I must admit, though, pointers and structs are a bit confusing to me.</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/7">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/7</link>
        <pubDate>Wed, 28 Feb 2018 19:01:46 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-7</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>i would look at the binfile with a hex editor and see how the data is stored in there. my guess is like i said:</p>

<p>if you save one uint8_t and one uint16_t (127 and 4096 for example) you will see:</p>

<p>7F 10 00</p>

<p>regardless of any structs. without knowing the sizes this could well be: </p>

<p>32528(7F10) and 0(00) or 127 16 and 0...</p>

<p>but i suspect this is not your point...</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/6">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/6</link>
        <pubDate>Wed, 28 Feb 2018 18:57:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-6</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>but the struct is not contained in the binary file. (just the numbers within) so i also don't think you can just read out the data and have your struct magically reappear. maybe i don't get what you say though.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/5">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/5</link>
        <pubDate>Wed, 28 Feb 2018 18:49:07 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-5</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>I realise the binary data is completely unstructured.</p>

<p>You can do this, though.</p>

<p><a href="https://overiq.com/c-programming/101/pointer-to-a-structure-in-c/" class="onebox" target="_blank" rel="nofollow noopener">https://overiq.com/c-programming/101/pointer-to-a-structure-in-c/</a></p>

<p>It’s the old school way <img src="//community.axoloti.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>

<p>I’ll have another look at you file, and see if I can do it your way.</p>

<p>a|x</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/4">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/4</link>
        <pubDate>Wed, 28 Feb 2018 18:32:34 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-4</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@lokki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/lokki">@lokki</a> wrote:</p>
          <blockquote>
              <p>the binary file has no structure at all, it is just number after number. there is also no concept of int16 or uint8_t or similar. this means:</p>

<p>you have to know where your stuff is in the binary. you can load e.g. the first 8 bytes and save them into 8 uint8_t variables or four uint16_t. </p>

<p>to get the right amount of sdram allocated you first get the file size with f_size, after that you can allocate the right amount of memory with sdram_malloc(filesize).</p>

<p>you don't need to use the table stuff and "<strong>attribute</strong>...".</p>

<p>for practical reasons it would be easier if all your variables had the same size, then you could just load them all into one big array and read from there. otherwise you have to load the first x bytes into uint16_t then into uint8_t etc... i would not want to do that <img src="//community.axoloti.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>or make different bin files for the different variable types.</p>

<p>look at the .h file i sent you, it should be pretty clear howto open the file on sdcard and allocate the memory from there.</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/3">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/3</link>
        <pubDate>Wed, 28 Feb 2018 18:11:42 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-3</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>Also, I'd like to be able to allocate exactly the right amount of space in SDRAM for the file, but I can't work out how to do that, either, because it seems the number of bytes required needs to set in advance (ie as an object attribute).</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/2">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/2</link>
        <pubDate>Wed, 28 Feb 2018 17:20:29 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-2</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
      <item>
        <title>Load Struct from binary file into SDRAM (C)</title>
        <dc:creator><![CDATA[@toneburst alx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/u/toneburst">@toneburst</a> wrote:</p>
          <blockquote>
              <p>This has been partially covered in other threads (including this one <a href="//community.axoloti.com/t/two-questions-arrays-and-where-to-put-them-solved/4252/28">https://sebiik.github.io/community.axoloti.com.backup/t/two-questions-arrays-and-where-to-put-them-solved/4252/28</a> ), I think, but the specifics are confusing me.</p>

<p>I have some structs saved to a binary file. The struct is defined as:</p>

<pre><code>struct lpcTables {
    uint16_t    subtype;
    uint8_t     num_k;
    uint8_t     energy_bits;
    uint8_t     pitch_bits;
    uint8_t     kbits[10];
    uint8_t     energytable[64];
    uint8_t     pitchtable[64];
    int16_t     ktable[10][64];
    uint8_t     interp_coeff[8];
};

lpcTables *lpf_coeffs_data;</code></pre>

<p>and there are 8 of them rolled into the binary file.</p>

<p>I want to load this data into SDRAM, but I'm not sure how exactly to do this.<br>I currently have this in my Init Code:</p>

<pre><code>// FatFS file_erroror message container
FRESULT file_error;
FIL bin;

LogTextMessage("Attempting to load binary data");

// Attempt to open binary file, and keep return status in file_error var
file_error = f_open(&amp;bin, "attr_table", FA_READ | FA_OPEN_EXISTING);

// Exit if binary file not found
if(file_error != FR_OK) {
	LogTextMessage("Unable to open binary data file");
	return;
}

/////////////////////////////
// Allocate array in SDRAM //
/////////////////////////////

LogTextMessage("Allocating space in SDRAM for LPC Coefficents tables");
static lpcTables lpc_coeffs_data_sdram[attr_poly][11872] __attribute__ ((section (".sdram")));

// Set pointer to SDRAM array
LogTextMessage("Setting pointer to LPC Coefficents tables");
lpf_coeffs_data = &amp;lpc_coeffs_data_sdram[parent -&gt; polyIndex][0];</code></pre>

<p>I get this error message in the console:</p>

<pre><code>region `sdram' overflowed by 8612096 bytes
collect2: error: ld returned 1 exit status
make: *** [/Users/adrin009/Documents/axoloti/build/xpatch.bin] Error 1
shell task failed, exit value: 2
Compiling patch failed ( /Users/adrin009/Library/Mobile</code></pre>

<p>I managed to load a binary before, but that was just a straight array of bytes. This time, I want to load structured data, and I can't work out how to do it.</p>

<p>Sorry if this is really basic stuff, but it's confusing the hell out of me..</p>

<p>a|x</p>
          </blockquote>
          <p><a href="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/1">Read full topic</a></p>
        ]]></description>
        <link>https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291/1</link>
        <pubDate>Wed, 28 Feb 2018 17:18:18 +0000</pubDate>
        <guid isPermaLink="false">community.axoloti.com-post-4291-1</guid>
        <source url="https://sebiik.github.io/community.axoloti.com.backup/t/load-struct-from-binary-file-into-sdram-c/4291.rss">Load Struct from binary file into SDRAM (C)</source>
      </item>
  </channel>
</rss>
