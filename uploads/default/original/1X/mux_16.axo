<objdefs>
   <obj.normal id="mux 16" uuid="28bba63f5123d8a472c74a014a79c0db1a8ba21d" sha="63879755a96e1b599bf55eacb02d39a5f5c7143b">
      <upgradeSha>86863079e7321e24cc459b915df254f38201e6a</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Alex</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <frac32 name="i0" description="input 0"/>
         <frac32 name="i1" description="input 1"/>
         <frac32 name="i2" description="input 2"/>
         <frac32 name="i3" description="input 3"/>
         <frac32 name="i4" description="input 4"/>
         <frac32 name="i5" description="input 5"/>
         <frac32 name="i6" description="input 6"/>
         <frac32 name="i7" description="input 7"/>
         <frac32 name="i8" description="input 8"/>
         <frac32 name="i9" description="input 9"/>
         <frac32 name="i10" description="input 10"/>
         <frac32 name="i11" description="input 11"/>
         <frac32 name="i12" description="input 12"/>
         <frac32 name="i13" description="input 13"/>
         <frac32 name="i14" description="input 14"/>
         <frac32 name="i15" description="input 15"/>
         
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      case 7: outlet_o= inlet_i7;break;
      case 8: outlet_o= inlet_i8;break;
      case 9: outlet_o= inlet_i9;break;
      case 10: outlet_o= inlet_i10;break;
      case 11: outlet_o= inlet_i11;break;
      case 12: outlet_o= inlet_i12;break;
      case 13: outlet_o= inlet_i13;break;
      case 14: outlet_o= inlet_i14;break;
      case 15: outlet_o= inlet_i15;break;      
      default: outlet_o= inlet_i15;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 16" uuid="d0c4f18bd8ed1fd0839ed7fb2391a35283d3633e" sha="7a6ac9844228585d8ca2030af92dfc47315e21ed">
      <upgradeSha>a3e0aaa6d293ff510b590d6867134851212f0cb3</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Alex</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <int32 name="i0" description="input 0"/>
         <int32 name="i1" description="input 1"/>
         <int32 name="i2" description="input 2"/>
         <int32 name="i3" description="input 3"/>
         <int32 name="i4" description="input 4"/>
         <int32 name="i5" description="input 5"/>
         <int32 name="i6" description="input 6"/>
         <int32 name="i7" description="input 7"/>
         <int32 name="i8" description="input 8"/>
         <int32 name="i9" description="input 9"/>
         <int32 name="i10" description="input 10"/>
         <int32 name="i11" description="input 11"/>
         <int32 name="i12" description="input 12"/>
         <int32 name="i13" description="input 13"/>
         <int32 name="i14" description="input 14"/>
         <int32 name="i15" description="input 15"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      case 7: outlet_o= inlet_i7;break;
      case 8: outlet_o= inlet_i8;break;
      case 9: outlet_o= inlet_i9;break;
      case 10: outlet_o= inlet_i10;break;
      case 11: outlet_o= inlet_i11;break;
      case 12: outlet_o= inlet_i12;break;
      case 13: outlet_o= inlet_i13;break;
      case 14: outlet_o= inlet_i14;break;
      case 15: outlet_o= inlet_i15;break;            
      default: outlet_o= inlet_i15;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 16" uuid="e59e1b33aa7cdebac262da33fde6b4faabd2be4d" sha="2b515e3afbf53befad7871e2be611ce4c6986ca9">
      <upgradeSha>aacbf38e6eb8cb51ebdae0e107bac8b0eba477c</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Alex</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <frac32buffer name="i0" description="input 0"/>
         <frac32buffer name="i1" description="input 1"/>
         <frac32buffer name="i2" description="input 2"/>
         <frac32buffer name="i3" description="input 3"/>
         <frac32buffer name="i4" description="input 4"/>
         <frac32buffer name="i5" description="input 5"/>
         <frac32buffer name="i6" description="input 6"/>
         <frac32buffer name="i7" description="input 7"/>
         <frac32buffer name="i8" description="input 8"/>
         <frac32buffer name="i9" description="input 9"/>
         <frac32buffer name="i10" description="input 10"/>
         <frac32buffer name="i11" description="input 11"/>
         <frac32buffer name="i12" description="input 12"/>
         <frac32buffer name="i13" description="input 13"/>
         <frac32buffer name="i14" description="input 14"/>
         <frac32buffer name="i15" description="input 15"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      case 7: outlet_o= inlet_i7;break;
      case 8: outlet_o= inlet_i8;break;
      case 9: outlet_o= inlet_i9;break;
      case 10: outlet_o= inlet_i10;break;
      case 11: outlet_o= inlet_i11;break;
      case 12: outlet_o= inlet_i12;break;
      case 13: outlet_o= inlet_i13;break;
      case 14: outlet_o= inlet_i14;break;
      case 15: outlet_o= inlet_i15;break;      
      default: outlet_o= inlet_i15;break;
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="mux 16" uuid="2e153ae89d5b3933da86017c15597a5fb976984d" sha="f8a38e3056a3a76d0d08c6930b2384f58c60c7f6">
      <upgradeSha>a7fa51c1c05f1ffa15a60b7c28083aa13b3c94</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Alex</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <bool32 name="i0" description="input 0"/>
         <bool32 name="i1" description="input 1"/>
         <bool32 name="i2" description="input 2"/>
         <bool32 name="i3" description="input 3"/>
         <bool32 name="i4" description="input 4"/>
         <bool32 name="i5" description="input 5"/>
         <bool32 name="i6" description="input 6"/>
         <bool32 name="i7" description="input 7"/>
         <bool32 name="i8" description="input 8"/>
         <bool32 name="i9" description="input 9"/>
         <bool32 name="i10" description="input 10"/>
         <bool32 name="i11" description="input 11"/>
         <bool32 name="i12" description="input 12"/>
         <bool32 name="i13" description="input 13"/>
         <bool32 name="i14" description="input 14"/>
         <bool32 name="i15" description="input 15"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      case 7: outlet_o= inlet_i7;break;
      case 8: outlet_o= inlet_i8;break;
      case 9: outlet_o= inlet_i9;break;
      case 10: outlet_o= inlet_i10;break;
      case 11: outlet_o= inlet_i11;break;
      case 12: outlet_o= inlet_i12;break;
      case 13: outlet_o= inlet_i13;break;
      case 14: outlet_o= inlet_i14;break;
      case 15: outlet_o= inlet_i15;break;
      default: outlet_o= inlet_i15;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 16" uuid="b3b51bdc1daa7f63181ef59f1b33706ab2363db7" sha="80a9245a1433a22583a08edc4ebabfcc343a35d0">
      <upgradeSha>39059cbdbb0018c6a205af36f4e81f1bdb1e1b4a</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Alex</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <charptr32 name="i0" description="input 0"/>
         <charptr32 name="i1" description="input 1"/>
         <charptr32 name="i2" description="input 2"/>
         <charptr32 name="i3" description="input 3"/>
         <charptr32 name="i4" description="input 4"/>
         <charptr32 name="i5" description="input 5"/>
         <charptr32 name="i6" description="input 6"/>
         <charptr32 name="i7" description="input 7"/>
         <charptr32 name="i8" description="input 8"/>
         <charptr32 name="i9" description="input 9"/>
         <charptr32 name="i10" description="input 10"/>
         <charptr32 name="i11" description="input 11"/>
         <charptr32 name="i12" description="input 12"/>
         <charptr32 name="i13" description="input 13"/>
         <charptr32 name="i14" description="input 14"/>
         <charptr32 name="i15" description="input 15"/>

         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <charptr32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      case 7: outlet_o= inlet_i7;break;
      case 8: outlet_o= inlet_i8;break;
      case 9: outlet_o= inlet_i9;break;
      case 10: outlet_o= inlet_i10;break;
      case 11: outlet_o= inlet_i11;break;
      case 12: outlet_o= inlet_i12;break;
      case 13: outlet_o= inlet_i13;break;
      case 14: outlet_o= inlet_i14;break;
      case 15: outlet_o= inlet_i15;break;      
      default: outlet_o= inlet_i15;break;
}
]]></code.krate>
   </obj.normal>
</objdefs>
