<objdefs appVersion="1.0.12">
   <obj.normal id="RanDelay" uuid="6bc226c3-740d-4f8a-b406-5c36e9ca70d3">
      <sDescription></sDescription>
      <author>T.Rochebois</author>
      <license>LGPL</license>
      <helpPatch>RanDelay.axh</helpPatch>
      <inlets>
         <frac32buffer.bipolar name="in"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="left" description=""/>
         <frac32buffer.bipolar name="right"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[static const int NBD = 32;
static const int LENGTH = 1024;
static const int RANGE = LENGTH-5;

float p[NBD];
float env[NBD];
float amp[NBD];
float dp[NBD];
int32_t d[NBD];
float *array;
int ind = 0;


int32_t rnd = 137178354;]]></code.declaration>
      <code.init><![CDATA[static float _array[attr_poly][LENGTH];// __attribute__ ((section (".sdram")));
array = &_array[parent->polyIndex][0];

for(int i = 0; i < LENGTH; i++) 
  array[i] = 0;

for(int i = 0; i < NBD; i++){
  p[i] = 2.0f * i / ((float)NBD);
  rnd *= 69069;
  d[i] = ___SMMUL(rnd & 0x7FFFFFFF, RANGE << 1);
  rnd *= 69069;
  amp[i] = rnd * 0.5f*4.656e-10f>0?1:-1; // ]-1,1[
  rnd *= 69069;
  float a = i/(NBD-1.0f);//rnd * 4.656e-10f;
  dp[i] = (2 / 3000.0f) * (0.2f + a*a*5);
}]]></code.init>
      <code.krate><![CDATA[for(int i = 0; i < NBD; i++){
  p[i] += dp[i];
  if(p[i] > 2){
    p[i] -= 2;
    rnd *= 69069;
    d[i] = ___SMMUL(rnd & 0x7FFFFFFF, RANGE << 1);

  }
  env[i] = p[i];
  if(env[i] > 1){
    env[i] = 2 - env[i];
  }
 // env[i] = env[i] * env[i] * (3 - 2 * env[i]);
  env[i] *= amp[i];
}]]></code.krate>
      <code.srate><![CDATA[ind++; ind %= LENGTH;
array[ind] = (float)inlet_in;
float acc = 0.0f;
for(int i = 0; i < NBD/2; i++){
  acc += env[i] * array[(ind + LENGTH - d[i]) % LENGTH];
}
outlet_left = (int32_t) acc;
acc = 0.0f;
for(int i = NBD/2; i < NBD; i++){
  acc += env[i] * array[(ind + LENGTH - d[i]) % LENGTH];
}
outlet_right = (int32_t) acc;]]></code.srate>
   </obj.normal>
</objdefs>