<objdefs>
   <obj.normal id="keyb zone ch" uuid="7e53172c72a011c3a550746e7e5a43c90e5bc3b4" sha="f0f2b7bf2049172dd9ece848a6b39f624bf94358">
      <upgradeSha>d44ada96531ef6abd5c77f60bb92dbb2ec0d6d35</upgradeSha>
      <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity, only responding to a range of notes unique to channel</sDescription>
      <author>Markus Kaczmarek</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets/>
      <outlets>
         <frac32.bipolar name="note" description="midi note number"/>
         <bool32 name="gate" description="key pressed?"/>
         <frac32.positive name="velocity" description="note-on velocity"/>
         <frac32.positive name="releaseVelocity" description="note-off velocity"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <spinner name="strtNote" MinValue="0" MaxValue="127" DefaultValue="0"/>
         <spinner name="endNote" MinValue="0" MaxValue="127" DefaultValue="127"/>
        <spinner name="channel" MinValue="0" MaxValue="15" DefaultValue="9"/>
      </attribs>
      <code.declaration>
        <![CDATA[int8_t _note;
            uint8_t _gate;
            uint8_t _velo;
            uint8_t _rvelo;
            ]]></code.declaration>
                  <code.init><![CDATA[_gate = 0;
            _note = 0;
            ]]></code.init>
                  <code.krate><![CDATA[outlet_note= _note<<21;
            outlet_gate= _gate<<27;
            outlet_velocity= _velo<<20;
            outlet_releaseVelocity= _rvelo<<20;
            ]]></code.krate>
                  <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_channel) && (data2)) {
              if ((data1 >= attr_strtNote)&&(data1 <= attr_endNote)) {
                _velo = data2;
                _note = data1-64;
                _gate = 1;
              }
            } else if (((status == MIDI_NOTE_ON + attr_channel) && (!data2))||          (status == MIDI_NOTE_OFF + attr_channel)) {
              if (_note == data1-64) {
                _rvelo = data2;
                _gate = 0;
              }
            } else if ((status == attr_channel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
               _gate = 0;
            }
        ]]>
      </code.midihandler>
   </obj.normal>
</objdefs>