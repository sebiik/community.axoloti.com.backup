<objdefs>
   <obj.normal id="turing" uuid="a453b67d20eff2de8f96b5d6c135143c1999317a" sha="ffb621cd98cfe15d04dbdb022de3ae3878ef0d8">
      <sDescription>Turing Machine Random Looping Sequencer</sDescription>
      <author>GaoTamanrasset</author>
      <license>BSD</license>
      <helpPatch/>
      <inlets>
	 <int32 name="initvalue" description="Buffer init value for current buffer"/>
	 <int32 name="trigmask" description="If current_buffer and (bitwise operator) trig_mask > 0 then output pulse"/>
         <bool32.rising name="trig" description="Tempo entry"/>
         <frac32.positive name="random" description="Random entry"/>
      </inlets>
      <outlets>
	 <int32 name="initvalue" description="Buffer init value of current buffer"/>
         <frac32.bipolar name="note" description="Output note"/>
         <bool32 name="o" description="Output pulse when current_buffer and (bitwise operator) trig_mask > 0"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[
uint8_t ntrig;
uint8_t buffer;
uint8_t newbit;
uint8_t counter;
uint8_t initvalue;
uint8_t bufferinitvalue;
]]></code.declaration>
      <code.init><![CDATA[
ntrig = 0;
buffer = 1;
counter = 0;
initvalue = 0;
bufferinitvalue = 0;
]]></code.init>
      <code.krate><![CDATA[
outlet_o = 0;
if(inlet_trig > 0 && !ntrig){
    ntrig = 1;

    if((counter % 8) == 0){
        bufferinitvalue = buffer;
        counter = 0;
        if(inlet_initvalue != initvalue){
            buffer = (uint8_t)inlet_initvalue;
            initvalue = (uint8_t)inlet_initvalue;
        }
    }
    counter++;
 
    if((GenerateRandomNumber() % 255) < (inlet_random >> 19)){
        newbit = ~buffer & 0x1;
    } else {
        newbit = buffer & 0x1;
    }
    buffer = (buffer >> 1) | (newbit << 7);

    if((inlet_trigmask & buffer) > 0) outlet_o = 1;
}

if(!(inlet_trig > 0)) ntrig = 0;

outlet_note = buffer << 19;
outlet_initvalue = bufferinitvalue;
]]></code.krate>
   </obj.normal>
</objdefs>
