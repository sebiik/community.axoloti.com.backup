<objdefs appVersion="1.0.12">
   <obj.normal id="pwm operator" uuid="53ff48ae-fa68-45cd-9099-01d0211dea11">
      <author>Mroe</author>
      <license>GPL</license>
      <inlets>
         <bool32.risingfalling name="gate" description="gate"/>
         <frac32.bipolar name="pitch"/>
         <frac32buffer name="freq"/>
         <frac32buffer name="phase"/>
         <frac32buffer name="bus_in"/>
      </inlets>
      <outlets>
         <frac32buffer name="o"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch"/>
         <frac32.s.map.klineartime.exp2 name="a"/>
         <frac32.s.map.kdecaytime.exp name="d"/>
         <frac32.s.map name="s"/>
         <frac32.s.map.kdecaytime.exp name="r"/>
         <frac32.u.map.gain name="gain1"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[//sine osc stuff
uint32_t Phase;
int32_t wave_out;

//adsr stuff
int8_t stage;
int ntrig;
int32_t val;
int32_t env_out;

//mixer stuff
int32_t mix_out;

//vca stuff
int32_t prev;
int32_t step;]]></code.declaration>
      <code.init><![CDATA[//sine wave init
Phase = 0;

//adsr init
stage = 0;
ntrig = 0;
val = 0;

//out init
wave_out = 0;
env_out = 0;
mix_out = 0;]]></code.init>
      <code.krate><![CDATA[//sine wave code
int32_t freq;
MTOFEXTENDED(param_pitch + inlet_pitch,freq);

//adsr code
if ((inlet_gate>0) && !ntrig) {
   stage = 1;
   ntrig = 1;
}
if (!(inlet_gate>0) && ntrig) {
   stage = 0;
   ntrig=0;
}
if (stage == 0){
   val = ___SMMUL(val,param_r)<<1;
} else if (stage == 1){
   val = val + param_a;
   if (val<0) {
      val =0x7FFFFFFF;
      stage = 2;
   }
} else if (stage == 2) {
   val = (param_s<<4) + (___SMMUL(val - (param_s<<4),param_d)<<1);
}

env_out = val>>4;

//vca code
step = (env_out - prev)>>4;
int32_t i = prev;
prev = env_out;]]></code.krate>
      <code.srate><![CDATA[//sine wave code
Phase += freq + inlet_freq;
int32_t r;
int32_t p2 = Phase + (inlet_phase<<4);
SINE2TINTERP(p2,r)
wave_out= (r>>4);

//mixer code
int32_t accum = ___SMMUL(wave_out,param_gain1);
mix_out=  __SSAT(inlet_bus__in + (accum<<1),28);

//vca
outlet_o =  ___SMMUL(mix_out,i)<<5;
i += step;]]></code.srate>
   </obj.normal>
</objdefs>