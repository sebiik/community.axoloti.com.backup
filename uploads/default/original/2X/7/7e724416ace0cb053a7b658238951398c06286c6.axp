<patch-1.0 appVersion="1.0.12">
   <obj type="lfo/square" uuid="de6909eb64db13af5b43f979a4c130024b3a4793" name="square_1" x="322" y="0">
      <params>
         <frac32.s.map name="pitch" value="10.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_3" x="420" y="0">
      <params>
         <int32 name="maximum" value="16"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_6" x="518" y="0">
      <params>
         <int32 name="maximum" value="10"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_1" x="630" y="0">
      <params>
         <int32 name="maximum" value="1"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_2" x="714" y="0">
      <params>
         <int32 name="maximum" value="8"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sel/sel b 16 4t pulse" uuid="888c8955ae75a9e7e3ed641fa9084d6b52e9fee9" name="sel_1" x="882" y="0">
      <params>
         <bin16 name="p1" value="17701"/>
         <bin16 name="p2" value="27317"/>
         <bin16 name="p3" value="48589"/>
         <bin16 name="p4" value="10533"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sel/sel b 16 4t pulse" uuid="888c8955ae75a9e7e3ed641fa9084d6b52e9fee9" name="sel_2" x="1106" y="0">
      <params>
         <bin16 name="p1" value="4369"/>
         <bin16 name="p2" value="40088"/>
         <bin16 name="p3" value="17476"/>
         <bin16 name="p4" value="10533"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_4" x="630" y="70">
      <params>
         <int32 name="maximum" value="8"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_5" x="714" y="70">
      <params>
         <int32 name="maximum" value="8"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sel/sel dial 8" uuid="8b7d26278459cf6f12cd645dfb68e32df5b46f63" name="sel_4" x="0" y="196">
      <params>
         <frac32.u.map name="v0" value="0.0"/>
         <frac32.u.map name="v1" value="3.0"/>
         <frac32.u.map name="v2" value="7.0"/>
         <frac32.u.map name="v3" value="4.0"/>
         <frac32.u.map name="v4" value="1.0"/>
         <frac32.u.map name="v5" value="5.0"/>
         <frac32.u.map name="v6" value="9.0"/>
         <frac32.u.map name="v7" value="7.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sel/sel dial 8" uuid="8b7d26278459cf6f12cd645dfb68e32df5b46f63" name="sel_3" x="84" y="196">
      <params>
         <frac32.u.map name="v0" value="0.0"/>
         <frac32.u.map name="v1" value="7.0"/>
         <frac32.u.map name="v2" value="3.0"/>
         <frac32.u.map name="v3" value="0.0"/>
         <frac32.u.map name="v4" value="0.0"/>
         <frac32.u.map name="v5" value="7.0"/>
         <frac32.u.map name="v6" value="10.0"/>
         <frac32.u.map name="v7" value="5.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_2" x="168" y="196">
      <params/>
      <attribs/>
   </obj>
   <obj type="osc/saw" uuid="739ecc36017ef3249479b8f01716b8bbfba9abc1" name="saw_1" x="238" y="196">
      <params>
         <frac32.s.map name="pitch" value="-31.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="filter/hp1" uuid="abea7276611b289bed35b80345a6bc4efd4d9a4e" name="hp1_1" x="336" y="196">
      <params>
         <frac32.s.map name="freq" value="-21.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_1" x="980" y="196">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-21.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_1" x="1078" y="196">
      <params>
         <frac32.s.map name="pitch" value="-59.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_2" x="1176" y="196">
      <params>
         <frac32.u.map name="amp" value="27.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_2" x="1274" y="196">
      <params>
         <frac32.s.map name="pitch" value="-54.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_3" x="476" y="210">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="8.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_1" x="574" y="210">
      <params>
         <frac32.u.map name="amp" value="58.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_2" x="742" y="210">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-5.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/latch" uuid="2a50e4657301542464c6a97931847b5e8e0e6d2b" name="latch_1" x="840" y="280">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="812" y="350" text="multi band sequenced EQ "/>
   <comment type="patch/comment" x="1022" y="350" text="slowly modulating peak"/>
   <comment type="patch/comment" x="224" y="364" text="passing the bass parallel to the multi mode filter"/>
   <comment type="patch/comment" x="504" y="364" text="band reject to multimode filter for high freq control"/>
   <comment type="patch/comment" x="812" y="364" text="for variations in the spectrum"/>
   <comment type="patch/comment" x="1022" y="364" text="over left-over signal"/>
   <comment type="patch/comment" x="1302" y="364" text="static instrument body"/>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="filter_1" x="224" y="378">
      <params>
         <frac32.s.map name="pitch" value="-2.0"/>
         <frac32.u.map name="reso" value="40.0"/>
         <frac32.s.map name="mode" value="-64.0"/>
         <frac32.u.map name="gain" value="19.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(param_mode>=0)
{
	out1=band+(___SMMUL(high-band,param_mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-param_mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;//out2;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="oversample filter_1" x="322" y="378">
      <params>
         <frac32.s.map name="pitch" value="-26.0"/>
         <frac32.u.map name="reso" value="31.5"/>
         <frac32.s.map name="mode" value="64.0"/>
         <frac32.u.map name="gain" value="26.5"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(param_mode>=0)
{
	out1=band+(___SMMUL(high-band,param_mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-param_mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;//out2;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <obj type="math/+" uuid="faedbea4612d9bd3644d6d3bf31946d848a70e19" name="+_1" x="476" y="378">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="d7ad8a80-cf67-42e0-b005-ad4d5d976336" name="Multi mode filter" x="546" y="378">
      <params>
         <frac32.s.map name="pitch" value="-18.0"/>
         <frac32.u.map name="res" value="52.5"/>
         <frac32.u.map name="FILTER_tres" value="29.0"/>
         <frac32.u.map name="FILTER_room" value="26.0"/>
         <frac32.s.map name="FILTER_asym" value="22.0"/>
         <int32.hradio name="filtertype" value="1"/>
         <int32.hradio name="clipmode" value="3"/>
         <frac32.u.map name="wet" value="50.0"/>
         <frac32.u.map name="OUTPUT_tres" value="26.5"/>
         <frac32.u.map name="OUTPUT_room" value="30.5"/>
         <frac32.s.map name="OUTPUT_asym" value="-34.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="d7ad8a80-cf67-42e0-b005-ad4d5d976336">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32 name="pitch"/>
            <frac32 name="res"/>
            <int32 name="filtertype"/>
         </inlets>
         <outlets>
            <frac32buffer name="out" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="res"/>
            <frac32.u.map name="FILTER_tres"/>
            <frac32.u.map name="FILTER_room"/>
            <frac32.s.map name="FILTER_asym"/>
            <int32.hradio name="filtertype">
               <MaxValue i="13"/>
            </int32.hradio>
            <int32.hradio name="clipmode">
               <MaxValue i="4"/>
            </int32.hradio>
            <frac32.u.map name="wet"/>
            <frac32.u.map name="OUTPUT_tres"/>
            <frac32.u.map name="OUTPUT_room"/>
            <frac32.s.map name="OUTPUT_asym"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t band,low;
int32_t SAT(int32_t in,int32_t trs,int32_t mx)
{
	int32_t norm=in;
	norm=norm>trs?trs:(norm<-trs?-trs:norm);
	int32_t left=in-norm;
	float32_t ratio=(float32_t)mx/(mx+(left>0?left:-left));
	return left=left*ratio+norm;
}]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t damp = (0x80<<24) - (__USAT(param_res+inlet_res,27)<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch+inlet_pitch,alpha);
SINE2TINTERP(alpha,freq);
int32_t maxF=___SMMUL(param_FILTER__room<<4,(1<<28)-param_FILTER__tres<<1)+1;
int32_t maxO=___SMMUL(param_OUTPUT__room<<4,(1<<28)-param_OUTPUT__tres<<1)+1;
int mode=(param_filtertype+inlet_filtertype+1300)%13;]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
//create bandreject
int32_t bnd=(___SMMUL(damp,band)<<1);
int32_t notch = inlet_in - bnd;
//integrate lowpass
low = low + (___SMMUL(freq,band)<<1);
//create highpass
int32_t high  = notch - low;
//integrate bandpass
band = (___SMMUL(freq,high)<<1) + band;
//soft-clip none, bandpass,lowpass or band&lowpass integrators
switch(param_clipmode)
{
	case 1: 	band=SAT(band,__SSAT(param_FILTER__tres+___SMMUL(band,param_FILTER__asym<<3),28),maxF);break;
	case 2: 	low=SAT(low,__SSAT(param_FILTER__tres+___SMMUL(low,-param_FILTER__asym<<3),28),maxF);break;
	case 3: 	band=SAT(band,__SSAT(param_FILTER__tres+___SMMUL(band,param_FILTER__asym<<3),28),maxF);
			low=SAT(low,__SSAT(param_FILTER__tres+___SMMUL(low,-param_FILTER__asym<<3),28),maxF);
	break;
}

//select filter type output
int32_t out;
switch(mode)
{
	case 0: out=low;break;//normal lowpass
	case 1: out=low-band;break;//lowpass-bandpass difference
	case 2: out=low+band;break;//lowpass with bandpass
	
	case 3: out=band;break;//normal bandpass
	
	case 4: out=high+band;break;//highpass with bandpass
	case 5: out=high-band;break;//highpass-bandpass difference
	case 6: out=high;break;//normal high
	
	case 7: out=notch;break;//normal bandreject

	case 8: out=notch-bnd;break;//allpass ripple
	
	case 9: out=inlet_in+band;break;//peak
	case 10: out=notch-band;break;//peak ripple1
	case 11: out=notch+band;break;//peak ripple2
	case 12: out=low-high;break;//peak ripple3
}
out=inlet_in+(___SMMUL(out-inlet_in,param_wet<<4)<<1);
out = SAT(out,__SSAT(param_OUTPUT__tres+___SMMUL(out,param_OUTPUT__asym<<4),28),maxO);;
outlet_out = out;]]></code.srate>
      </object>
   </patchobj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_2" x="784" y="378">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="lp_9" x="840" y="378">
      <params>
         <frac32.s.map name="from_cut" value="64.0"/>
         <frac32.s.map name="to_cut" value="-10.0"/>
         <frac32.u.map name="from_res" value="56.5"/>
         <frac32.u.map name="to_res" value="60.5"/>
         <frac32.s.map name="from_mode" value="35.0"/>
         <frac32.s.map name="to_mode" value="-40.0"/>
         <frac32.u.map name="from_gain" value="23.0"/>
         <frac32.u.map name="to_gain" value="19.5"/>
         <int32 name="bands" value="4"/>
         <int32.hradio name="x2" value="0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
            <int32 name="pst"/>
            <bool32 name="rnd"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="from_cut"/>
            <frac32.s.map.pitch name="to_cut"/>
            <frac32.u.map.filterq name="from_res"/>
            <frac32.u.map.filterq name="to_res"/>
            <frac32.s.map name="from_mode"/>
            <frac32.s.map name="to_mode"/>
            <frac32.u.map name="from_gain"/>
            <frac32.u.map name="to_gain"/>
            <int32 name="bands">
               <MinValue i="1"/>
               <MaxValue i="8"/>
            </int32>
            <int32.hradio name="x2">
               <MaxValue i="3"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int rnd;
int32_t low[16];
int32_t band[16];
int32_t pass,reject;
int32_t P[16][8];
int32_t R[16][8];
int32_t M[16][8];
int32_t G[16][8];
int32_t filter(int32_t in,int32_t f,int32_t r,int32_t a,int32_t g,int32_t m,int index)
{
int32_t notch = in - (___SMMUL(r,band[index])<<1);
low[index] = low[index] + (___SMMUL(f,band[index])<<1);
int32_t high  = notch - low[index];
band[index] += (___SMMUL(f,high)<<1);
int32_t bnd=band[index];
int32_t lw=low[index];
int32_t out1,out2;
if(m>=0)
{
	out1=bnd+(___SMMUL(high-bnd,m)<<5);
}
else
{
	out1=bnd+(___SMMUL(lw-bnd,-m)<<5);
}

out1 = ___SMMUL(a,out1)<<1;
reject=in-out1;
pass+=(___SMMUL(out1<<1,g)<<1);
}]]></code.declaration>
         <code.init><![CDATA[for(int i=0;i<16;i++)
{
	for(int j=0;j<8;j++)
	{
		P[i][j]=(GenerateRandomNumber()>>1);
		R[i][j]=(GenerateRandomNumber()>>1);
		M[i][j]=(GenerateRandomNumber()>>1);
		G[i][j]=(GenerateRandomNumber()>>1);
	}
}]]></code.init>
         <code.krate><![CDATA[if(inlet_rnd&&!rnd)
{
	rnd=1;
	for(int i=0;i<16;i++)
{
	for(int j=0;j<param_bands;j++)
	{
		P[i][j]=(GenerateRandomNumber()>>1);
		R[i][j]=(GenerateRandomNumber()>>1);
		M[i][j]=(GenerateRandomNumber()>>1);
		G[i][j]=(GenerateRandomNumber()>>1);
	}
}
}
else if(!inlet_rnd){rnd=0;}
int pst=inlet_pst&15;
int32_t alpha;
int32_t freq[param_bands];
int32_t damp[param_bands];
int32_t amp[param_bands];
int32_t mode[param_bands];
int32_t gain[param_bands];
for(int i=0;i<param_bands;i++)
{
	int32_t ptch=param_from__cut+___SMMUL(param_to__cut-param_from__cut<<1,P[pst][i]);
	MTOFEXTENDED(ptch,alpha);
	SINE2TINTERP(alpha,freq[i]);
	int32_t rs=param_from__res+___SMMUL(param_to__res-param_from__res<<1,R[pst][i]);
	rs=rs-(rs>>5)+(1<<21);
	damp[i] = (0x80<<24) - (rs<<4);
	amp[i]=(1<<31)-1-(rs-(rs>>10)<<4);
	mode[i]=param_from__mode+___SMMUL(param_to__mode-param_from__mode<<1,M[pst][i]);
	gain[i]=param_from__gain+___SMMUL(param_to__gain-param_from__gain<<1,G[pst][i])<<4;
}]]></code.krate>
         <code.srate><![CDATA[pass=0;//inlet_pass;
reject=inlet_in;

for(int i=0;i<param_bands;i++)
{
	filter(reject,freq[i],damp[i],amp[i],gain[i],mode[i],i);
}
int32_t rjt=reject;
if(param_x2>0)
{
	for(int j=0;j<param_x2;j++)
	{
		reject=pass;
		pass=0;
		for(int i=0;i<param_bands;i++)
		{
			filter(reject,freq[i],damp[i],amp[i],gain[i],mode[i],i+8);
		}
	}
}

outlet_reject=rjt+reject;
outlet_pass=pass+inlet_pass;]]></code.srate>
      </object>
   </patchobj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="980" y="378">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="lp_2" x="1036" y="378">
      <params>
         <frac32.s.map name="pitch" value="16.0"/>
         <frac32.u.map name="reso" value="51.5"/>
         <frac32.s.map name="mode" value="0.0"/>
         <frac32.u.map name="gain" value="26.5"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
            <frac32 name="pitch"/>
            <frac32 name="mode"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch+inlet_pitch,alpha);
SINE2TINTERP(alpha,freq);
int32_t mode=__SSAT(param_mode+inlet_mode,28);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(mode>=0)
{
	out1=band+(___SMMUL(high-band,mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="filter_2" x="1190" y="378">
      <params>
         <frac32.s.map name="pitch" value="-14.0"/>
         <frac32.u.map name="reso" value="37.5"/>
         <frac32.s.map name="mode" value="-64.0"/>
         <frac32.u.map name="gain" value="24.5"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(param_mode>=0)
{
	out1=band+(___SMMUL(high-band,param_mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-param_mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;//out2;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="filter_3" x="1288" y="378">
      <params>
         <frac32.s.map name="pitch" value="15.0"/>
         <frac32.u.map name="reso" value="38.0"/>
         <frac32.s.map name="mode" value="-16.0"/>
         <frac32.u.map name="gain" value="25.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(param_mode>=0)
{
	out1=band+(___SMMUL(high-band,param_mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-param_mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;//out2;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="filter_4" x="1386" y="378">
      <params>
         <frac32.s.map name="pitch" value="21.0"/>
         <frac32.u.map name="reso" value="45.5"/>
         <frac32.s.map name="mode" value="-16.0"/>
         <frac32.u.map name="gain" value="19.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(param_mode>=0)
{
	out1=band+(___SMMUL(high-band,param_mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-param_mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;//out2;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="filter_5" x="1484" y="378">
      <params>
         <frac32.s.map name="pitch" value="51.0"/>
         <frac32.u.map name="reso" value="53.5"/>
         <frac32.s.map name="mode" value="0.0"/>
         <frac32.u.map name="gain" value="41.5"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(param_mode>=0)
{
	out1=band+(___SMMUL(high-band,param_mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-param_mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;//out2;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="1148" y="602" text="you can set the gain knobs to zero and add each filter one by one for setting up the spectral peaks"/>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_4" x="1064" y="686">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-15.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_3" x="1162" y="686">
      <params>
         <frac32.u.map name="amp" value="36.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_5" x="1260" y="686">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="13.0"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="db5a3113-4d5f-4ce3-aaed-4ec62db75b21" name="*c_4" x="1358" y="686">
      <params>
         <frac32.s.map name="amp" value="17.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="db5a3113-4d5f-4ce3-aaed-4ec62db75b21">
         <sDescription>Multiply (attenuate) with a constant value</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>math.axh</helpPatch>
         <inlets>
            <frac32 name="in" description="input"/>
         </inlets>
         <outlets>
            <frac32 name="out" description="output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map name="amp"/>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[outlet_out= ___SMMUL(param_amp<<4,inlet_in)<<1;]]></code.krate>
      </object>
   </patchobj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_7" x="826" y="854">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-20.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_6" x="1036" y="854">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-25.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="fx/rngs/ensemble" uuid="615802b3-3def-478d-95ce-c5ac35003a55" name="ensemble_1" x="392" y="938">
      <params>
         <frac32.u.map name="amount" value="47.5"/>
         <frac32.u.map name="depth" value="48.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="fx/rngs/reverb" uuid="bb0fb9e0-aafe-4501-ba83-897f2530751d" name="reverb_1" x="490" y="938">
      <params>
         <frac32.u.map name="amount" value="11.0"/>
         <frac32.u.map name="time" value="46.5"/>
         <frac32.u.map name="diffusion" value="52.5"/>
         <frac32.u.map name="gain" value="33.5"/>
         <frac32.u.map name="lowpass" value="51.5"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="2b0224c3-0a81-4d1d-8c23-789e8891cbdb" name="lp1_2" x="644" y="938">
      <params>
         <frac32.u.map name="IN_pre" value="64.0"/>
         <frac32.u.map name="IN_tres" value="12.5"/>
         <frac32.u.map name="IN_headroom" value="21.5"/>
         <frac32.s.map name="FILTER_cutoff" value="-24.0"/>
         <frac32.u.map name="FILTER_res" value="40.0"/>
         <frac32.u.map name="FILTER_tres" value="46.5"/>
         <frac32.u.map name="FILTER_headroom" value="39.5"/>
         <frac32.u.map name="FILTER_fuel" value="18.5"/>
         <int32.hradio name="mode" value="0"/>
         <bool32.tgl name="OS" value="0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="2b0224c3-0a81-4d1d-8c23-789e8891cbdb">
         <sDescription>1st order lowpass filter</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="input"/>
            <frac32.bipolar name="cutoff"/>
            <frac32.positive name="res"/>
            <frac32buffer name="fm"/>
         </inlets>
         <outlets>
            <frac32buffer name="out" description="output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map name="IN_pre">
               <DefaultValue v="0.0"/>
            </frac32.u.map>
            <frac32.u.map name="IN_tres">
               <DefaultValue v="32.0"/>
            </frac32.u.map>
            <frac32.u.map name="IN_headroom">
               <DefaultValue v="32.0"/>
            </frac32.u.map>
            <frac32.s.map name="FILTER_cutoff"/>
            <frac32.u.map name="FILTER_res"/>
            <frac32.u.map name="FILTER_tres">
               <DefaultValue v="32.0"/>
            </frac32.u.map>
            <frac32.u.map name="FILTER_headroom">
               <DefaultValue v="32.0"/>
            </frac32.u.map>
            <frac32.u.map name="FILTER_fuel">
               <DefaultValue v="0.0"/>
            </frac32.u.map>
            <int32.hradio name="mode">
               <MaxValue i="3"/>
            </int32.hradio>
            <bool32.tgl name="OS"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t val[5];
int32_t dc;


int32_t SAT(int32_t in,int32_t trs,int32_t mx)
{
	int32_t norm=in;norm=norm>trs?trs:(norm<-trs?-trs:norm);
	int32_t left=in-norm;
	float32_t ratio=(float32_t)mx/(mx+(left>0?left:-left));
	return left=left*ratio+norm;
}]]></code.declaration>
         <code.init><![CDATA[val[1]=0;]]></code.init>
         <code.krate><![CDATA[int32_t F;
   MTOF(param_FILTER__cutoff+(1<<24)+inlet_cutoff,F);
   int32_t res=__USAT(param_FILTER__res+inlet_res,27)<<4;
   res=res-(___SMMUL(F,res));
   res=__USAT((uint32_t)(1<<31)-(1<<25)-res,31);
   res=___SMMUL(res,res)<<1;
   res=___SMMUL(res,res)<<1;
int32_t boost=(1<<30)+(F>>1);
int32_t max=___SMMUL(param_FILTER__headroom<<4,(1<<28)-param_FILTER__tres<<1)+1;
int32_t mIN=___SMMUL(param_IN__headroom<<4,(1<<28)-param_IN__tres<<1)+1;
int32_t pre=param_IN__pre<<4;
int OS=param_OS+1;]]></code.krate>
         <code.srate><![CDATA[//audio input pre-amplification for freq/res/pre-gain and limiting outcome

int64_t f=(int64_t)F+(___SMMUL(F,inlet_fm)<<7);
f=f>((1<<31)-1)?(1<<31)-1:(f<-((1<<31)-1)?-((1<<31)-1):f);

int32_t in=inlet_in+___SMMUL(inlet_in<<1,pre);
in=SAT(in,param_IN__tres,mIN);
int32_t lin=___SMMUL(in,f)<<1;
int32_t tin=___SMMUL(res,lin)<<1;
tin+=___SMMUL(lin-tin,boost)<<1;

for(int i=0;i<OS;i++)
{
//filter cosine (lp) calculation and limiting outcome
val[1]+=(___SMMUL(-val[0],f)<<1)-(___SMMUL(val[1],res)<<1);
val[1]+=___SMMUL(val[1],param_FILTER__fuel)>>2;
val[1]=SAT(val[1],param_FILTER__tres,max);

//filter sine (bp) calculation and limiting outcome
val[0]+=(___SMMUL(val[1],f)<<1)-(___SMMUL(val[0],res)<<1)+tin;
val[0]+=___SMMUL(val[0],param_FILTER__fuel)>>2;
val[0]=SAT(val[0],param_FILTER__tres,max);
}
int32_t filter[8];
filter[0]=-val[1];
filter[1]=val[0];
filter[2]=___SMMUL(in,f)+(in>>1)+val[1];
outlet_out=filter[param_mode];]]></code.srate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="filter_7" x="826" y="966">
      <params>
         <frac32.s.map name="pitch" value="5.0"/>
         <frac32.u.map name="reso" value="62.5"/>
         <frac32.s.map name="mode" value="20.0"/>
         <frac32.u.map name="gain" value="64.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(param_mode>=0)
{
	out1=band+(___SMMUL(high-band,param_mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-param_mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;//out2;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_4" x="924" y="966">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70" name="filter_6" x="980" y="966">
      <params>
         <frac32.s.map name="pitch" value="51.0"/>
         <frac32.u.map name="reso" value="50.5"/>
         <frac32.s.map name="mode" value="35.0"/>
         <frac32.u.map name="gain" value="41.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="52a44fed-cfa6-40fd-82f3-5cb55ac44f70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32buffer name="pass"/>
         </inlets>
         <outlets>
            <frac32buffer name="reject"/>
            <frac32buffer name="pass" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
            <frac32.s.map name="mode"/>
            <frac32.u.map.gain16 name="gain"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t reso=param_reso-(param_reso>>5)+(1<<21);
int32_t damp = (0x80<<24) - (reso<<4);
int32_t amp=(1<<31)-1-(reso-(reso>>10)<<4);

int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = in1 - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band += (___SMMUL(freq,high)<<1);

int32_t out1;
if(param_mode>=0)
{
	out1=band+(___SMMUL(high-band,param_mode)<<5);
}
else
{
	out1=band+(___SMMUL(low-band,-param_mode)<<5);
}

outlet_pass = ___SMMUL(amp,out1)<<1;
outlet_reject=inlet_in-outlet_pass;//out2;
outlet_pass=inlet_pass+(___SMMUL(outlet_pass<<2,param_gain)<<1);]]></code.srate>
      </object>
   </patchobj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_3" x="1078" y="966">
      <params/>
      <attribs/>
   </obj>
   <obj type="mix/mix 3 sq" uuid="d7b47d5c17ec70f49b38661d48ad251bad22aace" name="mix_3" x="1134" y="966">
      <params>
         <frac32.u.map name="gain1" value="35.5"/>
         <frac32.u.map name="gain2" value="64.0"/>
         <frac32.u.map name="gain3" value="28.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 2 sq" uuid="9b03da12a01f39ecd48d16285e7d10acb8e1267c" name="mix_1" x="1232" y="966">
      <params>
         <frac32.u.map name="gain1" value="64.0"/>
         <frac32.u.map name="gain2" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 2 sq" uuid="9b03da12a01f39ecd48d16285e7d10acb8e1267c" name="mix_2" x="1330" y="966">
      <params>
         <frac32.u.map name="gain1" value="64.0"/>
         <frac32.u.map name="gain2" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/audio/StOutVol" uuid="0ca9cf1e-1ce3-469c-80da-a4a885c21246" name="StOutVol_1" x="1428" y="966">
      <params>
         <frac32.u.map name="volume" value="54.0"/>
      </params>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="saw_1" outlet="wave"/>
         <dest obj="hp1_1" inlet="in"/>
      </net>
      <net>
         <source obj="square_1" outlet="wave"/>
         <dest obj="counter_1" inlet="trig"/>
         <dest obj="counter_3" inlet="trig"/>
         <dest obj="counter_6" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_1" outlet="c"/>
         <dest obj="counter_2" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_2" outlet="c"/>
         <dest obj="lp_9" inlet="rnd"/>
         <dest obj="counter_4" inlet="trig"/>
      </net>
      <net>
         <source obj="filter_1" outlet="reject"/>
         <dest obj="+_1" inlet="in1"/>
      </net>
      <net>
         <source obj="filter_1" outlet="pass"/>
         <dest obj="oversample filter_1" inlet="in"/>
      </net>
      <net>
         <source obj="hp1_1" outlet="out"/>
         <dest obj="filter_1" inlet="in"/>
         <dest obj="filter_6" inlet="in"/>
         <dest obj="filter_7" inlet="in"/>
      </net>
      <net>
         <source obj="lp_9" outlet="reject"/>
         <dest obj="vca_1" inlet="a"/>
      </net>
      <net>
         <source obj="lp_9" outlet="pass"/>
         <dest obj="lp_2" inlet="pass"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="lp_2" inlet="in"/>
      </net>
      <net>
         <source obj="counter_3" outlet="o"/>
         <dest obj="sel_1" inlet="in"/>
         <dest obj="sel_2" inlet="in"/>
      </net>
      <net>
         <source obj="sel_1" outlet="o1"/>
         <dest obj="ad_1" inlet="trig"/>
      </net>
      <net>
         <source obj="ad_1" outlet="env"/>
         <dest obj="vca_1" inlet="v"/>
      </net>
      <net>
         <source obj="ad_2" outlet="env"/>
         <dest obj="vca_2" inlet="v"/>
      </net>
      <net>
         <source obj="vca_2" outlet="o"/>
         <dest obj="lp_9" inlet="pass"/>
      </net>
      <net>
         <source obj="sel_1" outlet="o2"/>
         <dest obj="ad_2" inlet="trig"/>
      </net>
      <net>
         <source obj="sel_1" outlet="o3"/>
         <dest obj="latch_1" inlet="trig"/>
      </net>
      <net>
         <source obj="latch_1" outlet="o"/>
         <dest obj="lp_9" inlet="pst"/>
      </net>
      <net>
         <source obj="sel_1" outlet="o4"/>
         <dest obj="ad_3" inlet="trig"/>
      </net>
      <net>
         <source obj="ad_3" outlet="env"/>
         <dest obj="*c_1" inlet="in"/>
      </net>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="Multi mode filter" inlet="pitch"/>
      </net>
      <net>
         <source obj="oversample filter_1" outlet="reject"/>
         <dest obj="+_1" inlet="in2"/>
      </net>
      <net>
         <source obj="+_1" outlet="out"/>
         <dest obj="Multi mode filter" inlet="in"/>
      </net>
      <net>
         <source obj="oversample filter_1" outlet="pass"/>
         <dest obj="vca_2" inlet="a"/>
      </net>
      <net>
         <source obj="Multi mode filter" outlet="out"/>
         <dest obj="lp_9" inlet="in"/>
         <dest obj="lp1_2" inlet="in"/>
      </net>
      <net>
         <source obj="lp_2" outlet="pass"/>
         <dest obj="filter_2" inlet="in"/>
      </net>
      <net>
         <source obj="sine_1" outlet="wave"/>
         <dest obj="*c_2" inlet="in"/>
      </net>
      <net>
         <source obj="sine_2" outlet="wave"/>
         <dest obj="lp_2" inlet="mode"/>
      </net>
      <net>
         <source obj="*c_2" outlet="out"/>
         <dest obj="lp_2" inlet="pitch"/>
      </net>
      <net>
         <source obj="reverb_1" outlet="l"/>
         <dest obj="mix_1" inlet="in1"/>
      </net>
      <net>
         <source obj="reverb_1" outlet="r"/>
         <dest obj="mix_2" inlet="in1"/>
      </net>
      <net>
         <source obj="filter_2" outlet="reject"/>
         <dest obj="filter_3" inlet="in"/>
      </net>
      <net>
         <source obj="filter_2" outlet="pass"/>
         <dest obj="filter_3" inlet="pass"/>
      </net>
      <net>
         <source obj="filter_3" outlet="reject"/>
         <dest obj="filter_4" inlet="in"/>
      </net>
      <net>
         <source obj="filter_3" outlet="pass"/>
         <dest obj="filter_4" inlet="pass"/>
      </net>
      <net>
         <source obj="filter_4" outlet="reject"/>
         <dest obj="filter_5" inlet="in"/>
      </net>
      <net>
         <source obj="filter_4" outlet="pass"/>
         <dest obj="filter_5" inlet="pass"/>
      </net>
      <net>
         <source obj="filter_5" outlet="pass"/>
         <dest obj="ensemble_1" inlet="r"/>
         <dest obj="ensemble_1" inlet="l"/>
      </net>
      <net>
         <source obj="ensemble_1" outlet="l"/>
         <dest obj="reverb_1" inlet="l"/>
      </net>
      <net>
         <source obj="ensemble_1" outlet="r"/>
         <dest obj="reverb_1" inlet="r"/>
      </net>
      <net>
         <source obj="lp1_2" outlet="out"/>
         <dest obj="mix_3" inlet="in1"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="StOutVol_1" inlet="left"/>
      </net>
      <net>
         <source obj="mix_2" outlet="out"/>
         <dest obj="StOutVol_1" inlet="right"/>
      </net>
      <net>
         <source obj="ad_4" outlet="env"/>
         <dest obj="*c_3" inlet="in"/>
      </net>
      <net>
         <source obj="sel_2" outlet="o1"/>
         <dest obj="ad_4" inlet="trig"/>
         <dest obj="ad_5" inlet="trig"/>
      </net>
      <net>
         <source obj="*c_3" outlet="out"/>
         <dest obj="lp1_2" inlet="cutoff"/>
      </net>
      <net>
         <source obj="*c_4" outlet="out"/>
         <dest obj="lp1_2" inlet="res"/>
      </net>
      <net>
         <source obj="ad_5" outlet="env"/>
         <dest obj="*c_4" inlet="in"/>
      </net>
      <net>
         <source obj="mix_3" outlet="out"/>
         <dest obj="mix_1" inlet="in2"/>
         <dest obj="mix_2" inlet="in2"/>
      </net>
      <net>
         <source obj="vca_3" outlet="o"/>
         <dest obj="mix_3" inlet="in3"/>
      </net>
      <net>
         <source obj="ad_6" outlet="env"/>
         <dest obj="vca_3" inlet="v"/>
      </net>
      <net>
         <source obj="filter_6" outlet="pass"/>
         <dest obj="vca_3" inlet="a"/>
      </net>
      <net>
         <source obj="sel_2" outlet="o3"/>
         <dest obj="ad_6" inlet="trig"/>
      </net>
      <net>
         <source obj="ad_7" outlet="env"/>
         <dest obj="vca_4" inlet="v"/>
      </net>
      <net>
         <source obj="filter_7" outlet="pass"/>
         <dest obj="vca_4" inlet="a"/>
      </net>
      <net>
         <source obj="sel_2" outlet="o2"/>
         <dest obj="ad_7" inlet="trig"/>
      </net>
      <net>
         <source obj="vca_4" outlet="o"/>
         <dest obj="mix_3" inlet="in2"/>
      </net>
      <net>
         <source obj="counter_2" outlet="o"/>
         <dest obj="sel_3" inlet="s"/>
      </net>
      <net>
         <source obj="sel_3" outlet="o"/>
         <dest obj="+_2" inlet="in1"/>
      </net>
      <net>
         <source obj="+_2" outlet="out"/>
         <dest obj="saw_1" inlet="pitch"/>
      </net>
      <net>
         <source obj="sel_4" outlet="o"/>
         <dest obj="+_2" inlet="in2"/>
      </net>
      <net>
         <source obj="counter_4" outlet="c"/>
         <dest obj="counter_5" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_5" outlet="o"/>
         <dest obj="sel_4" inlet="s"/>
      </net>
      <net>
         <source obj="counter_6" outlet="o"/>
         <dest obj="latch_1" inlet="i"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>0</x>
      <y>0</y>
      <width>1562</width>
      <height>1039</height>
   </windowPos>
</patch-1.0>