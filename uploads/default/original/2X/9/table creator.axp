<patch-1.0 appVersion="1.0.10">
   <patchobj type="patch/object" uuid="d2a74fe6-75ad-4e52-a0eb-a24c1cddd8c3" name="object_2" x="0" y="0">
      <params>
         <bin12 name="OSCILLATOR-OUT" value="0"/>
         <int32 name="wave" value="27"/>
         <frac32.s.map name="freq" value="-28.0"/>
         <bin12 name="CREATION-SETTINGS" value="0"/>
         <frac32.u.map name="phaseshift" value="20.0"/>
         <int32 name="decline" value="1"/>
         <int32 name="damp" value="8"/>
         <int32 name="harmonics" value="80"/>
         <int32 name="harmChange" value="4"/>
         <int32 name="start" value="0"/>
         <int32 name="offstart" value="53"/>
         <int32 name="skip1" value="39"/>
         <int32 name="skip2" value="9"/>
         <int32 name="skip3" value="25"/>
         <int32 name="skip4" value="17"/>
         <int32 name="range" value="163"/>
         <bin12 name="MAPCHANGE-settings-for-generating-different-waves-throughtout-the-table" value="0"/>
         <int32 name="changerate" value="2"/>
         <int32 name="startstep" value="24"/>
         <int32 name="Astep" value="6"/>
         <int32 name="Bstep" value="16"/>
         <int32 name="Cstep" value="5"/>
         <int32 name="Dstep" value="14"/>
         <int32 name="Estep" value="9"/>
         <int32 name="Fstep" value="54"/>
         <bin12 name="press-to-CREATE-or-INTERUPT-to-stop" value="0"/>
         <bool32.mom name="create" value="0"/>
         <bool32.mom name="interupt" value="0"/>
         <bin12 name="press-to-NORMALISE-or-SATURATE-to-max" value="0"/>
         <frac32.u.map name="gain" value="40.5"/>
         <frac32.u.map name="max" value="32.0"/>
         <bool32.mom name="Maximise" value="0"/>
         <bool32.mom name="sat" value="0"/>
         <bin12 name="SAVEyourTABLEbeforeSHUTTINGdown!" value="0"/>
         <bool32.mom name="SAVE2FILE" value="0"/>
         <bool32.mom name="LOADFILE" value="0"/>
      </params>
      <attribs>
         <combo attributeName="size" selection="2097152"/>
      </attribs>
      <object id="patch/object" uuid="d2a74fe6-75ad-4e52-a0eb-a24c1cddd8c3">
         <sDescription>description</sDescription>
         <author>Remco van der Most</author>
         <license>BSD</license>
         <inlets>
            <charptr32 name="filename"/>
         </inlets>
         <outlets>
            <frac32buffer name="out"/>
            <int32 name="countCreate"/>
            <int32 name="countSaturate"/>
            <int32 name="countMaximise"/>
         </outlets>
         <displays/>
         <params>
            <bin12 name="OSCILLATOR-OUT" description="nothing to do here but read what the upfollowing controls do.."/>
            <int32 name="wave" description="select one of the 1024 waves after you&apos;ve created a table">
               <MinValue i="0"/>
               <MaxValue i="1024"/>
            </int32>
            <frac32.s.map.pitch name="freq" description="sets the rootnote to play the waveform"/>
            <bin12 name="CREATION-SETTINGS" description="nothing to do here but read what the upfollowing controls do.."/>
            <frac32.u.map name="phaseshift" description="phaseshifts the generated harmonics according to harmonic number"/>
            <int32 name="decline" description="sets the volume decline rate for each higher harmonic">
               <MinValue i="1"/>
               <MaxValue i="32"/>
            </int32>
            <int32 name="damp" description="sets the volume decline rate for each next generated harmonic">
               <MinValue i="0"/>
               <MaxValue i="16"/>
            </int32>
            <int32 name="harmonics" description="sets the maximum amount of harmonics being created per waveform">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="harmChange" description="sets the change-size of the amount of harmonics being created during the creation process. Rate is controlled by changerate">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="start" description="sets the number of the first harmonic being created">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="offstart" description="offsets all the other harmonics from the first harmonic with a fixed amount">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="skip1" description="sets the first harmonic interval of 4 intervals">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="skip2" description="sets the second harmonic interval of 4 intervals">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="skip3" description="sets the third  harmonic interval of 4 intervals">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="skip4" description="sets the fourth harmonic interval of 4 intervals">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="range" description="sets the maximum harmonic number contained in the generated spectrum">
               <MinValue i="1"/>
               <MaxValue i="256"/>
            </int32>
            <bin12 name="MAPCHANGE-settings-for-generating-different-waves-throughtout-the-table"/>
            <int32 name="changerate" description="sets the changerate. After .. amount of steps, the skip/start positions, amount of harmonics, etc, will be changed to different settings. Allowing lots of different wavetable combinations">
               <MinValue i="0"/>
               <MaxValue i="10"/>
            </int32>
            <int32 name="startstep" description="sets the start-offset change, controlled by the changerate">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="Astep" description="uses the 1-bit of the counter to offset the first skip with the amount set by this control">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="Bstep" description="uses the 2-bit of the counter to offset the second skip with the amount set by this control">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="Cstep" description="uses the 3-bit of the counter to offset the third skip with the amount set by this control">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="Dstep" description="uses the 4-bit of the counter to offset the fourth skip with the amount set by this control">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="Estep" description="uses the 5-bit of the counter to offset the offset of all harmonics after the first harmonic with the amount set by this control">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="Fstep" description="uses changerate to offset all skip values">
               <MinValue i="0"/>
               <MaxValue i="128"/>
            </int32>
            <bin12 name="press-to-CREATE-or-INTERUPT-to-stop" description="nothing to do here but read what the upfollowing controls do.."/>
            <bool32.mom name="create" description="press to create a new wavetable (see output to check how many waveforms are produced at the moment)"/>
            <bool32.mom name="interupt" description="press to interupt the creation process"/>
            <bin12 name="press-to-NORMALISE-or-SATURATE-to-max" description="nothing to do here but read what the upfollowing controls do.."/>
            <frac32.u.map name="gain" description="sets the gain for the saturation process"/>
            <frac32.u.map name="max" description="sets the maximum value for the wave after saturation or maximise process"/>
            <bool32.mom name="Maximise" description="press to perform maximising process (normalises waveforms to max value)"/>
            <bool32.mom name="sat" description="press to perform saturation process (fatbasterd algorythm)"/>
            <bin12 name="SAVEyourTABLEbeforeSHUTTINGdown!" description="nothing to do here but read what the upfollowing controls do.."/>
            <bool32.mom name="SAVE2FILE" description="saves table to the file, named with the filename inlet"/>
            <bool32.mom name="LOADFILE" description="loads table from the file, named with the filename inlet"/>
         </params>
         <attribs>
            <combo name="size">
               <MenuEntries>
                  <string>2</string>
                  <string>4</string>
                  <string>8</string>
                  <string>16</string>
                  <string>32</string>
                  <string>64</string>
                  <string>128</string>
                  <string>256</string>
                  <string>512</string>
                  <string>1024</string>
                  <string>2048</string>
                  <string>4096</string>
                  <string>8192</string>
                  <string>16384</string>
                  <string>32768</string>
                  <string>65536</string>
                  <string>131072</string>
                  <string>262144</string>
                  <string>524288</string>
                  <string>1048576</string>
                  <string>2097152</string>
               </MenuEntries>
               <CEntries>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
                  <string>15</string>
                  <string>16</string>
                  <string>17</string>
                  <string>18</string>
                  <string>19</string>
                  <string>20</string>
                  <string>21</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <depends>
            <depend>fatfs</depend>
         </depends>
         <code.declaration><![CDATA[static const uint32_t LENGTHPOW = attr_size;
static const uint32_t LENGTH = 1<<attr_size;
static const uint32_t LENGTHMASK = (1<<attr_size)-1;
static const uint32_t BITS = 32;
static const uint32_t GAIN = 0;
int32_t *array;

uint32_t phase;
int32_t freq;
int32_t sine;
int ctrig;
int32_t i;
int32_t j;
int32_t k;
int32_t count;
int create;
int SAT;
int strig;
int32_t caunt;
int32_t G;
int32_t temp;
int Maximise;
int32_t max;
float32_t ratio;
float32_t MAX;
float32_t Max;
int mtrig;
int32_t ciunt;
int32_t ceunt;
int changerate;
int ntrig;
int ltrig;]]></code.declaration>
         <code.init><![CDATA[static int32_t _array[attr_poly][LENGTH] __attribute__ ((section (".sdram")));
array = &_array[parent->polyIndex][0];
{ 
  int i;
  for(i=0;i<LENGTH;i++) array[i]=0;
}
create=0;
SAT=0;
Maximise=0;
ntrig=0;
ltrig=0;]]></code.init>
         <code.krate><![CDATA[if(param_create>0){create=1;}
if(param_interupt){create=0;}
if(param_sat>0){SAT=1;}
if(param_Maximise>0){Maximise=1;}
changerate=((1<<param_changerate)-1);
int32_t harmonics=param_harmonics;
if((create>0)&&!ctrig){
count+=1;
int32_t A=(count&1)*param_Astep;
int32_t B=(count&3)*param_Bstep;
int32_t C=(count&7)*param_Cstep;
int32_t D=(count&15)*param_Dstep;
int32_t E=(count&31)*param_Estep;
int32_t F=(count>>(10-param_changerate))*param_Fstep;
harmonics=param_harmonics+(count>>(10-param_changerate))*param_harmChange;
harmonics=harmonics-(harmonics/(param_harmonics))*param_harmonics;
harmonics=harmonics>0?harmonics:1;
MAX=param_max;

int32_t start=param_start+(count>>(10-param_changerate))*param_startstep;
start=start-(start/param_harmonics)*param_harmonics;
start=start>=param_harmonics?param_harmonics:start;

int32_t skip1=param_skip1+A+F;
int32_t skip2=skip1+A+param_skip2+B+F;
int32_t skip3=(skip2+B)*2+param_skip3+F;
int32_t skip4=(skip3+C)*2+param_skip4+D+F;
int32_t skip5=(skip4+D)*2;

for(i=0;i<1024;i++){
array[i+count*1024]=0;}
for(i=0;i<1024;i++){
for(j=start;j<(start+param_harmonics);j++){
k=(j&1)*skip1+((j>>1)&1)*skip2+((j>>2)&1)*skip3+((j>>3)&1)*skip4+(j>>4)*skip5;
if(j>start){k+=param_offstart+E;}
k=k-(k/param_range)*param_range+1;
SINE2TINTERP((i<<22)*k+((param_phaseshift+(E<<30))*(k-1)<<4),sine);
array[(i+(count<<10))&LENGTHMASK]+=(sine>>5)/(param_decline*k*(j/(param_damp+1)));}}
if(count>(1<<10)){
ctrig=1;create=0;}
}
else if(create==0){ctrig=0;count=-1;}



if((SAT>0)&&!strig){
caunt+=1;
for(G=0;G<1024;G++){
temp=array[(G+(caunt<<10))&LENGTHMASK];
int dir=temp>0?1:-1;
int32_t in=temp>0?temp:-temp;
int32_t gian=___SMMUL(param_gain<<3,param_gain<<2);
float32_t gain=___SMMUL((gian+(1<<17))<<2,in<<3);
gain=1+gain/(1<<19);
array[(G+(caunt<<10))&LENGTHMASK]=((param_max)-((param_max)-in)/gain)*dir;
}
if(caunt>(1<<10)){
strig=1;SAT=0;}
}
else if(SAT==0){strig=0;caunt=-1;}

if((Maximise>0)&&!mtrig){
ciunt+=1;
max=0;
for(G=0;G<1024;G++){
temp=array[(G+(ciunt<<10))&LENGTHMASK];
temp=temp>0?temp:-temp;
max=temp>max?temp:max;
Max=G>=1023?max:Max;}
ratio=(float32_t)((float32_t)(MAX))/((float32_t)(Max));
for(G=0;G<1024;G++){
array[(G+(ciunt<<10))&LENGTHMASK]=((float32_t)(array[(G+(ciunt<<10))&LENGTHMASK]))*ratio;
}
if(ciunt>(1<<10)){
mtrig=1;Maximise=0;}
}
else if(Maximise==0){mtrig=0;ciunt=-1;}


MTOFEXTENDED(param_freq,freq)
int32_t wave=param_wave*1024;
outlet_countCreate=count;
outlet_countSaturate=caunt;
outlet_countMaximise=ciunt;


  if ((param_SAVE2FILE>0) && !ntrig) {
    ntrig=1;
    FIL FileObject;
    FRESULT err;
    UINT bytes_written;
    err = f_open(&FileObject, inlet_filename, FA_WRITE | FA_CREATE_ALWAYS);
    if (err != FR_OK) {report_fatfs_error(err,inlet_filename); return;}
    int rem_sz = sizeof(*array)*LENGTH;
    int offset = 0;
    while (rem_sz>0) {
      if (rem_sz>sizeof(fbuff)) {
        memcpy((char *)fbuff,(char *)(&array[0]) + offset, sizeof(fbuff));
        err = f_write(&FileObject, fbuff, sizeof(fbuff),&bytes_written);
        rem_sz -= sizeof(fbuff);
        offset += sizeof(fbuff);
      } else {
        memcpy((char *)fbuff,(char *)(&array[0]) + offset, rem_sz);
        err = f_write(&FileObject, fbuff, rem_sz, &bytes_written);
        rem_sz = 0;
      }
    }    if (err != FR_OK) report_fatfs_error(err,inlet_filename);
    err = f_close(&FileObject);
    if (err != FR_OK) report_fatfs_error(err,inlet_filename);
  }
  else if (!(param_SAVE2FILE>0)) ntrig=0;


    if ((param_LOADFILE>0) && !ltrig) {
    ltrig=1;
    FIL FileObject;
    FRESULT err;
    UINT bytes_read;
    err = f_open(&FileObject, inlet_filename, FA_READ | FA_OPEN_EXISTING);
    if (err != FR_OK) { report_fatfs_error(err,inlet_filename); return;}
    int rem_sz = sizeof(*array)*LENGTH;
    int offset = 0;
    while (rem_sz>0) {
      if (rem_sz>sizeof(fbuff)) {
        err = f_read(&FileObject, fbuff, sizeof(fbuff),&bytes_read);
        if (bytes_read == 0) break;
        memcpy((char *)(&array[0]) + offset,(char *)fbuff,bytes_read);
        rem_sz -= bytes_read;
        offset += bytes_read;
      } else {
        err = f_read(&FileObject, fbuff, rem_sz,&bytes_read);
        memcpy((char *)(&array[0]) + offset,(char *)fbuff,bytes_read);
        rem_sz = 0;
      }
    }    if (err != FR_OK) { report_fatfs_error(err,inlet_filename); return;};
    err = f_close(&FileObject);
    if (err != FR_OK) { report_fatfs_error(err,inlet_filename); return;};
  }
  else if (!(param_LOADFILE>0)) ltrig=0;]]></code.krate>
         <code.srate><![CDATA[if(create==0)
{phase+=freq;
int32_t mix;
mix=0;
mix=array[(phase>>22)+wave]>>2;
mix+=array[(((phase-freq)&((1<<32)-1))>>22)+wave]>>2;
mix+=array[(((phase-(freq<<1))&((1<<32)-1))>>22)+wave]>>2;
mix+=array[(((phase-freq*3)&((1<<32)-1))>>22)+wave]>>2;
outlet_out=mix;}
else{outlet_out=0;}]]></code.srate>
      </object>
   </patchobj>
   <obj type="ctrl/i" uuid="a3786816db6ea5bc6ac4193a5cccdb2c83b83496" name="i_2" x="574" y="0">
      <params>
         <int32 name="value" value="3"/>
      </params>
      <attribs/>
   </obj>
   <obj type="string/indexed" uuid="a28740deef67c39ffc65bd0f341a47c9b196f46" name="indexed_1" x="630" y="0">
      <params/>
      <attribs>
         <table attributeName="prefix" table="0:/WAP"/>
         <table attributeName="suffix" table=".tab"/>
      </attribs>
   </obj>
   <obj type="math/sat" uuid="a64166c1389cd0d5c62a8d3cd5963613be84e9e8" name="sat_1" x="924" y="0">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_1" x="980" y="0">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_4" x="1022" y="0">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_5" x="1064" y="0">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_1" x="1106" y="0">
      <params>
         <frac32.u.map name="amp" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/scope 128 b trig" uuid="11747dcd1dc9afe4919f537c861fb18b80b4e4e" name="scope_2" x="1204" y="0">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="1344" y="0">
      <params/>
      <attribs/>
   </obj>
   <obj type="sss/patt/rndEuclidPatt" uuid="1d23f354-0b44-47ed-a399-fbc78e891f4a" name="rndEuclidPatt_1" x="798" y="252">
      <params>
         <bool32.mom name="rand" value="0"/>
         <frac32.s.map name="width" value="64.0"/>
         <frac32.u.map name="repeat1" value="14.5"/>
         <frac32.s.map name="Rwidth1" value="53.0"/>
         <frac32.u.map name="repeat2" value="22.0"/>
         <frac32.s.map name="Rwidth2" value="41.0"/>
         <frac32.u.map name="repeat3" value="18.5"/>
         <frac32.s.map name="Rwidth3" value="43.0"/>
         <frac32.u.map name="repeat4" value="20.0"/>
         <frac32.s.map name="Rwidth4" value="51.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/lfo/qtsLFO" uuid="02ac1ed8-133a-487e-be4d-c409d00fd989" name="qtsLFO_1" x="924" y="252">
      <params>
         <int32 name="m1" value="1"/>
         <int32 name="d1" value="1"/>
         <int32 name="o1" value="-4"/>
         <frac32.s.map name="p1" value="10.0"/>
         <int32 name="m2" value="1"/>
         <int32 name="d2" value="1"/>
         <int32 name="o2" value="-4"/>
         <frac32.s.map name="p2" value="0.0"/>
         <int32 name="m3" value="3"/>
         <int32 name="d3" value="1"/>
         <int32 name="o3" value="0"/>
         <frac32.s.map name="p3" value="17.0"/>
         <int32 name="m4" value="1"/>
         <int32 name="d4" value="1"/>
         <int32 name="o4" value="0"/>
         <frac32.s.map name="p4" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_1" x="1008" y="252">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/&gt;c" uuid="99f2934d97d62b715a829979ef6c8abef35dcdb2" name="&gt;c_1" x="1148" y="252">
      <params>
         <frac32.u.map name="c" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_1" x="1204" y="252">
      <params>
         <frac32.s.map name="a" value="-60.0"/>
         <frac32.s.map name="d" value="28.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/math/expCurveK" uuid="bde45a1d-540b-4c33-b7b5-d733d42a1772" name="expCurveK_1" x="1302" y="252">
      <params>
         <frac32.s.map name="exp" value="29.0"/>
         <int32 name="stack" value="6"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/math/expCurveK" uuid="bde45a1d-540b-4c33-b7b5-d733d42a1772" name="expCurveK_2" x="1414" y="252">
      <params>
         <frac32.s.map name="exp" value="40.0"/>
         <int32 name="stack" value="3"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/square" uuid="de6909eb64db13af5b43f979a4c130024b3a4793" name="square_2" x="546" y="294">
      <params>
         <frac32.s.map name="pitch" value="-13.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_1" x="644" y="294">
      <params>
         <int32 name="maximum" value="64"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_2" x="1008" y="294">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/i" uuid="a3786816db6ea5bc6ac4193a5cccdb2c83b83496" name="i_6" x="728" y="308">
      <params>
         <int32 name="value" value="64"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_2" x="1050" y="350">
      <params>
         <int32 name="maximum" value="64"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/i" uuid="a3786816db6ea5bc6ac4193a5cccdb2c83b83496" name="i_7" x="1134" y="364">
      <params>
         <int32 name="value" value="64"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/patt/rndEuclidPatt" uuid="1d23f354-0b44-47ed-a399-fbc78e891f4a" name="rndEuclidPatt_2" x="1036" y="434">
      <params>
         <bool32.mom name="rand" value="0"/>
         <frac32.s.map name="width" value="11.0"/>
         <frac32.u.map name="repeat1" value="12.5"/>
         <frac32.s.map name="Rwidth1" value="11.0"/>
         <frac32.u.map name="repeat2" value="26.0"/>
         <frac32.s.map name="Rwidth2" value="9.0"/>
         <frac32.u.map name="repeat3" value="12.0"/>
         <frac32.s.map name="Rwidth3" value="3.0"/>
         <frac32.u.map name="repeat4" value="31.0"/>
         <frac32.s.map name="Rwidth4" value="6.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 2 g" uuid="a68d65dda222bc916b36b283cc06d2edd719bf3b" name="mix_1" x="1162" y="434">
      <params>
         <frac32.u.map name="gain1" value="2.0"/>
         <frac32.u.map name="gain2" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/harmony/scalar" uuid="9a01353c-5476-4d0b-8fe5-9f24abc3d048" name="scalar_1" x="1302" y="434">
      <params>
         <bool32.tgl name="Bend" value="0"/>
         <frac32.s.map name="Glide" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/osc/quadTable" uuid="c37c6426-ccde-48ea-854e-ff0326b99288" name="quadTable_1" x="1470" y="434">
      <params>
         <frac32.s.map name="pitch" value="-12.0"/>
         <frac32.s.map name="FMW" value="0.0"/>
         <frac32.s.map name="PMW" value="0.0"/>
         <frac32.s.map name="detune" value="57.0"/>
         <frac32.u.map name="mix1" value="0.0"/>
         <frac32.u.map name="mix2" value="0.0"/>
         <int32 name="preset1" value="253"/>
         <int32 name="preset2" value="149"/>
         <int32 name="preset3" value="401"/>
         <int32 name="preset4" value="703"/>
         <frac32.u.map name="mixSine" value="0.0"/>
         <int32 name="octSine" value="0"/>
         <int32 name="SoftS" value="0"/>
         <bool32.tgl name="AM" value="0"/>
         <bool32.tgl name="sync" value="0"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="object_2"/>
      </attribs>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="1596" y="434">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_2" x="1652" y="434">
      <params>
         <frac32.u.map name="amp" value="8.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/scope 128 b trig" uuid="11747dcd1dc9afe4919f537c861fb18b80b4e4e" name="scope_3" x="1750" y="434">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_2" x="1890" y="434">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="object_2" outlet="out"/>
         <dest obj="sat_1" inlet="in"/>
      </net>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="scope_2" inlet="in"/>
         <dest obj="out_1" inlet="left"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="indexed_1" outlet="out"/>
         <dest obj="object_2" inlet="filename"/>
      </net>
      <net>
         <source obj="i_2" outlet="out"/>
         <dest obj="indexed_1" inlet="index"/>
      </net>
      <net>
         <source obj="object_2" outlet="countCreate"/>
         <dest obj="i_1" inlet="in"/>
      </net>
      <net>
         <source obj="object_2" outlet="countSaturate"/>
         <dest obj="i_4" inlet="in"/>
      </net>
      <net>
         <source obj="object_2" outlet="countMaximise"/>
         <dest obj="i_5" inlet="in"/>
      </net>
      <net>
         <source obj="sat_1" outlet="out"/>
         <dest obj="*c_1" inlet="in"/>
      </net>
      <net>
         <source obj="*c_2" outlet="out"/>
         <dest obj="scope_3" inlet="in"/>
         <dest obj="out_2" inlet="left"/>
         <dest obj="out_2" inlet="right"/>
      </net>
      <net>
         <source obj="square_2" outlet="wave"/>
         <dest obj="qtsLFO_1" inlet="HS"/>
         <dest obj="counter_1" inlet="trig"/>
      </net>
      <net>
         <source obj="qtsLFO_1" outlet="w1"/>
         <dest obj="bipolar2unipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="qtsLFO_1" outlet="w2"/>
         <dest obj="bipolar2unipolar_2" inlet="i"/>
      </net>
      <net>
         <source obj="bipolar2unipolar_1" outlet="o"/>
         <dest obj="quadTable_1" inlet="mix1"/>
      </net>
      <net>
         <source obj="bipolar2unipolar_2" outlet="o"/>
         <dest obj="quadTable_1" inlet="mix2"/>
      </net>
      <net>
         <source obj="counter_1" outlet="o"/>
         <dest obj="rndEuclidPatt_1" inlet="count"/>
      </net>
      <net>
         <source obj="i_6" outlet="out"/>
         <dest obj="rndEuclidPatt_1" inlet="length"/>
      </net>
      <net>
         <source obj="rndEuclidPatt_1" outlet="rand"/>
         <dest obj="mix_1" inlet="in1"/>
         <dest obj="quadTable_1" inlet="preset1"/>
         <dest obj="quadTable_1" inlet="preset2"/>
         <dest obj="quadTable_1" inlet="preset3"/>
         <dest obj="quadTable_1" inlet="preset4"/>
      </net>
      <net>
         <source obj="ad_1" outlet="env"/>
         <dest obj="expCurveK_1" inlet="in"/>
         <dest obj="expCurveK_2" inlet="in"/>
      </net>
      <net>
         <source obj="qtsLFO_1" outlet="w3"/>
         <dest obj="&gt;c_1" inlet="in"/>
      </net>
      <net>
         <source obj="&gt;c_1" outlet="out"/>
         <dest obj="ad_1" inlet="trig"/>
         <dest obj="counter_2" inlet="trig"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="*c_2" inlet="in"/>
      </net>
      <net>
         <source obj="quadTable_1" outlet="wave"/>
         <dest obj="vca_1" inlet="a"/>
      </net>
      <net>
         <source obj="expCurveK_1" outlet="out"/>
         <dest obj="vca_1" inlet="v"/>
      </net>
      <net>
         <source obj="expCurveK_2" outlet="out"/>
         <dest obj="quadTable_1" inlet="mixSine"/>
      </net>
      <net>
         <source obj="rndEuclidPatt_2" outlet="rand"/>
         <dest obj="mix_1" inlet="in2"/>
      </net>
      <net>
         <source obj="scalar_1" outlet="Scaled"/>
         <dest obj="quadTable_1" inlet="pitch"/>
      </net>
      <net>
         <source obj="counter_2" outlet="o"/>
         <dest obj="rndEuclidPatt_2" inlet="count"/>
      </net>
      <net>
         <source obj="i_7" outlet="out"/>
         <dest obj="rndEuclidPatt_2" inlet="length"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="scalar_1" inlet="note"/>
      </net>
      <net>
         <source obj="counter_1" outlet="c"/>
         <dest obj="rndEuclidPatt_1" inlet="rnd"/>
      </net>
      <net>
         <source obj="counter_2" outlet="c"/>
         <dest obj="rndEuclidPatt_2" inlet="rnd"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>0</y>
      <width>1696</width>
      <height>1026</height>
   </windowPos>
</patch-1.0>