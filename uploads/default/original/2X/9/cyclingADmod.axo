<objdefs appVersion="1.0.12">
   <obj.normal id="cyclingADmod" uuid="c5410b31-8ab9-408a-a717-1c8013b896b9">
      <sDescription>cycling a/d env with modulation</sDescription>
      <author>Hyena</author>
      <license>GPL</license>
      <helpPatch>ad_mod.axh</helpPatch>
      <inlets>
         <bool32.rising name="reset" description="trigger"/>
         <frac32.bipolar name="a" description="attack time modulation"/>
         <frac32.bipolar name="d" description="decay time modulation"/>
      </inlets>
      <outlets>
         <frac32.positive name="env" description="envelope output"/>
         <bool32.pulse name="end" description="end of cycle"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.klineartime.exp name="a"/>
         <frac32.s.map.kdecaytime.exp name="d"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int8_t stage;
int nreset;
int32_t val;
]]></code.declaration>
      <code.init><![CDATA[nreset = 0;
val = 0;
stage = 1;]]></code.init>
      <code.krate><![CDATA[if ((inlet_reset>0) && !nreset) {
   nreset = 1;
   stage = 1;
   val = 0;
} else if (!(inlet_reset>0)) {
   nreset = 0;
}
outlet_end = 0;
if (stage == 0){
   val = ___SMMUL(val,param_d+inlet_d)<<1;
   if (val<=0) {
   	stage = 1;
   	val = 0;
   	outlet_end = 1;
   }
} else {
   int32_t t;
   MTOF(-param_a+inlet_a,t);
   val = val + (t>>3);
   if (val<0) {
      val =0x7FFFFFFF;
      stage = 0;
   }
}
outlet_env = val>>4;]]></code.krate>
   </obj.normal>
</objdefs>