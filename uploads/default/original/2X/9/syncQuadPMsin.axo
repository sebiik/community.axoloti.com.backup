<objdefs appVersion="1.0.12">
   <obj.normal id="syncQuadPMsin" uuid="41794b77-81f4-4e65-b37e-5b1144b21ca6">
      <sDescription>sine wave oscillator</sDescription>
      <author>SmashedTransistors</author>
      <license>LGPL</license>
      <inlets>
         <frac32.bipolar name="pitch" description="pitch"/>
         <frac32buffer name="sync" description=""/>
         <frac32buffer name="pmSin" description="phase"/>
         <frac32buffer name="pmCos"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="sin" description="sine wave"/>
         <frac32buffer.bipolar name="cos"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch" noLabel="true"/>
         <bool32.tgl name="syncMode"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[float _sync,p,dp;
int32_t sin1(float x){
  int32_t r;
  SINE2TINTERP(arm::float_to_q(x,26)*64,r)
  return r >> 4;
}]]></code.declaration>
      <code.init><![CDATA[p = 0; _sync = 0;]]></code.init>
      <code.krate><![CDATA[uint32_t idp; 
MTOFEXTENDED(inlet_pitch + param_pitch, idp);
dp = arm::q_to_float(idp, 31)/2;]]></code.krate>
      <code.srate><![CDATA[float sync = arm::q_to_float(inlet_sync,27);
if(_sync < 0 && sync > 0){
  if(param_syncMode)
    p = dp * sync / (sync - _sync);
  else
    p = 0;
} else {
  p += dp;
  if(p > 1) p -= 1;
}
float pmSin = p + arm::q_to_float(inlet_pmSin, 25);
float pmCos = p + arm::q_to_float(inlet_pmCos, 25);
outlet_sin = sin1(pmSin        );
outlet_cos = sin1(pmCos + 0.25f);
_sync = sync;]]></code.srate>
   </obj.normal>
</objdefs>