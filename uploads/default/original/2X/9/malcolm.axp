<patch-1.0 appVersion="1.0.12">
   <patchobj type="patch/object" uuid="f5713140-1ba3-4093-9d33-efa9d210b165" name="thru_1" x="140" y="56">
      <params/>
      <attribs>
         <combo attributeName="device" selection="din"/>
         <spinner attributeName="channel" value="11"/>
         <spinner attributeName="newchannel" value="15"/>
      </attribs>
      <object id="patch/object" uuid="f5713140-1ba3-4093-9d33-efa9d210b165">
         <sDescription>single channel midi thru module. note and cc only -</sDescription>
         <author>Remco van der Most</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <combo name="device">
               <MenuEntries>
                  <string>din</string>
                  <string>usb host port 1</string>
                  <string>usb host port 2</string>
                  <string>usb host port 3</string>
                  <string>usb host port 4</string>
                  <string>internal port 1</string>
                  <string>internal port 2</string>
                  <string>usb device port 1</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_DIN, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 2</string>
                  <string>MIDI_DEVICE_USB_HOST, 3</string>
                  <string>MIDI_DEVICE_USB_HOST, 4</string>
                  <string>MIDI_DEVICE_INTERNAL, 1</string>
                  <string>MIDI_DEVICE_INTERNAL, 2</string>
                  <string>MIDI_DEVICE_USB_DEVICE, 1</string>
               </CEntries>
            </combo>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="newchannel" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.midihandler><![CDATA[if (((status != MIDI_NOTE_ON + (attr_channel-1))&&(status != MIDI_NOTE_OFF + (attr_channel-1))&&(status != MIDI_CONTROL_CHANGE + (attr_channel-1)))&&((status != MIDI_NOTE_ON + (attr_newchannel-1))&&(status != MIDI_NOTE_OFF + (attr_newchannel-1)))) {
MidiSend3((midi_device_t) attr_device, status,data1,data2);
}]]></code.midihandler>
      </object>
   </patchobj>
   <comment type="patch/comment" x="630" y="56" text="reset pulse"/>
   <comment type="patch/comment" x="770" y="56" text="sync pulse"/>
   <comment type="patch/comment" x="1134" y="56" text="play/stop"/>
   <comment type="patch/comment" x="1386" y="56" text="second play button logic"/>
   <patchobj type="patch/object" uuid="fdad31f9-0768-4420-bb66-f45392b529d7" name="note_8" x="630" y="70">
      <params/>
      <attribs>
         <spinner attributeName="note" value="1"/>
         <spinner attributeName="channel" value="15"/>
      </attribs>
      <object id="patch/object" uuid="fdad31f9-0768-4420-bb66-f45392b529d7">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="gate" description="key pressed?"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="note" MinValue="0" MaxValue="127" DefaultValue="64"/>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t _gate;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;]]></code.init>
         <code.krate><![CDATA[outlet_gate= _gate<<27;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == attr_note) {
   _gate = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == attr_note) {
    _gate = 0;
  }
} else if ((status == (attr_channel-1) + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="60e016db-e223-4ba5-9cfb-50c0c63eb1d6" name="note_9" x="770" y="70">
      <params/>
      <attribs>
         <spinner attributeName="note" value="0"/>
         <spinner attributeName="channel" value="15"/>
      </attribs>
      <object id="patch/object" uuid="60e016db-e223-4ba5-9cfb-50c0c63eb1d6">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="gate" description="key pressed?"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="note" MinValue="0" MaxValue="127" DefaultValue="64"/>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t _gate;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;]]></code.init>
         <code.krate><![CDATA[outlet_gate= _gate<<27;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == attr_note) {
   _gate = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == attr_note) {
    _gate = 0;
  }
} else if ((status == (attr_channel-1) + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="drj/seq/clk_mul" uuid="1413af5343f97123abeeb627811120af4b3a4793" name="clk_mul_5" x="882" y="70">
      <params>
         <int32 name="clockmul" value="1"/>
      </params>
      <attribs/>
   </obj>
   <obj type="drj/seq/clk_mul" uuid="1413af5343f97123abeeb627811120af4b3a4793" name="clk_mul_4" x="994" y="70">
      <params>
         <int32 name="clockmul" value="2"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="fdfaa459-0189-4601-aa16-915be67fdfeb" name="note_10" x="1134" y="70">
      <params/>
      <attribs>
         <spinner attributeName="note" value="2"/>
         <spinner attributeName="channel" value="15"/>
      </attribs>
      <object id="patch/object" uuid="fdfaa459-0189-4601-aa16-915be67fdfeb">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="gate" description="key pressed?"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="note" MinValue="0" MaxValue="127" DefaultValue="64"/>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t _gate;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;]]></code.init>
         <code.krate><![CDATA[outlet_gate= _gate<<27;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == attr_note) {
   _gate = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == attr_note) {
    _gate = 0;
  }
} else if ((status == (attr_channel-1) + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_7" x="1246" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/flipflop toggle" uuid="195e489e5fc3d275944b0de56c7a91c8641ea22a" name="flipflop_1" x="1316" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_1" x="1442" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_2" x="1526" y="70">
      <params>
         <int32 name="maximum" value="1"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/flipflop toggle" uuid="195e489e5fc3d275944b0de56c7a91c8641ea22a" name="flipflop_2" x="1624" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_3" x="1750" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_5" x="1834" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_1" x="1918" y="98">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="672" y="182" text="note on playback needs double time speed and twice the count"/>
   <comment type="patch/comment" x="1540" y="182" text="note on record needs normal speed normal count"/>
   <comment type="patch/comment" x="840" y="196" text="play - also resets other counters"/>
   <comment type="patch/comment" x="1680" y="196" text="record"/>
   <comment type="patch/comment" x="2072" y="196" text="counter for sample record"/>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_1" x="840" y="210">
      <params>
         <int32 name="maximum" value="128"/>
      </params>
      <attribs/>
   </obj>
   <obj type="djrm/logic/counter2_init_start" uuid="d5936f238ab92e53ac93d5927c3b43ceef998dc1" name="counter2_init_start_1" x="1526" y="210">
      <params>
         <int32 name="maximum" value="1"/>
         <int32 name="init" value="1"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_4" x="1680" y="210">
      <params>
         <int32 name="maximum" value="64"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_3" x="2072" y="210">
      <params>
         <int32 name="maximum" value="64"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="afa02137-c079-427d-b279-0e2aef165ccd" name="note_1" x="2394" y="252">
      <params/>
      <attribs>
         <spinner attributeName="note" value="0"/>
         <spinner attributeName="channel" value="5"/>
      </attribs>
      <object id="patch/object" uuid="afa02137-c079-427d-b279-0e2aef165ccd">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="gate" description="key pressed?"/>
            <bool32 name="gate2"/>
            <bool32 name="gate3"/>
            <bool32 name="gate4"/>
            <bool32 name="gate5"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="note" MinValue="0" MaxValue="127" DefaultValue="64"/>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t _gate;
uint8_t _gate2;
uint8_t _gate3;
uint8_t _gate4;
uint8_t _gate5;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;]]></code.init>
         <code.krate><![CDATA[outlet_gate= _gate<<27;
outlet_gate2= _gate2<<27;
outlet_gate3= _gate3<<27;
outlet_gate4= _gate4<<27;
outlet_gate5= _gate5<<27;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == attr_note) {
   _gate = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == attr_note) {
    _gate = 0;
  }}

if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == (attr_note+1)) {
   _gate2 = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == (attr_note+1)) {
    _gate2 = 0;
  }}

if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == (attr_note+2)) {
   _gate3 = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == (attr_note+2)) {
    _gate3 = 0;
  }}

if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == (attr_note+3)) {
   _gate4 = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == (attr_note+3)) {
    _gate4 = 0;
  }}

if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == (attr_note+4)) {
   _gate5 = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == (attr_note+4)) {
    _gate5 = 0;
  }}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="table/alloc 16b sdram load" uuid="e6b85dad3ab43565cda93ea4c43c73b668b1cd43" name="temp" x="630" y="294">
      <params/>
      <attribs>
         <combo attributeName="size" selection="2048"/>
         <file attributeName="filename" file="/preset"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="9ead1bd5-802e-4ac4-acdf-9a9bfbda15cc" name="cc_3" x="1008" y="322">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="9ead1bd5-802e-4ac4-acdf-9a9bfbda15cc">
         <sDescription>Receives Midi Continuous Controller messages from any CC number and channel.</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <int32 name="program"/>
            <bool32 name="recbutton"/>
            <bool32 name="overdub"/>
            <bool32 name="shift"/>
            <int32 name="light"/>
            <bool32 name="cleargate"/>
            <bool32 name="toggleon"/>
            <int32 name="matrix"/>
            <int32 name="offsetshift"/>
            <bool32 name="lightgate"/>
            <bool32 name="lightgate2"/>
            <bool32 name="lightgate3"/>
            <bool32 name="playstop"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int program;
int recbutton;
int overdub;
int shift;
int light;
int cleargate;
int toggleon;
int matrix;
int offsetshift;
int lightgate;
int lightgate2;
int lightgate3;
int prev;
int note;
int playstop;]]></code.declaration>
         <code.init><![CDATA[light=3;
toggleon=1;
lightgate=1;]]></code.init>
         <code.krate><![CDATA[outlet_program=program;
outlet_recbutton=recbutton;
outlet_light=light;
outlet_overdub=overdub;
outlet_shift=shift;
outlet_cleargate=cleargate;
outlet_toggleon=toggleon;
outlet_matrix=matrix;
outlet_offsetshift=offsetshift;
outlet_playstop=playstop;

outlet_lightgate=lightgate;
outlet_lightgate2=lightgate2;
outlet_lightgate3=lightgate3;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 104)) {
program = 2;
toggleon=data2;
light=0;
matrix=3;
}
if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 105)) {
program = 2;
light=1;
matrix=2;
}
if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 106)) {
program = 1;
light=2;
matrix=1;
}
if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 107)) {
program = 0;
light=3;
matrix=0;
}
if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 108)) {
shift=data2;
}
if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 109)) {
playstop=data2;
}
if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 110)) {
overdub=data2;
}
if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 111)) {
recbutton=data2;
}
if ((status == 0 + MIDI_NOTE_ON) && (data1 == 72)) {
program=2;
light=0;
matrix=3;
offsetshift=0;
lightgate=1;
lightgate2=0;
lightgate3=0;
}
if ((status == 0 + MIDI_NOTE_ON) && (data1 == 88)) {
program=2;
light=0;
matrix=3;
offsetshift=64;
lightgate=0;
lightgate2=1;
lightgate3=0;
}
if ((status == 0 + MIDI_NOTE_ON) && (data1 == 104)) {
program=2;
light=0;
matrix=3;
offsetshift=128;
lightgate=0;
lightgate2=0;
lightgate3=1;
}
if ((status == MIDI_NOTE_ON + 0) && (data2)) {if (data1 == 120) {
   toggleon = 0;
}
} else if (((status == MIDI_NOTE_ON + 0) && (!data2))||          (status == MIDI_NOTE_OFF + 0)) {
  if (data1 == 120) {
    toggleon = 1;
  }}

if ((status == 0 + MIDI_CONTROL_CHANGE) && ((data1>103)&&(data1<108))) {
cleargate=data2;
}
if ((status == 0 + MIDI_CONTROL_CHANGE) && (data1 == 109)) {
playstop=data2;
}]]></code.midihandler>
      </object>
   </patchobj>
   <comment type="patch/comment" x="1190" y="350" text="clear"/>
   <comment type="patch/comment" x="1428" y="350" text="record"/>
   <comment type="patch/comment" x="1750" y="350" text="letspulsein"/>
   <obj type="table/alloc 16b sdram load" uuid="e6b85dad3ab43565cda93ea4c43c73b668b1cd43" name="fred" x="756" y="364">
      <params/>
      <attribs>
         <combo attributeName="size" selection="2048"/>
         <file attributeName="filename" file="/preset"/>
      </attribs>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_7" x="1120" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/flipflop toggle" uuid="195e489e5fc3d275944b0de56c7a91c8641ea22a" name="flipflop_6" x="1190" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_5" x="1386" y="364">
      <params>
         <int32 name="maximum" value="2"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_8" x="1498" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/flipflop toggle" uuid="195e489e5fc3d275944b0de56c7a91c8641ea22a" name="flipflop_8" x="1568" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_10" x="1708" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_4" x="1792" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="timer/delayedpulse" uuid="3f05ee534ca67755fb20c7437f9e4de3d4c2f73d" name="delayedpulse_2" x="1918" y="364">
      <params>
         <frac32.s.map name="delay" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2548" y="378" text="button logic for looper"/>
   <patchobj type="patch/object" uuid="bd621061-a17a-41ce-9f2e-1c091f52b330" name="right_1" x="2702" y="392">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="bd621061-a17a-41ce-9f2e-1c091f52b330">
         <sDescription>outputs the state of the right-row buttons of a &apos;novation launchpad&apos;.
DOES NOT work with the &apos;LP mark 1&apos;.</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="r0"/>
            <bool32 name="r1"/>
            <bool32 name="r2"/>
            <bool32 name="r3"/>
            <bool32 name="r4"/>
            <bool32 name="r5"/>
            <bool32 name="r6"/>
            <bool32 name="r7"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[bool gate [128];]]></code.declaration>
         <code.krate><![CDATA[outlet_r0 = gate[8];
outlet_r1 = gate[24];
outlet_r2 = gate[40];
outlet_r3 = gate[56];

outlet_r4 = gate[72];
outlet_r5 = gate[88];
outlet_r6 = gate[104];
outlet_r7 = gate[120];]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + 0) && (data2)) gate [data1] = 1;
if (((status == MIDI_NOTE_ON + 0) && (!data2))||(status == MIDI_NOTE_OFF + 0)) gate [data1] = 0;]]></code.midihandler>
      </object>
   </patchobj>
   <comment type="patch/comment" x="2781" y="392" text="rec"/>
   <comment type="patch/comment" x="2870" y="392" text="overdub"/>
   <obj type="logic/flipflop" uuid="f9b15363f5ee203152e062c08a8846f0074b0ea5" name="flipflop_10" x="2282" y="406">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_20" x="2366" y="406">
      <params/>
      <attribs/>
   </obj>
   <obj type="djrm/logic/counter2_init_start" uuid="d5936f238ab92e53ac93d5927c3b43ceef998dc1" name="counter2_init_start_2" x="2450" y="406">
      <params>
         <int32 name="maximum" value="1"/>
         <int32 name="init" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/flipflop" uuid="f9b15363f5ee203152e062c08a8846f0074b0ea5" name="flipflop_9" x="2618" y="406">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_4" x="2772" y="406">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_5" x="2870" y="406">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/toggle" uuid="f42f0d3aab552c17bc78b9e65f85dc24f977503d" name="toggle_4" x="2954" y="420">
      <params/>
      <attribs/>
   </obj>
   <obj type="phi/logic/xor 4" uuid="4d70bbe27bfe5c2f07f9a80c0efda9ae9b8e771c" name="xor_1" x="3038" y="420">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/flipflop" uuid="f9b15363f5ee203152e062c08a8846f0074b0ea5" name="flipflop_11" x="3150" y="420">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_21" x="3248" y="420">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="1302" y="448" text="overdub"/>
   <comment type="patch/comment" x="798" y="476" text="seq clear"/>
   <obj type="logic/flipflop toggle" uuid="195e489e5fc3d275944b0de56c7a91c8641ea22a" name="flipflop_12" x="1288" y="476">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_13" x="1456" y="476">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_9" x="714" y="490">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="877a9f28-8990-4af8-8c1f-bbbcc6c3674f" name="tcopy_1" x="798" y="490">
      <params>
         <int32 name="src" value="0"/>
         <int32 name="dst" value="0"/>
         <int32 name="range" value="1"/>
         <bool32.tgl name="splat" value="0"/>
         <bool32.tgl name="clear" value="1"/>
      </params>
      <attribs>
         <objref attributeName="src" obj="fred"/>
         <objref attributeName="dst" obj="fred"/>
         <spinner attributeName="speed" value="1"/>
      </attribs>
      <object id="patch/object" uuid="877a9f28-8990-4af8-8c1f-bbbcc6c3674f">
         <sDescription>copy the elements of a table from table &apos;src&apos; to table &apos;dst&apos;
the length of the area to copy is defined by &apos;range&apos;,
the read offset is defined by inlet&apos;src&apos; and the write offset by &apos;dst&apos;
&apos;speed&apos; sets the copying speed in terms of audio-rate (16 is really fast!)
if &apos;splat&apos; is enabled,tcopy will preserve the original contents of the destination table.
if &apos;clear&apos; is enabled,tcopy will clear the contents of the table.</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>data.axh</helpPatch>
         <inlets>
            <int32 name="matrix" description="source start"/>
            <int32 name="dst" description="destination start"/>
            <int32 name="range" description="length of the area to copy"/>
            <bool32.rising name="trig" description="start copying"/>
         </inlets>
         <outlets>
            <bool32.pulse name="done" description="operation done."/>
         </outlets>
         <displays/>
         <params>
            <int32 name="src">
               <MinValue i="0"/>
               <MaxValue i="2097152"/>
            </int32>
            <int32 name="dst">
               <MinValue i="0"/>
               <MaxValue i="2097152"/>
            </int32>
            <int32 name="range">
               <MinValue i="1"/>
               <MaxValue i="2097152"/>
            </int32>
            <bool32.tgl name="splat" description="add to src contents"/>
            <bool32.tgl name="clear" description="clear dst"/>
         </params>
         <attribs>
            <objref name="src" description="name of the source -table"/>
            <objref name="dst" description="name of the destination - table"/>
            <spinner name="speed" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t i;
uint32_t ii;
int ntrig;
int rtrig;

int speed;
uint32_t src;
uint32_t dst;
uint32_t range;
uint32_t block;]]></code.declaration>
         <code.krate><![CDATA[speed = attr_speed << 4;
if (inlet_matrix==0) {dst=0;range=384;}
if (inlet_matrix==1) {dst=384;range=384;}
if (inlet_matrix==2) {dst=768;range=384;}
if (inlet_matrix==3) {dst=1152;range=384;}

block  = (range / speed) * speed;

outlet_done = 0;

if ((inlet_trig)&& (!ntrig)){ ntrig = 1;i = 0;rtrig = 0;}
if ((i == range) && (!inlet_trig)) {ntrig = 0;outlet_done = 1;i = 0;}


//copy n chunks of size 'speed'
if (ntrig && (i < block)){ 
	{ 
  for(ii=0;ii<speed;ii++)
  attr_dst.array[(i + ii + dst)]= (( attr_dst.array[(i + ii + src)] + (attr_dst.array[(i + ii + dst)] * param_splat)) * (!param_clear));
  }
  i += speed;	
}

//copy what's left
if (i == block) rtrig = 1; 

if ((ntrig && rtrig) && (i < (range))){ 
	attr_dst.array[(i + dst)]= (( attr_dst.array[(i + src)] + (attr_dst.array[(i + dst)] * param_splat)) * (!param_clear));
   i += 1;  
 }]]></code.krate>
      </object>
   </patchobj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_6" x="1582" y="504">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="1834" y="546" text="sequencer"/>
   <patchobj type="patch/object" uuid="7a3a8161-0726-4c84-a82f-4bdd527c95eb" name="x_1" x="1806" y="560">
      <params>
         <int32 name="offset" value="0"/>
      </params>
      <attribs>
         <objref attributeName="buffer" obj="temp"/>
         <objref attributeName="table" obj="fred"/>
         <spinner attributeName="channel" value="7"/>
      </attribs>
      <object id="patch/object" uuid="7a3a8161-0726-4c84-a82f-4bdd527c95eb">
         <sDescription>writes midi controler data to a table.set the start of the range of the controlers to read out with &apos;startcc&apos;,the length of the range with &apos;length&apos;.
the data is written to the table starting at &apos;offset&apos;.</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <rotatedParams>true</rotatedParams>
         <inlets>
            <int32 name="steplay"/>
            <int32 name="steprec"/>
            <int32 name="offset"/>
            <int32 name="select"/>
            <bool32.rising name="trig"/>
            <bool32 name="rec"/>
            <bool32 name="overdub"/>
            <bool32 name="clear"/>
         </inlets>
         <outlets>
            <frac32.bipolar name="note"/>
            <frac32 name="v"/>
            <bool32 name="g"/>
            <frac32.bipolar name="note2"/>
            <frac32 name="v2"/>
            <bool32 name="g2"/>
            <frac32.bipolar name="note3"/>
            <frac32.positive name="v3"/>
            <bool32 name="g3"/>
            <int32 name="offset"/>
         </outlets>
         <displays/>
         <params>
            <int32 name="offset" noLabel="true">
               <MinValue i="0"/>
               <MaxValue i="1000000"/>
            </int32>
         </params>
         <attribs>
            <objref name="buffer"/>
            <objref name="table"/>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int channel;
int ntrig;
int nytrig;
int ztrig;
int ytrig;
int rtrig;
int ytrig2;
int rtrig2;
int trigger;
int trigger2;
int trigger3;
int splat;
int clear;
int clearB;
int speed;
int tablevalue;
int offvalue;
int prev;
int holdv;
int holdv2;
int holdv3;
int holdv4;
int holdnote;
int holdnote2;
int holdnote3;
int holdnote4;
int holdnotev;
int holdnotev2;
int holdnotev3;
int prevstep;
int hold;
int hold2;
int hold3;
int holdonv;
int holdonv2;
int holdonv3;
int holdon;
int holdon2;
int holdon3;

int note;
int holdoffv;
int holdoffv2;
int holdoffv3;

bool op;
bool op2;
bool opb;
bool opC;
int8_t cc;
int8_t cv;
int32_t _g;
int32_t _gb;
uint32_t voice;
uint32_t src;
uint32_t dst;
uint32_t range;
uint32_t block;
uint32_t offset;
uint32_t offset2;
uint32_t offsetB;
uint32_t playoff;
uint32_t playoff2;
uint32_t recoff;
uint32_t i;
uint32_t ii;
uint32_t iii;
uint32_t iiii;]]></code.declaration>
         <code.krate><![CDATA[speed = 16 << 4;
if (inlet_select==0) {dst=(0+inlet_offset+param_offset);range=384;channel=7;}
if (inlet_select==1) {dst=(384+inlet_offset+param_offset);range=384;channel=11;}
if (inlet_select==2) {dst=(768+inlet_offset+param_offset);range=384;channel=11;}

offset = (inlet_steprec*2) + dst;
offset2 = inlet_steplay + inlet_offset + param_offset;

tablevalue= attr_buffer.array[__USAT((offset),attr_buffer.LENGTHPOW)]<<attr_buffer.GAIN;


//voice 1 gate
if (_gb>0){
attr_buffer.array[128+offset]=(64<<20)>>attr_buffer.GAIN;
attr_buffer.array[128+offset+1]=(64<<20)>>attr_buffer.GAIN;
}
//note on and pitch recording
if ((!(tablevalue>0))&&(_gb>0) && !ntrig){
	ntrig=1;
	 op2 = attr_buffer.array[256+offset];
      op2 = !op2 ;
      op = attr_buffer.array[offset];
      op = !op ;
      attr_buffer.array[offset]= (op * (cv << 20) >>attr_buffer.GAIN);
      attr_buffer.array[256+offset]= (op2 * (cc << 20) >>attr_buffer.GAIN);
//      prev=inlet_steprec;
   }  
      if (!(_gb>0)) {
   	ntrig=0;
   }

//   if ((_gb>0)&&(inlet_steprec!=prev)){
//   	attr_buffer.array[offset]= ((0 << 20) >>attr_buffer.GAIN);
//   	}

         _gb=_g;


         
//1 playback values: holdnote=pitch, holdv=note on and vel, holdoffv=gate
holdnotev=attr_table.array[__USAT((offset2+256),attr_table.LENGTHPOW)]<<attr_table.GAIN;
holdv= attr_table.array[__USAT((offset2),attr_table.LENGTHPOW)]<<attr_table.GAIN;
holdoffv=attr_table.array[__USAT((offset2+128),attr_table.LENGTHPOW)]<<attr_table.GAIN;


//1 hold for note pitch

if ((inlet_steplay != prevstep )&&(holdnotev > 0 )) { 
     holdnote = (holdnotev-(1<<26))<<1;
     outlet_note = holdnote;
}
else {
	outlet_note = holdnote;
}


//1 hold for vel
if ((inlet_steplay != prevstep )&&(holdv > 0 )) { 
     hold = holdv;
     outlet_v = hold;
     trigger = hold;
}
else {
	outlet_v = hold;
	trigger=0;
}

if (trigger>0) {outlet_g=0;}
else outlet_g=holdoffv;



//2 playback values
holdnotev2=attr_table.array[__USAT((offset2+256+384),attr_table.LENGTHPOW)]<<attr_table.GAIN;
holdv2= attr_table.array[__USAT((offset2+384),attr_table.LENGTHPOW)]<<attr_table.GAIN;
holdoffv2=attr_table.array[__USAT((offset2+128+384),attr_table.LENGTHPOW)]<<attr_table.GAIN;


//1 hold for note pitch

if ((inlet_steplay != prevstep )&&(holdnotev2 > 0 )) { 
     holdnote2 = (holdnotev2-(1<<26))<<1;
     outlet_note2 = holdnote2;
}
else {
	outlet_note2 = holdnote2;
}


//1 hold for vel
if ((inlet_steplay != prevstep )&&(holdv2 > 0 )) { 
     hold2 = holdv2;
     outlet_v2 = hold2;
     trigger2 = hold2;
}
else {
	outlet_v2 = hold2;
	trigger2=0;
}

if (trigger2>0) {outlet_g2=0;}
else outlet_g2=holdoffv2;

//1 playback values
holdnotev3=attr_table.array[__USAT((offset2+256+768),attr_table.LENGTHPOW)]<<attr_table.GAIN;
holdv3= attr_table.array[__USAT((offset2+768),attr_table.LENGTHPOW)]<<attr_table.GAIN;
holdoffv3=attr_table.array[__USAT((offset2+128+768),attr_table.LENGTHPOW)]<<attr_table.GAIN;


//1 hold for note pitch

if ((inlet_steplay != prevstep )&&(holdnotev3 > 0 )) { 
     holdnote3 = (holdnotev3-(1<<26))<<1;
     outlet_note3 = holdnote3;
}
else {
	outlet_note3 = holdnote3;
}


//1 hold for vel
if ((inlet_steplay != prevstep )&&(holdv3 > 0 )) { 
     hold3 = holdv3;
     outlet_v3 = hold3;
     trigger3 = hold3;
}
else {
	outlet_v3 = hold3;
	trigger3=0;
}

if (trigger3>0) {outlet_g3=0;}
else outlet_g3=holdoffv3;

prevstep = inlet_steplay;
//buffer handling


outlet_offset=(1536+inlet_offset+param_offset);

block  = (range / speed) * speed;


if (inlet_rec){splat=0;clear=0;clearB=0;}
if (inlet_overdub){splat=0; clear=0;clearB=0;}
if (inlet_clear){splat=0;clear=1;clearB=1;}




if ((inlet_trig)&& (!ytrig)){ytrig = 1;i = 0;rtrig = 0;}
if ((i == range) && (!inlet_trig)) {ytrig = 0;i = 0;}



if (ytrig && (i < block)){ 
	{ 
  for(ii=0;ii<speed;ii++)
  attr_table.array[(i + ii + dst)]= (( attr_buffer.array[(i + ii + dst)] + (attr_table.array[(i + ii + dst)] * splat)) * (!clear));
  }
  i += speed;	
}
if (i == block) rtrig = 1; 

if ((ytrig && rtrig) && (i < (range))){ 
	attr_table.array[(i + dst)]= (( attr_buffer.array[(i + dst)] + (attr_table.array[(i + dst)] * splat)) * (!clear));
   i += 1;  
 }

//next
if ((inlet_trig)&& (!ytrig2)){ ytrig2 = 1;iii = 0;rtrig2 = 0;}
if ((iii == range) && (!inlet_trig)) {ytrig2 = 0;iii = 0;}

if (ytrig2 && (iii < block)){ 
	{ 
  for(iiii=0;iiii<speed;iiii++)
  attr_buffer.array[(iii + iiii + dst)]= (( attr_table.array[(iii + iiii + dst)] + (attr_buffer.array[(iii + iiii + dst)] * splat)) * (!clearB));
  }
  iii += speed;	
}
if (iii == block) rtrig2 = 1; 

if ((ytrig2 && rtrig2) && (iii < (range))){ 
	attr_buffer.array[(iii + dst)]= (( attr_table.array[(iii + dst)] + (attr_buffer.array[(iii + dst)] * splat)) * (!clearB));
   iii += 1;  
 }]]></code.krate>
         <code.midihandler><![CDATA[if (status == MIDI_NOTE_ON + (channel-1))
{	
	cc= data1;
	note = data1;
cv = data2;_g = 64;_gb = 0;}
else if (status == MIDI_NOTE_OFF + (channel-1)) {
  if (data1==note) {
    _g = 0;
  }}]]></code.midihandler>
      </object>
   </patchobj>
   <comment type="patch/comment" x="14" y="616" text="pad in"/>
   <patchobj type="patch/object" uuid="adef9b0f-d36f-4e7e-acc0-cc9020c77af3" name="keyb_5" x="14" y="630">
      <params/>
      <attribs>
         <spinner attributeName="channel" value="11"/>
      </attribs>
      <object id="patch/object" uuid="adef9b0f-d36f-4e7e-acc0-cc9020c77af3">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets>
            <int32 name="matrix"/>
         </inlets>
         <outlets>
            <frac32.bipolar name="note" description="midi note number (-64..63)"/>
            <bool32 name="gate" description="key pressed, no retrigger legato"/>
            <bool32 name="gate2" description="key pressed, retrigger on legato"/>
            <frac32.positive name="velocity" description="note-on velocity"/>
            <bool32 name="gateB"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int8_t _note;
int32_t _gate;
int32_t _gate2;
uint8_t _velo;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;
_note = 0;]]></code.init>
         <code.krate><![CDATA[if (inlet_matrix !=1){
outlet_note= _note<<21;
outlet_gate= _gate;
outlet_gate2= _gate2;
_gate2 = _gate;
outlet_gateB=0;
outlet_velocity= _velo<<20;}
if (inlet_matrix ==1){
outlet_note= _note<<21;
outlet_gate= _gate;
outlet_gate2=0;
outlet_gateB= _gate2;
_gate2 = _gate;
outlet_velocity= _velo<<20;}]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {
  _velo = data2;
  _note = data1-64;
  _gate = 1<<27;
  _gate2 = 0;
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||
          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (_note == data1-64) {
    _gate = 0;
    _note = data1-64;
  }
} else if ((status == (attr_channel-1) + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <comment type="patch/comment" x="1470" y="644" text="copies to buffer for pattern switching &amp; overdubbing"/>
   <patchobj type="patch/object" uuid="d23b51b4-e9ff-44f9-9b20-ccf4161c07c1" name="tcopy_6" x="1540" y="658">
      <params>
         <int32 name="src" value="0"/>
         <int32 name="dst" value="0"/>
         <int32 name="range" value="8192"/>
         <bool32.tgl name="splat" value="0"/>
         <bool32.tgl name="clear" value="0"/>
      </params>
      <attribs>
         <objref attributeName="src" obj="fred"/>
         <objref attributeName="dst" obj="temp"/>
         <spinner attributeName="speed" value="16"/>
      </attribs>
      <object id="patch/object" uuid="d23b51b4-e9ff-44f9-9b20-ccf4161c07c1">
         <sDescription>copy the elements of a table from table &apos;src&apos; to table &apos;dst&apos;
the length of the area to copy is defined by &apos;range&apos;,
the read offset is defined by inlet&apos;src&apos; and the write offset by &apos;dst&apos;
&apos;speed&apos; sets the copying speed in terms of audio-rate (16 is really fast!)
if &apos;splat&apos; is enabled,tcopy will preserve the original contents of the destination table.
if &apos;clear&apos; is enabled,tcopy will clear the contents of the table.</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>data.axh</helpPatch>
         <inlets>
            <int32 name="src" description="source start"/>
            <int32 name="dst" description="destination start"/>
            <int32 name="range" description="length of the area to copy"/>
            <bool32.rising name="trig" description="start copying"/>
         </inlets>
         <outlets>
            <bool32.pulse name="done" description="operation done."/>
         </outlets>
         <displays/>
         <params>
            <int32 name="src">
               <MinValue i="0"/>
               <MaxValue i="2097152"/>
            </int32>
            <int32 name="dst">
               <MinValue i="0"/>
               <MaxValue i="2097152"/>
            </int32>
            <int32 name="range">
               <MinValue i="1"/>
               <MaxValue i="2097152"/>
            </int32>
            <bool32.tgl name="splat" description="add to src contents"/>
            <bool32.tgl name="clear" description="clear dst"/>
         </params>
         <attribs>
            <objref name="src" description="name of the source -table"/>
            <objref name="dst" description="name of the destination - table"/>
            <spinner name="speed" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t i;
uint32_t ii;
int ntrig;
int rtrig;

int speed;
uint32_t src;
uint32_t dst;
uint32_t range;
uint32_t block;]]></code.declaration>
         <code.krate><![CDATA[speed = attr_speed << 4;
src = param_src + inlet_src;
dst = param_dst + inlet_dst;
range = param_range + inlet_range;

block  = (range / speed) * speed;

outlet_done = 0;

if ((inlet_trig)&& (!ntrig)){ ntrig = 1;i = 0;rtrig = 0;}
if ((i == range) && (!inlet_trig)) {ntrig = 0;outlet_done = 1;i = 0;}


//copy n chunks of size 'speed'
if (ntrig && (i < block)){ 
	{ 
  for(ii=0;ii<speed;ii++)
  attr_dst.array[(i + ii + dst)]= (( attr_src.array[(i + ii + src)] + (attr_dst.array[(i + ii + dst)] * param_splat)) * (!param_clear));
  }
  i += speed;	
}

//copy what's left
if (i == block) rtrig = 1; 

if ((ntrig && rtrig) && (i < (range))){ 
	attr_dst.array[(i + dst)]= (( attr_src.array[(i + src)] + (attr_dst.array[(i + dst)] * param_splat)) * (!param_clear));
   i += 1;  
 }]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="2576" y="728" text="preset saving"/>
   <patchobj type="patch/object" uuid="60a12d53-0ca4-4f87-8cc0-98034e625e47" name="note_3" x="2954" y="756">
      <params/>
      <attribs>
         <spinner attributeName="note" value="21"/>
         <spinner attributeName="channel" value="3"/>
      </attribs>
      <object id="patch/object" uuid="60a12d53-0ca4-4f87-8cc0-98034e625e47">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="gate" description="key pressed?"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="note" MinValue="0" MaxValue="127" DefaultValue="64"/>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t _gate;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;]]></code.init>
         <code.krate><![CDATA[outlet_gate= _gate<<27;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == attr_note) {
   _gate = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == attr_note) {
    _gate = 0;
  }
} else if ((status == (attr_channel-1) + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="table/alloc 16b sdram load" uuid="e6b85dad3ab43565cda93ea4c43c73b668b1cd43" name="preset" x="2576" y="770">
      <params/>
      <attribs>
         <combo attributeName="size" selection="32768"/>
         <file attributeName="filename" file="/preset"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="196" y="812" text="out to samples"/>
   <obj type="midi/out/note" uuid="a76ae870da278cbbce5501a57ce7bd0e0ea4215c" name="note_2" x="196" y="840">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="13"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="95be973d-88e7-4574-9dc4-fd9124484347" name="launch_2" x="2576" y="854">
      <params/>
      <attribs>
         <spinner attributeName="channel" value="3"/>
      </attribs>
      <object id="patch/object" uuid="95be973d-88e7-4574-9dc4-fd9124484347">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <int32 name="snapshot"/>
            <bool32 name="save"/>
            <bool32 name="button1" description="key pressed?"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="channel" MinValue="0" MaxValue="16" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int note;
int snapshot;
int save;
int _gate1;]]></code.declaration>
         <code.krate><![CDATA[outlet_snapshot= snapshot;
outlet_save= save;
outlet_button1= _gate1;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)&& (data1==20)) 
{save = 1;}
else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1)&& (data1==20) )) 
{save = 0;}

if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) 

{	
if ((data1 > 63)&&(data1<81)) 
{
	snapshot=(data1-64);
   _gate1 = 1;
   note = data1;
}
}

else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) 
	
if (data1 == note) 
{
   _gate1 = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="dcefc491-221f-4521-bad8-87185f5df137" name="tcopy_2" x="2688" y="854">
      <params>
         <int32 name="range" value="2048"/>
         <bool32.tgl name="splat" value="0"/>
         <bool32.tgl name="clear" value="0"/>
      </params>
      <attribs>
         <objref attributeName="preset" obj="preset"/>
         <objref attributeName="play" obj="fred"/>
      </attribs>
      <object id="patch/object" uuid="dcefc491-221f-4521-bad8-87185f5df137">
         <sDescription>copy the elements of a table from table &apos;src&apos; to table &apos;dst&apos;
the length of the area to copy is defined by &apos;range&apos;,
the read offset is defined by inlet&apos;src&apos; and the write offset by &apos;dst&apos;
&apos;speed&apos; sets the copying speed in terms of audio-rate (16 is really fast!)
if &apos;splat&apos; is enabled,tcopy will preserve the original contents of the destination table.
if &apos;clear&apos; is enabled,tcopy will clear the contents of the table.</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>data.axh</helpPatch>
         <inlets>
            <bool32 name="save"/>
            <int32 name="snapshot"/>
            <bool32.rising name="trig" description="start copying"/>
         </inlets>
         <outlets/>
         <displays/>
         <params>
            <int32 name="range">
               <MinValue i="1"/>
               <MaxValue i="2097152"/>
            </int32>
            <bool32.tgl name="splat" description="add to src contents"/>
            <bool32.tgl name="clear" description="clear dst"/>
         </params>
         <attribs>
            <objref name="preset" description="name of the source -table"/>
            <objref name="play" description="name of the destination - table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t i;
uint32_t ii;
int ntrig;
int rtrig;

int speed;
uint32_t src;
uint32_t dst;
uint32_t range;
uint32_t block;]]></code.declaration>
         <code.krate><![CDATA[//load
if (!(inlet_save>0))
{
speed = 16 << 4;
src = (inlet_snapshot*param_range);
dst = 0;
range = param_range;

block  = (range / speed) * speed;

if ((inlet_trig)&& (!ntrig)){ ntrig = 1;i = 0;rtrig = 0;}
if ((i == range) && (!inlet_trig)) {ntrig = 0;;i = 0;}

//copy n chunks of size 'speed'
if (ntrig && (i < block)){ 
	{ 
  for(ii=0;ii<speed;ii++)
  attr_play.array[(i + ii + dst)]= (( attr_preset.array[(i + ii + src)] + (attr_play.array[(i + ii + dst)] * param_splat)) * (!param_clear));
  }
  i += speed;	
}

//copy what's left
if (i == block) rtrig = 1; 

if ((ntrig && rtrig) && (i < (range))){ 
	attr_play.array[(i + dst)]= (( attr_preset.array[(i + src)] + (attr_play.array[(i + dst)] * param_splat)) * (!param_clear));
   i += 1;  
 }
}



//save
else if (inlet_save>0)
{
speed = 16 << 4;
src = 0;
dst = (inlet_snapshot*param_range);
range = param_range;

block  = (range / speed) * speed;

if ((inlet_trig)&& (!ntrig)){ ntrig = 1;i = 0;rtrig = 0;}
if ((i == range) && (!inlet_trig)) {ntrig = 0;i = 0;}

//copy n chunks of size 'speed'
if (ntrig && (i < block)){ 
	{ 
  for(ii=0;ii<speed;ii++)
  attr_preset.array[(i + ii + dst)]= (( attr_play.array[(i + ii + src)] + (attr_preset.array[(i + ii + dst)] * param_splat)) * (!param_clear));
  }
  i += speed;	
}

//copy what's left
if (i == block) rtrig = 1; 

if ((ntrig && rtrig) && (i < (range))){ 
	attr_preset.array[(i + dst)]= (( attr_play.array[(i + src)] + (attr_preset.array[(i + dst)] * param_splat)) * (!param_clear));
   i += 1;  
 }
}]]></code.krate>
      </object>
   </patchobj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_1" x="2828" y="854">
      <params/>
      <attribs>
         <table attributeName="str" table="/preset"/>
      </attribs>
   </obj>
   <obj type="table/save" uuid="3e4108b607d56d9e1cd10abb898b58eea11e53b2" name="save_1" x="3052" y="854">
      <params/>
      <attribs>
         <objref attributeName="table" obj="preset"/>
      </attribs>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_12" x="1806" y="896">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_11" x="1960" y="896">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_10" x="2142" y="896">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="196" y="966" text="out to filter"/>
   <obj type="midi/out/note" uuid="a76ae870da278cbbce5501a57ce7bd0e0ea4215c" name="note_6" x="196" y="980">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="14"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="1820" y="980" text="to filter seq"/>
   <comment type="patch/comment" x="2002" y="980" text="to sample playback"/>
   <comment type="patch/comment" x="2212" y="980" text="to bass station"/>
   <obj type="midi/out/note" uuid="a76ae870da278cbbce5501a57ce7bd0e0ea4215c" name="note_7" x="1820" y="994">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="14"/>
      </attribs>
   </obj>
   <obj type="midi/out/note" uuid="a76ae870da278cbbce5501a57ce7bd0e0ea4215c" name="note_5" x="2002" y="994">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="13"/>
      </attribs>
   </obj>
   <obj type="midi/out/note" uuid="a76ae870da278cbbce5501a57ce7bd0e0ea4215c" name="note_4" x="2212" y="994">
      <params/>
      <attribs>
         <combo attributeName="device" selection="din"/>
         <spinner attributeName="channel" value="7"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="1484" y="1036" text="sample recorderd"/>
   <comment type="patch/comment" x="1470" y="1050" text="rec"/>
   <patchobj type="patch/object" uuid="c1bb9137-28a9-43b3-8365-6b6fc1cb6162" name="tcopy_4" x="3388" y="1050">
      <params>
         <int32 name="range" value="1048576"/>
         <bool32.tgl name="splat" value="0"/>
         <bool32.tgl name="clear" value="1"/>
      </params>
      <attribs>
         <objref attributeName="src" obj="rec"/>
         <objref attributeName="dst" obj="rec"/>
         <spinner attributeName="speed" value="16"/>
      </attribs>
      <object id="patch/object" uuid="c1bb9137-28a9-43b3-8365-6b6fc1cb6162">
         <sDescription>copy the elements of a table from table &apos;src&apos; to table &apos;dst&apos;
the length of the area to copy is defined by &apos;range&apos;,
the read offset is defined by inlet&apos;src&apos; and the write offset by &apos;dst&apos;
&apos;speed&apos; sets the copying speed in terms of audio-rate (16 is really fast!)
if &apos;splat&apos; is enabled,tcopy will preserve the original contents of the destination table.
if &apos;clear&apos; is enabled,tcopy will clear the contents of the table.</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>data.axh</helpPatch>
         <inlets>
            <bool32.rising name="trig" description="start copying"/>
         </inlets>
         <outlets/>
         <displays/>
         <params>
            <int32 name="range">
               <MinValue i="1"/>
               <MaxValue i="2097152"/>
            </int32>
            <bool32.tgl name="splat" description="add to src contents"/>
            <bool32.tgl name="clear" description="clear dst"/>
         </params>
         <attribs>
            <objref name="src" description="name of the source -table"/>
            <objref name="dst" description="name of the destination - table"/>
            <spinner name="speed" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t i;
uint32_t ii;
int ntrig;
int rtrig;

int speed;
uint32_t src;
uint32_t dst;
uint32_t range;
uint32_t block;]]></code.declaration>
         <code.krate><![CDATA[speed = attr_speed << 4;
src = 0;
dst = 0;
range = param_range;

block  = (range / speed) * speed;



if ((inlet_trig)&& (!ntrig)){ ntrig = 1;i = 0;rtrig = 0;}
if ((i == range) && (!inlet_trig)) {ntrig = 0;i = 0;}


//copy n chunks of size 'speed'
if (ntrig && (i < block)){ 
	{ 
  for(ii=0;ii<speed;ii++)
  attr_dst.array[(i + ii + dst)]= (( attr_src.array[(i + ii + src)] + (attr_dst.array[(i + ii + dst)] * param_splat)) * (!param_clear));
  }
  i += speed;	
}

//copy what's left
if (i == block) rtrig = 1; 

if ((ntrig && rtrig) && (i < (range))){ 
	attr_dst.array[(i + dst)]= (( attr_src.array[(i + src)] + (attr_dst.array[(i + dst)] * param_splat)) * (!param_clear));
   i += 1;  
 }]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="ff42f520-5711-4cc4-b155-405734de2cb2" name="step_1____tmp" x="1470" y="1064">
      <params>
         <int32 name="offset" value="1280"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="fred"/>
      </attribs>
      <object id="patch/object" uuid="ff42f520-5711-4cc4-b155-405734de2cb2">
         <sDescription>read from table.
&apos;value&apos; = value at index.
&apos;trig&apos; = puts out a pulse if &apos;value&apos; &gt; 0.
&apos;vhold&apos; = the current value,held until next &apos;trig&apos;.</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>step_seq.axh</helpPatch>
         <inlets>
            <int32.positive name="offset" description="offset"/>
            <int32.positive name="step" description="index"/>
         </inlets>
         <outlets>
            <bool32.pulse name="trig" description="trigger if value &gt; 0 "/>
            <frac32 name="value" description="value at index"/>
            <frac32 name="vhold" description="hold current value until next trigger"/>
         </outlets>
         <displays/>
         <params>
            <int32 name="offset" noLabel="true">
               <MinValue i="0"/>
               <MaxValue i="1000000000"/>
            </int32>
         </params>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int prev;
int hold;]]></code.declaration>
         <code.krate><![CDATA[outlet_value= attr_table.array[__USAT((inlet_step+ inlet_offset +param_offset),attr_table.LENGTHPOW)]<<attr_table.GAIN;

if ((inlet_step != prev ) && (outlet_value > 0 )) { 
	outlet_trig = 1;
     hold = outlet_value;
     outlet_vhold = hold;	
}else {
	outlet_trig = 0;
	outlet_vhold = hold;	
}
prev = inlet_step;]]></code.krate>
      </object>
   </patchobj>
   <obj type="conv/to b" uuid="91ff898f0f2bf6e4dc0165515e0be7c2281da18b" name="to_1" x="1596" y="1064">
      <params/>
      <attribs/>
   </obj>
   <obj type="rbrt/patching/loadbang" uuid="45d1f29d-ac62-4e5b-86f8-2201d2f6c689" name="loadbang_2" x="1624" y="1120">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/flipflop toggle" uuid="195e489e5fc3d275944b0de56c7a91c8641ea22a" name="flipflop_5" x="1764" y="1120">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_6" x="1890" y="1162">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="1470" y="1218" text="rec"/>
   <obj type="rbrt/seq/step read" uuid="b1f7ea1e-9c45-44ff-8088-aa839d65d0d2" name="step_1" x="1470" y="1232">
      <params>
         <int32 name="offset" value="1344"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="fred"/>
      </attribs>
   </obj>
   <obj type="conv/to b" uuid="91ff898f0f2bf6e4dc0165515e0be7c2281da18b" name="to_5" x="1596" y="1232">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_7" x="1918" y="1288">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="1470" y="1386" text="rec"/>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_8" x="1932" y="1386">
      <params/>
      <attribs/>
   </obj>
   <obj type="rbrt/seq/step read" uuid="b1f7ea1e-9c45-44ff-8088-aa839d65d0d2" name="step_2" x="1470" y="1400">
      <params>
         <int32 name="offset" value="1408"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="fred"/>
      </attribs>
   </obj>
   <obj type="conv/to b" uuid="91ff898f0f2bf6e4dc0165515e0be7c2281da18b" name="to_6" x="1596" y="1400">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2184" y="1554" text="in from rodney"/>
   <patchobj type="patch/object" uuid="1ed80a7d-f39d-4460-a9ad-eb085adc7e3b" name="polycc_2" x="2100" y="1582">
      <params>
         <int32 name="startcc" value="14"/>
      </params>
      <attribs>
         <spinner attributeName="channel" value="16"/>
      </attribs>
      <object id="patch/object" uuid="1ed80a7d-f39d-4460-a9ad-eb085adc7e3b">
         <sDescription>outputs the state of 8 controllers starting from &apos;startcc&apos;</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <int32 name="startcc"/>
         </inlets>
         <outlets>
            <frac32.positive name="cc0"/>
            <frac32.positive name="cc1"/>
            <frac32.positive name="cc2"/>
            <frac32.positive name="cc3"/>
         </outlets>
         <displays/>
         <params>
            <int32 name="startcc" noLabel="true">
               <MinValue i="0"/>
               <MaxValue i="127"/>
            </int32>
         </params>
         <attribs>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t cc [128];
uint8_t start;]]></code.declaration>
         <code.krate><![CDATA[start = (inlet_startcc + param_startcc);

outlet_cc0 = cc[start] <<20;
outlet_cc1 = cc[start +1] <<20;
outlet_cc2 = cc[start +2] <<20;
outlet_cc3 = cc[start +3] <<20;]]></code.krate>
         <code.midihandler><![CDATA[if (status == (attr_channel-1) + MIDI_CONTROL_CHANGE) cc[data1] = data2;]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="ctrl/i" uuid="a3786816db6ea5bc6ac4193a5cccdb2c83b83496" name="i_11" x="2212" y="1582">
      <params>
         <int32 name="value" value="1610"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="b215266c-98ce-4176-b38c-cc73731f5124" name="tablestore_4" x="2282" y="1582">
      <params/>
      <attribs>
         <objref attributeName="table" obj="fred"/>
      </attribs>
      <object id="patch/object" uuid="b215266c-98ce-4176-b38c-cc73731f5124">
         <sDescription>writes and outputs 4 values to a table.</sDescription>
         <author>robert schirmer</author>
         <license>who cares</license>
         <inlets>
            <frac32 name="v0"/>
            <frac32 name="v1"/>
            <frac32 name="v2"/>
            <frac32 name="v3"/>
            <int32 name="offset" description="sets an offset for writing to the table"/>
         </inlets>
         <outlets>
            <frac32 name="v0"/>
            <frac32 name="v1"/>
            <frac32 name="v2"/>
            <frac32 name="v3"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t prev0;
      uint32_t prev1;
         uint32_t prev2;
      uint32_t prev3;]]></code.declaration>
         <code.init><![CDATA[prev0 = 0;
prev1 = 0;
prev2 = 0;
prev3 = 0;]]></code.init>
         <code.krate><![CDATA[


if (inlet_v0 != prev0){
attr_table.array[inlet_offset + 0]=__SSAT(inlet_v0,28)>>attr_table.GAIN;
outlet_v0= attr_table.array[__USAT((inlet_offset + 0),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev0 = inlet_v0;
}
else {outlet_v0= attr_table.array[__USAT((inlet_offset + 0),attr_table.LENGTHPOW)]<<attr_table.GAIN;}

if (inlet_v1 != prev1){
attr_table.array[inlet_offset + 1]=__SSAT(inlet_v1,28)>>attr_table.GAIN;
outlet_v1= attr_table.array[__USAT((inlet_offset + 1),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev1 = inlet_v1;
}
else {outlet_v1= attr_table.array[__USAT((inlet_offset + 1),attr_table.LENGTHPOW)]<<attr_table.GAIN;}

if (inlet_v2 != prev2){
attr_table.array[inlet_offset + 2]=__SSAT(inlet_v2,28)>>attr_table.GAIN;
outlet_v2= attr_table.array[__USAT((inlet_offset + 2),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev2 = inlet_v2;
}
else {outlet_v2= attr_table.array[__USAT((inlet_offset + 2),attr_table.LENGTHPOW)]<<attr_table.GAIN;}

if (inlet_v3 != prev3){
attr_table.array[inlet_offset + 3]=__SSAT(inlet_v3,28)>>attr_table.GAIN;
outlet_v3= attr_table.array[__USAT((inlet_offset + 3),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev3 = inlet_v3;
}
else {outlet_v3= attr_table.array[__USAT((inlet_offset + 3),attr_table.LENGTHPOW)]<<attr_table.GAIN;}



]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="8975fb6b-23e2-4ff9-92ce-ff1ac1535a72" name="poly_2" x="2422" y="1582">
      <params>
         <int32 name="startcc" value="20"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="8975fb6b-23e2-4ff9-92ce-ff1ac1535a72">
         <sDescription>outputs the state of 8 controllers starting from &apos;startcc&apos;</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <int32 name="startcc"/>
         </inlets>
         <outlets>
            <frac32.positive name="cc0"/>
            <frac32.positive name="cc1"/>
            <frac32.positive name="cc2"/>
            <frac32.positive name="cc3"/>
            <frac32.positive name="cc4"/>
            <frac32.positive name="cc5"/>
            <frac32.positive name="cc6"/>
            <frac32.positive name="cc7"/>
         </outlets>
         <displays/>
         <params>
            <int32 name="startcc" noLabel="true">
               <MinValue i="0"/>
               <MaxValue i="127"/>
            </int32>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[uint8_t cc [128];
uint8_t start;]]></code.declaration>
         <code.krate><![CDATA[start = (inlet_startcc + param_startcc);

outlet_cc0 = cc[start] <<20;
outlet_cc1 = cc[start +1] <<20;
outlet_cc2 = cc[start +2] <<20;
outlet_cc3 = cc[start +3] <<20;

outlet_cc4 = cc[start +4] <<20;
outlet_cc5 = cc[start +5] <<20;
outlet_cc6 = cc[start +6] <<20;
outlet_cc7 = cc[start +7] <<20;]]></code.krate>
         <code.midihandler><![CDATA[if (status == 15 + MIDI_CONTROL_CHANGE) cc[data1] = data2;]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="ctrl/i" uuid="a3786816db6ea5bc6ac4193a5cccdb2c83b83496" name="i_14" x="2534" y="1582">
      <params>
         <int32 name="value" value="1620"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="67d84b24-211a-4903-aead-1289d9adc246" name="tablestore_3" x="2632" y="1582">
      <params/>
      <attribs>
         <objref attributeName="table" obj="fred"/>
      </attribs>
      <object id="patch/object" uuid="67d84b24-211a-4903-aead-1289d9adc246">
         <sDescription>writes and outputs 8 values to a table.</sDescription>
         <author>robert schirmer</author>
         <license>who cares</license>
         <inlets>
            <frac32 name="v0"/>
            <frac32 name="v1"/>
            <frac32 name="v2"/>
            <frac32 name="v3"/>
            <frac32 name="v4"/>
            <frac32 name="v5"/>
            <frac32 name="v6"/>
            <frac32 name="v7"/>
            <int32 name="offset" description="sets an offset for writing to the table"/>
            <bool32.risingfalling name="thru" description="if &apos;thru&apos; is on,the input is passed through to the respective output without being stored."/>
         </inlets>
         <outlets>
            <frac32 name="v0"/>
            <frac32 name="v1"/>
            <frac32 name="v2"/>
            <frac32 name="v3"/>
            <frac32 name="v4"/>
            <frac32 name="v5"/>
            <frac32 name="v6"/>
            <frac32 name="v7"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t inletwrite;
uint32_t prev0;
      uint32_t prev1;
         uint32_t prev2;
      uint32_t prev3;
       uint32_t prev4;
      uint32_t prev5;
         uint32_t prev6;
      uint32_t prev7;]]></code.declaration>
         <code.init><![CDATA[prev0 = 0;
prev1 = 0;
prev2 = 0;
prev3 = 0;
prev4 = 0;
prev5 = 0;
prev6 = 0;
prev7 = 0;]]></code.init>
         <code.krate><![CDATA[inletwrite=1;
if (!inletwrite){
	prev0=inlet_v0;
	prev1=inlet_v1;
	prev2=inlet_v2;
	prev3=inlet_v3;
	prev4=inlet_v4;
	prev5=inlet_v5;
	prev6=inlet_v6;
	prev7=inlet_v7;
}

if ((inlet_v0 != prev0)&& (inletwrite)){
attr_table.array[inlet_offset + 0]=__SSAT(inlet_v0,28)>>attr_table.GAIN;
outlet_v0= attr_table.array[__USAT((inlet_offset + 0),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev0 = inlet_v0;
}
else {outlet_v0= attr_table.array[__USAT((inlet_offset + 0),attr_table.LENGTHPOW)]<<attr_table.GAIN;}
if (inlet_thru){outlet_v0 = inlet_v0;}

if ((inlet_v1 != prev1)&& (inletwrite)){
attr_table.array[inlet_offset + 1]=__SSAT(inlet_v1,28)>>attr_table.GAIN;
outlet_v1= attr_table.array[__USAT((inlet_offset + 1),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev1 = inlet_v1;
}
else {outlet_v1= attr_table.array[__USAT((inlet_offset + 1),attr_table.LENGTHPOW)]<<attr_table.GAIN;}
if (inlet_thru){outlet_v1 = inlet_v1;}

if ((inlet_v2 != prev2)&& (inletwrite)){
attr_table.array[inlet_offset + 2]=__SSAT(inlet_v2,28)>>attr_table.GAIN;
outlet_v2= attr_table.array[__USAT((inlet_offset + 2),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev2 = inlet_v2;
}
else {outlet_v2= attr_table.array[__USAT((inlet_offset + 2),attr_table.LENGTHPOW)]<<attr_table.GAIN;}
if (inlet_thru){outlet_v2 = inlet_v2;}

if ((inlet_v3 != prev3)&& (inletwrite)){
attr_table.array[inlet_offset + 3]=__SSAT(inlet_v3,28)>>attr_table.GAIN;
outlet_v3= attr_table.array[__USAT((inlet_offset + 3),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev3 = inlet_v3;
}
else {outlet_v3= attr_table.array[__USAT((inlet_offset + 3),attr_table.LENGTHPOW)]<<attr_table.GAIN;}
if (inlet_thru){outlet_v3 = inlet_v3;}

if ((inlet_v4 != prev4)&& (inletwrite)){
attr_table.array[inlet_offset + 4]=__SSAT(inlet_v4,28)>>attr_table.GAIN;
outlet_v4= attr_table.array[__USAT((inlet_offset + 4),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev4 = inlet_v4;
}
else {outlet_v4= attr_table.array[__USAT((inlet_offset + 4),attr_table.LENGTHPOW)]<<attr_table.GAIN;}
if (inlet_thru){outlet_v4 = inlet_v4;}

if ((inlet_v5 != prev5)&& (inletwrite)){
attr_table.array[inlet_offset + 5]=__SSAT(inlet_v5,28)>>attr_table.GAIN;
outlet_v5= attr_table.array[__USAT((inlet_offset + 5),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev5 = inlet_v5;
}
else {outlet_v5= attr_table.array[__USAT((inlet_offset + 5),attr_table.LENGTHPOW)]<<attr_table.GAIN;}
if (inlet_thru){outlet_v5 = inlet_v5;}

if ((inlet_v6 != prev6)&& (inletwrite)){
attr_table.array[inlet_offset + 6]=__SSAT(inlet_v6,28)>>attr_table.GAIN;
outlet_v6= attr_table.array[__USAT((inlet_offset + 6),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev6 = inlet_v6;
}
else {outlet_v6= attr_table.array[__USAT((inlet_offset + 6),attr_table.LENGTHPOW)]<<attr_table.GAIN;}
if (inlet_thru){outlet_v6 = inlet_v6;}

if ((inlet_v7 != prev7)&& (inletwrite)){
attr_table.array[inlet_offset + 7]=__SSAT(inlet_v7,28)>>attr_table.GAIN;
outlet_v7= attr_table.array[__USAT((inlet_offset + 7),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev7 = inlet_v7;
}
else {outlet_v7= attr_table.array[__USAT((inlet_offset + 7),attr_table.LENGTHPOW)]<<attr_table.GAIN;}
if (inlet_thru){outlet_v7 = inlet_v7;}]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="1744c9e1-f29c-42ae-985b-9ede15b2fbea" name="polycc_1" x="3150" y="1582">
      <params>
         <int32 name="startcc" value="40"/>
      </params>
      <attribs>
         <spinner attributeName="channel" value="16"/>
      </attribs>
      <object id="patch/object" uuid="1744c9e1-f29c-42ae-985b-9ede15b2fbea">
         <sDescription>outputs the state of 8 controllers starting from &apos;startcc&apos;</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <int32 name="startcc"/>
         </inlets>
         <outlets>
            <frac32.positive name="cc0"/>
            <frac32.positive name="cc1"/>
            <frac32.positive name="cc2"/>
            <frac32.positive name="cc3"/>
         </outlets>
         <displays/>
         <params>
            <int32 name="startcc" noLabel="true">
               <MinValue i="0"/>
               <MaxValue i="127"/>
            </int32>
         </params>
         <attribs>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t cc [128];
uint8_t start;]]></code.declaration>
         <code.krate><![CDATA[start = (inlet_startcc + param_startcc);

outlet_cc0 = cc[start] <<20;
outlet_cc1 = cc[start +1] <<20;
outlet_cc2 = cc[start +2] <<20;
outlet_cc3 = cc[start +3] <<20;]]></code.krate>
         <code.midihandler><![CDATA[if (status == (attr_channel-1) + MIDI_CONTROL_CHANGE) cc[data1] = data2;]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="ctrl/i" uuid="a3786816db6ea5bc6ac4193a5cccdb2c83b83496" name="i_10" x="3262" y="1582">
      <params>
         <int32 name="value" value="1640"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="e94655ae-ac93-4ba4-8e4d-f8176db7d981" name="tablestore_2" x="3318" y="1582">
      <params/>
      <attribs>
         <objref attributeName="table" obj="fred"/>
      </attribs>
      <object id="patch/object" uuid="e94655ae-ac93-4ba4-8e4d-f8176db7d981">
         <sDescription>writes and outputs 4 values to a table.</sDescription>
         <author>robert schirmer</author>
         <license>who cares</license>
         <inlets>
            <frac32 name="v0"/>
            <frac32 name="v1"/>
            <frac32 name="v2"/>
            <frac32 name="v3"/>
            <int32 name="offset" description="sets an offset for writing to the table"/>
         </inlets>
         <outlets>
            <frac32 name="v0"/>
            <frac32 name="v1"/>
            <frac32 name="v2"/>
            <frac32 name="v3"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t prev0;
      uint32_t prev1;
         uint32_t prev2;
      uint32_t prev3;]]></code.declaration>
         <code.init><![CDATA[prev0 = 0;
prev1 = 0;
prev2 = 0;
prev3 = 0;]]></code.init>
         <code.krate><![CDATA[


if (inlet_v0 != prev0){
attr_table.array[inlet_offset + 0]=__SSAT(inlet_v0,28)>>attr_table.GAIN;
outlet_v0= attr_table.array[__USAT((inlet_offset + 0),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev0 = inlet_v0;
}
else {outlet_v0= attr_table.array[__USAT((inlet_offset + 0),attr_table.LENGTHPOW)]<<attr_table.GAIN;}

if (inlet_v1 != prev1){
attr_table.array[inlet_offset + 1]=__SSAT(inlet_v1,28)>>attr_table.GAIN;
outlet_v1= attr_table.array[__USAT((inlet_offset + 1),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev1 = inlet_v1;
}
else {outlet_v1= attr_table.array[__USAT((inlet_offset + 1),attr_table.LENGTHPOW)]<<attr_table.GAIN;}

if (inlet_v2 != prev2){
attr_table.array[inlet_offset + 2]=__SSAT(inlet_v2,28)>>attr_table.GAIN;
outlet_v2= attr_table.array[__USAT((inlet_offset + 2),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev2 = inlet_v2;
}
else {outlet_v2= attr_table.array[__USAT((inlet_offset + 2),attr_table.LENGTHPOW)]<<attr_table.GAIN;}

if (inlet_v3 != prev3){
attr_table.array[inlet_offset + 3]=__SSAT(inlet_v3,28)>>attr_table.GAIN;
outlet_v3= attr_table.array[__USAT((inlet_offset + 3),attr_table.LENGTHPOW)]<<attr_table.GAIN;
prev3 = inlet_v3;
}
else {outlet_v3= attr_table.array[__USAT((inlet_offset + 3),attr_table.LENGTHPOW)]<<attr_table.GAIN;}



]]></code.krate>
      </object>
   </patchobj>
   <obj type="table/alloc 32b sdram" uuid="1a4546b7b52747ea765093ac97444601c44721e8" name="rec" x="1876" y="1680">
      <params/>
      <attribs>
         <combo attributeName="size" selection="1048576"/>
         <text attributeName="init">
            <sText><![CDATA[]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="audio/in left" uuid="d40e60b7641fe75af4d7c91b45bb038aacafc52e" name="in_2" x="1638" y="1806">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2954" y="1806" text="filter frequency"/>
   <comment type="patch/comment" x="3206" y="1806" text="filter depth"/>
   <comment type="patch/comment" x="3318" y="1806" text="filter input level"/>
   <comment type="patch/comment" x="1894" y="1814" text="loop record"/>
   <obj type="math/smooth" uuid="6c5d08c282bb08bff24af85b4891447f99bcbc97" name="smooth_1" x="2954" y="1820">
      <params>
         <frac32.u.map name="time" value="42.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_5" x="3052" y="1820">
      <params/>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_5" x="3206" y="1820">
      <params>
         <frac32.s.map name="freq" value="50.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_6" x="3318" y="1820">
      <params>
         <frac32.s.map name="freq" value="23.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="1764" y="1834">
      <params/>
      <attribs/>
   </obj>
   <obj type="rbrt/looper/lrec" uuid="2e5874a9-b38b-40bf-8dda-03863ab6ca59" name="lrec_1" x="1876" y="1834">
      <params>
         <frac32.s.map name="attack" value="-64.0"/>
         <bool32.tgl name="hard" value="0"/>
         <frac32.s.map name="release" value="-26.0"/>
         <bool32.tgl name="nofade" value="0"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="rec"/>
         <combo attributeName="slots" selection="1"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="2548" y="1848" text="loop play"/>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_1" x="2366" y="1862">
      <params>
         <frac32.u.map name="value" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="7238340b-e114-4fb5-91bb-2fce4ed1b381" name="ldrive_1" x="2548" y="1862">
      <params>
         <frac32.s.map name="speed" value="64.0"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="rec"/>
      </attribs>
      <object id="patch/object" uuid="7238340b-e114-4fb5-91bb-2fce4ed1b381">
         <sDescription>drives a phasor (saw-wave) for reading/writing data</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>ldrive.axh</helpPatch>
         <inlets>
            <frac32.positive name="offset" description="offset inside the table"/>
            <frac32.positive name="range" description="length of the area to index,or loop end"/>
            <frac32.positive name="startpoint" description="position inside range on reset"/>
            <frac32.positive name="loopstart" description="loopstart inside range"/>
            <frac32.bipolar name="speed" description="speed modulation"/>
            <bool32.risingfalling name="play" description="toggle playback"/>
            <bool32.rising name="r2offset" description="reset to &apos;offset&apos;"/>
            <bool32.rising name="r2start" description="reset to &apos;startpoint&apos;"/>
         </inlets>
         <outlets>
            <frac32buffer.positive name="pos" description="relative position inside table"/>
            <int32 name="count" description="loop count since reset"/>
            <int32 name="spos" description="playhead position inside range in samples"/>
            <int32 name="stotal" description="length of range in samples"/>
            <int32 name="sloop" description="length of loop in samples"/>
            <frac32.bipolar name="speed" description="total speed"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map name="speed" description="speed ,+ 64 normal speed forward, - 64 backward" noLabel="true">
               <DefaultValue v="64.0"/>
            </frac32.s.map>
         </params>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int32_t index;
bool rrs;
bool rro;
uint8_t shift;

int ntrig;

int32_t t_speed;
int32_t re;
int32_t rs;

int32_t start;
int32_t loopstart;
int32_t R;
int32_t lrange;
int32_t lstart;

uint32_t count;
bool add;
bool play;
bool mode;]]></code.declaration>
         <code.init><![CDATA[shift =     (27-attr_table.LENGTHPOW);
R=64;]]></code.init>
         <code.krate><![CDATA[loopstart = ___SMMUL(inlet_range,inlet_loopstart)<<5;
add = inlet_range;
//scale ranges up 8 times to achieve decent resolution for parameter speed
lrange = inlet_range << 3;
lstart = loopstart << 3;
start = ___SMMUL(inlet_range,inlet_startpoint)<< 8;
t_speed =  (((inlet_speed + param_speed ) << 3) >> attr_table.LENGTHPOW) + ((inlet_speed + param_speed ) > 0);


 play = inlet_play;
      if (inlet_r2start && (!rrs)) {
         index = start;
         rrs = 1;
         count = 0;
      }
      if (inlet_r2offset && (!rro)) {
         index = 0;
         rro = 1;
         count = 0;
      }
      if (!inlet_r2offset) rro = 0;
      if (!inlet_r2start) rrs = 0;

      if (!inlet_range) play = 0;

outlet_count = (inlet_play) ? count : -1;
outlet_spos =  (((index >> 3) >> shift) > 0) ? ((index >> 3)>> shift) : 0;
outlet_stotal = inlet_range >> shift;
outlet_sloop = (inlet_range - loopstart)>>shift;
outlet_speed = inlet_speed + param_speed;]]></code.krate>
         <code.srate><![CDATA[if (t_speed > 0){
      if (index >= lrange){index = lstart;count += add;} 
      } 
      else{
      if (index <= lstart){ index = lrange;count +=add;}  
          }    

if (play) {outlet_pos =  __USAT(((index >> 3) + inlet_offset),27);index += t_speed;}
else outlet_pos = 1 << 27;]]></code.srate>
      </object>
   </patchobj>
   <obj type="table/read interp" uuid="42918ec2255011ae3787cc5488c9b29980d796a8" name="read_1" x="2730" y="1876">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="3556" y="1932" text="invert 2 filters"/>
   <comment type="patch/comment" x="742" y="1946" text="lights matrix"/>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_7" x="3556" y="1946">
      <params>
         <frac32.s.map name="freq" value="23.0"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="d5c10f0f-e32a-4963-88fc-c0652c24b73d" name="inv_1" x="3654" y="1946">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="d5c10f0f-e32a-4963-88fc-c0652c24b73d">
         <sDescription>negate, negative, y = -x</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>math.axh</helpPatch>
         <inlets>
            <frac32 name="in" description="in"/>
         </inlets>
         <outlets>
            <frac32 name="out" description="out"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[outlet_out= -inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="4d4d165e-ab74-498b-825b-41dfe81674fe" name="+c_5" x="3724" y="1946">
      <params>
         <frac32.u.map name="c" value="64.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="4d4d165e-ab74-498b-825b-41dfe81674fe">
         <sDescription>add constant</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>math.axh</helpPatch>
         <inlets>
            <frac32 name="in" description="in"/>
         </inlets>
         <outlets>
            <frac32 name="out" description="out"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map name="c" noLabel="true"/>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[outlet_out= inlet_in+ param_c;]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="350" y="1960" text="step toggles"/>
   <patchobj type="patch/object" uuid="06b35083-5973-474a-8b1e-c4f103179ccb" name="matrix_3" x="252" y="1974">
      <params>
         <int32 name="start" value="0"/>
         <int32 name="length" value="128"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="fred"/>
      </attribs>
      <object id="patch/object" uuid="06b35083-5973-474a-8b1e-c4f103179ccb">
         <sDescription>toggles the elements of a table with the 8x8 matrix of a &apos;launchpad&apos;.
&apos;offset&apos; sets the table index to start at,
&apos;startpad&apos; sets the first pad of the launchpad&apos;s active area,
&apos;length&apos; sets the length of the area.
&apos;blocksize&apos; sets the size of the data-block.</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <int32 name="offset"/>
            <int32 name="start"/>
            <int32 name="length"/>
            <int32 name="matrix"/>
            <bool32.risingfalling name="active"/>
         </inlets>
         <outlets>
            <bool32.pulse name="trig" description="pulse if an element is set to ON"/>
            <int32 name="matrix" description="pad index if inside range"/>
         </outlets>
         <displays/>
         <params>
            <int32 name="start">
               <MinValue i="0"/>
               <MaxValue i="1000000"/>
            </int32>
            <int32 name="length">
               <MinValue i="0"/>
               <MaxValue i="1000000"/>
            </int32>
         </params>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int8_t _note1;
uint8_t _gate1;
uint8_t matrix;
uint8_t prevmatrix;
uint8_t lastmatrix;


uint8_t start;
uint8_t end;

uint8_t bitmask1 = 0b10001110;

int32_t _value;
int32_t _cc;
int32_t offset;

int rtrig;
int ntrig;
int blocksize;
bool op;]]></code.declaration>
         <code.krate><![CDATA[if (inlet_matrix==0){
offset = 129;
blocksize=1;
}
if (inlet_matrix==1){
offset = 513;
blocksize=1;
}
if (inlet_matrix==2){
offset = 897;
blocksize=1;
}
if (inlet_matrix==3){
offset = 1281+inlet_offset;
blocksize=0;
}

start = inlet_start + param_start;
end = (start + ( inlet_length + param_length));

matrix = (_note1 -((_note1 >> 4) << 3));

	
if ((matrix >= start) && (matrix < end)) {
	outlet_matrix = matrix;lastmatrix = matrix;

if (inlet_active>0){
if (((_gate1>0) && !ntrig) ||(matrix != prevmatrix))  {
      ntrig=1;
      op = attr_table.array[(matrix << blocksize) + offset];
      op = !op ;
         attr_table.array[(matrix << blocksize)+ offset]= (op * ((1 << 27)- 1 >>attr_table.GAIN));
         if (op) rtrig = 1;
   }
   if (!(_gate1>0)) ntrig=0;
}

}
else {
	if (!lastmatrix) lastmatrix = start;
outlet_matrix = lastmatrix;
}

prevmatrix = matrix;
outlet_trig = rtrig;
rtrig = 0;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + 0) && (data2)) {	
  if ((data1 -8) & bitmask1) {
    _note1 = data1;
    _gate1 = 1;
  }
} else if (((status == MIDI_NOTE_ON + 0) && (!data2))||          (status == MIDI_NOTE_OFF + 0)) {
  if (_note1 == data1) {
    _gate1 = 0;
  }

} else if ((status == 0 + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate1 = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="06b35083-5973-474a-8b1e-c4f103179ccb" name="matrix_2" x="392" y="1974">
      <params>
         <int32 name="start" value="0"/>
         <int32 name="length" value="128"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="fred"/>
      </attribs>
      <object id="patch/object" uuid="06b35083-5973-474a-8b1e-c4f103179ccb">
         <sDescription>toggles the elements of a table with the 8x8 matrix of a &apos;launchpad&apos;.
&apos;offset&apos; sets the table index to start at,
&apos;startpad&apos; sets the first pad of the launchpad&apos;s active area,
&apos;length&apos; sets the length of the area.
&apos;blocksize&apos; sets the size of the data-block.</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <int32 name="offset"/>
            <int32 name="start"/>
            <int32 name="length"/>
            <int32 name="matrix"/>
            <bool32.risingfalling name="active"/>
         </inlets>
         <outlets>
            <bool32.pulse name="trig" description="pulse if an element is set to ON"/>
            <int32 name="matrix" description="pad index if inside range"/>
         </outlets>
         <displays/>
         <params>
            <int32 name="start">
               <MinValue i="0"/>
               <MaxValue i="1000000"/>
            </int32>
            <int32 name="length">
               <MinValue i="0"/>
               <MaxValue i="1000000"/>
            </int32>
         </params>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int8_t _note1;
uint8_t _gate1;
uint8_t matrix;
uint8_t prevmatrix;
uint8_t lastmatrix;


uint8_t start;
uint8_t end;

uint8_t bitmask1 = 0b10001110;

int32_t _value;
int32_t _cc;
int32_t offset;

int rtrig;
int ntrig;
int blocksize;
bool op;]]></code.declaration>
         <code.krate><![CDATA[if (inlet_matrix==0){
offset = 128;
blocksize=1;
}
if (inlet_matrix==1){
offset = 512;
blocksize=1;
}
if (inlet_matrix==2){
offset = 896;
blocksize=1;
}
if (inlet_matrix==3){
offset = 1280+inlet_offset;
blocksize=0;
}

start = inlet_start + param_start;
end = (start + ( inlet_length + param_length));

matrix = (_note1 -((_note1 >> 4) << 3));

	
if ((matrix >= start) && (matrix < end)) {
	outlet_matrix = matrix;lastmatrix = matrix;

if ((!(inlet_active>0))&&(inlet_matrix<3)){
if (((_gate1>0) && !ntrig) ||(matrix != prevmatrix))  {
      ntrig=1;
      op = attr_table.array[(matrix << blocksize) + offset];
      op = !op ;
         attr_table.array[(matrix << blocksize)+ offset]= (op * ((1 << 27)- 1 >>attr_table.GAIN));
         attr_table.array[(matrix << blocksize)+ offset+1]= ((0 << 20)>>attr_table.GAIN);
         if (op) rtrig = 1;
   }
   if (!(_gate1>0)) ntrig=0;
}
if ((!(inlet_active>0))&&(inlet_matrix==3)){
if (((_gate1>0) && !ntrig) ||(matrix != prevmatrix))  {
      ntrig=1;
      op = attr_table.array[(matrix << blocksize) + offset];
      op = !op ;
         attr_table.array[(matrix << blocksize)+ offset]= (op * ((1 << 27)- 1 >>attr_table.GAIN));
         if (op) rtrig = 1;
   }
   if (!(_gate1>0)) ntrig=0;
}

}
else {
	if (!lastmatrix) lastmatrix = start;
outlet_matrix = lastmatrix;
}

prevmatrix = matrix;
outlet_trig = rtrig;
rtrig = 0;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + 0) && (data2)) {	
  if ((data1 -8) & bitmask1) {
    _note1 = data1;
    _gate1 = 1;
  }
} else if (((status == MIDI_NOTE_ON + 0) && (!data2))||          (status == MIDI_NOTE_OFF + 0)) {
  if (_note1 == data1) {
    _gate1 = 0;
  }

} else if ((status == 0 + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate1 = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="32561cca-fb33-41ee-8cb2-b3c81e76f032" name="matrix_1" x="672" y="1974">
      <params>
         <bool32.tgl name="active" value="1"/>
         <int32 name="length" value="64"/>
         <int32 name="start" value="0"/>
         <int32 name="offset" value="0"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="fred"/>
         <combo attributeName="device" selection="usb host port / LP"/>
         <combo attributeName="blocksize" selection="2"/>
         <combo attributeName="coloron" selection="green W"/>
         <combo attributeName="coloroff" selection="off"/>
      </attribs>
      <object id="patch/object" uuid="32561cca-fb33-41ee-8cb2-b3c81e76f032">
         <sDescription>visual feedback of table data for the novation launchpad (NOT working with a LP mark I)</sDescription>
         <author>Robert Schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <rotatedParams>true</rotatedParams>
         <inlets>
            <int32 name="offset" description="offset in the table to read from"/>
            <int32 name="start" description="display start modulation"/>
            <int32 name="length" description="display length modulation"/>
            <int32 name="coloron" description="color on modulation"/>
            <int32 name="coloroff" description="color off modulation"/>
            <bool32.risingfalling name="active" description="active??"/>
            <bool32.rising name="redraw"/>
            <int32 name="matrix"/>
         </inlets>
         <outlets>
            <int32 name="offset" description="offset through"/>
            <int32 name="start" description="start through"/>
            <int32 name="coloron" description="color on through"/>
            <int32 name="coloroff" description="color off through"/>
            <int32 name="blocksize"/>
         </outlets>
         <displays/>
         <params>
            <bool32.tgl name="active" description="active??"/>
            <int32 name="length" description="length of the area to display">
               <MinValue i="0"/>
               <MaxValue i="64"/>
            </int32>
            <int32 name="start" description="display start on the LP">
               <MinValue i="0"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="offset">
               <MinValue i="0"/>
               <MaxValue i="10000000"/>
            </int32>
         </params>
         <attribs>
            <objref name="table" description="name of the table to display"/>
            <combo name="device">
               <MenuEntries>
                  <string>usb host port / LP</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
               </CEntries>
            </combo>
            <combo name="blocksize">
               <MenuEntries>
                  <string>1</string>
                  <string>2</string>
                  <string>4</string>
                  <string>8</string>
                  <string>16</string>
                  <string>32</string>
                  <string>64</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
               </CEntries>
            </combo>
            <combo name="coloron">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
            <combo name="coloroff">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig;
int rtrig;
uint8_t map[64];
int i;
int vt;
int trigt;
int prevt[64];
int length;
int plength;
int blocksize;

uint8_t coloron;
uint8_t start;
uint8_t coloroff;
uint32_t offset;]]></code.declaration>
         <code.init><![CDATA[{ 
  int i;
  for(i=0;i<64;i++) prevt[i]= -666 ;}

  { 
  int i;
  for(i=0;i<64;i++) 

  map[i] = (((i >> 3)<< 3) + i);
}]]></code.init>
         <code.krate><![CDATA[if (inlet_matrix==0){
coloron = inlet_coloron + attr_coloron;
coloroff = inlet_coloroff + attr_coloroff;
offset = 128;
blocksize=1;
}
if (inlet_matrix==1){
coloron = inlet_coloron + attr_coloron;
coloroff = inlet_coloroff + attr_coloroff;
offset = 512;
blocksize=1;
}
if (inlet_matrix==2){
coloron = inlet_coloron + attr_coloron;
coloroff = inlet_coloroff + attr_coloroff;
offset = 896;
blocksize=1;
}
if (inlet_matrix==3){
coloron = inlet_coloron + attr_coloron;
coloroff = inlet_coloroff + attr_coloroff;
offset = 1280+inlet_offset;
blocksize=0;
}

start = inlet_start+ param_start;
length = inlet_length +param_length;

//redraw
if ((inlet_redraw > 0) && !ntrig){
	ntrig = 1;
{ 
  int ii;
  for(ii=0;ii<64;ii++) prevt[ii]= -666 ;}
  }
if (!(inlet_redraw > 0 )) ntrig = 0;


if (plength != length ){ i = 0;plength = length;}
    
//display steps
  if (inlet_active || param_active) { 
{ 
  i += 1;
  if (i == (length)) i = 0; 
  vt = attr_table.array[__USAT((offset + (i << blocksize)),attr_table.LENGTHPOW)]<<attr_table.GAIN;
if (prevt[i] != vt ) trigt = 0;
prevt[i] = vt;
if (vt && (!trigt)) {
MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON  ,map[(i + start)],(coloron));  trigt=1;
}
if ((!vt) && (!trigt)){
MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON ,map[(i + start)],(coloroff));  trigt=1;
}
 }
}

outlet_coloron = coloron;
outlet_coloroff = coloroff;
outlet_offset = offset;
outlet_start = start;
outlet_blocksize = blocksize;]]></code.krate>
      </object>
   </patchobj>
   <obj type="rbrt/launchpad/step disp" uuid="b82a72df-ed07-401c-91b0-46590bbed2fb" name="step_8" x="980" y="1974">
      <params>
         <bool32.tgl name="active" value="1"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="fred"/>
         <combo attributeName="device" selection="usb host port / LP"/>
         <combo attributeName="color" selection="red S"/>
      </attribs>
   </obj>
   <obj type="logic/change" uuid="96e39ae624c3f3c952cec4a95e1986ee0104f718" name="change_1" x="2044" y="1974">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_3" x="2156" y="1974">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/flipflop toggle" uuid="195e489e5fc3d275944b0de56c7a91c8641ea22a" name="flipflop_7" x="2254" y="1974">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_2" x="2380" y="1974">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2730" y="1974" text="loop overdub"/>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_15" x="2982" y="1974">
      <params>
         <frac32.u.map name="value" value="19.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rbrt/looper/ldub" uuid="5902f84f-1523-451f-bddb-7f12c8ced857" name="ldub_1" x="2730" y="1988">
      <params>
         <frac32.u.map name="feedback" value="64.0"/>
         <frac32.s.map name="attack" value="-63.0"/>
         <bool32.tgl name="hard" value="0"/>
         <frac32.s.map name="release" value="0.0"/>
         <bool32.tgl name="nofade" value="0"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="rec"/>
      </attribs>
   </obj>
   <obj type="rbrt/patching/loadbang" uuid="45d1f29d-ac62-4e5b-86f8-2201d2f6c689" name="loadbang_1" x="2030" y="2044">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="647c1a0f-769a-4e1d-b08a-a94a7d85d252" name="or_3" x="2170" y="2044">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="647c1a0f-769a-4e1d-b08a-a94a7d85d252">
         <sDescription>logic OR with 4 inputs</sDescription>
         <author>Alex</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <bool32 name="i1" description="input 1"/>
            <bool32 name="i2" description="input 2"/>
            <bool32 name="i3" description="input 1"/>
            <bool32 name="i4" description="input 2"/>
         </inlets>
         <outlets>
            <bool32 name="o" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[outlet_o = (inlet_i1)||(inlet_i2)||(inlet_i3)||(inlet_i4);
]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="2940" y="2086" text="avoid clipping when recording"/>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_18" x="2548" y="2100">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="c16a625a661f40e4b359db604dcd00b3befcdbe3" name="*_1" x="2982" y="2100">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="faedbea4612d9bd3644d6d3bf31946d848a70e19" name="+_1" x="3052" y="2100">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_12" x="3290" y="2128">
      <params/>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_3" x="3360" y="2128">
      <params/>
      <attribs/>
   </obj>
   <obj type="rbrt/patching/loadbang" uuid="45d1f29d-ac62-4e5b-86f8-2201d2f6c689" name="loadbang_4" x="112" y="2184">
      <params/>
      <attribs/>
   </obj>
   <obj type="timer/delayedpulse" uuid="3f05ee534ca67755fb20c7437f9e4de3d4c2f73d" name="delayedpulse_1" x="238" y="2184">
      <params>
         <frac32.s.map name="delay" value="-27.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="532" y="2226" text="lights buttons"/>
   <obj type="patch/bankindex" uuid="943bd281-10a5-4994-9876-11a3b1fbde8a" name="bankindex_1" x="112" y="2240">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="3c443e9c-60fa-47b3-b8de-bbe0bfc936bb" name="right_2" x="364" y="2254">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="4"/>
         <combo attributeName="on" selection="green S"/>
         <combo attributeName="off" selection="off"/>
      </attribs>
      <object id="patch/object" uuid="3c443e9c-60fa-47b3-b8de-bbe0bfc936bb">
         <sDescription>sets a right row button on the &apos;launchpad&apos; to the defined color</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <bool32.risingfalling name="on"/>
            <int32 name="coloron"/>
            <int32 name="coloroff"/>
            <bool32.rising name="redraw"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <combo name="device">
               <MenuEntries>
                  <string>usb host port / LP</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
               </CEntries>
            </combo>
            <spinner name="button" MinValue="0" MaxValue="7" DefaultValue="0"/>
            <combo name="on">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
            <combo name="off">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t b;
uint8_t prevb;
int ntrig;]]></code.declaration>
         <code.krate><![CDATA[b  = (inlet_on)?(attr_on+inlet_coloron):(attr_off + inlet_coloroff);
if (((b != prevb ) || (inlet_redraw > 0)) && (!ntrig))
{ MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON, ((attr_button << 4) + 8), b);ntrig = 1; prevb=b;}
else ntrig = 0;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="3c443e9c-60fa-47b3-b8de-bbe0bfc936bb" name="right_3" x="518" y="2254">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="5"/>
         <combo attributeName="on" selection="green S"/>
         <combo attributeName="off" selection="off"/>
      </attribs>
      <object id="patch/object" uuid="3c443e9c-60fa-47b3-b8de-bbe0bfc936bb">
         <sDescription>sets a right row button on the &apos;launchpad&apos; to the defined color</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <bool32.risingfalling name="on"/>
            <int32 name="coloron"/>
            <int32 name="coloroff"/>
            <bool32.rising name="redraw"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <combo name="device">
               <MenuEntries>
                  <string>usb host port / LP</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
               </CEntries>
            </combo>
            <spinner name="button" MinValue="0" MaxValue="7" DefaultValue="0"/>
            <combo name="on">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
            <combo name="off">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t b;
uint8_t prevb;
int ntrig;]]></code.declaration>
         <code.krate><![CDATA[b  = (inlet_on)?(attr_on+inlet_coloron):(attr_off + inlet_coloroff);
if (((b != prevb ) || (inlet_redraw > 0)) && (!ntrig))
{ MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON, ((attr_button << 4) + 8), b);ntrig = 1; prevb=b;}
else ntrig = 0;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="3c443e9c-60fa-47b3-b8de-bbe0bfc936bb" name="right_4" x="672" y="2254">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="6"/>
         <combo attributeName="on" selection="green S"/>
         <combo attributeName="off" selection="off"/>
      </attribs>
      <object id="patch/object" uuid="3c443e9c-60fa-47b3-b8de-bbe0bfc936bb">
         <sDescription>sets a right row button on the &apos;launchpad&apos; to the defined color</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <bool32.risingfalling name="on"/>
            <int32 name="coloron"/>
            <int32 name="coloroff"/>
            <bool32.rising name="redraw"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <combo name="device">
               <MenuEntries>
                  <string>usb host port / LP</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
               </CEntries>
            </combo>
            <spinner name="button" MinValue="0" MaxValue="7" DefaultValue="0"/>
            <combo name="on">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
            <combo name="off">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t b;
uint8_t prevb;
int ntrig;]]></code.declaration>
         <code.krate><![CDATA[b  = (inlet_on)?(attr_on+inlet_coloron):(attr_off + inlet_coloroff);
if (((b != prevb ) || (inlet_redraw > 0)) && (!ntrig))
{ MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON, ((attr_button << 4) + 8), b);ntrig = 1; prevb=b;}
else ntrig = 0;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="934458e3-a489-40e4-b486-0bdc98d36be4" name="demux_4" x="868" y="2268">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="934458e3-a489-40e4-b486-0bdc98d36be4">
         <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>demux 3.axh</helpPatch>
         <inlets>
            <int32.positive name="s" description="select"/>
            <bool32 name="bang"/>
         </inlets>
         <outlets>
            <int32 name="o0" description="output 0"/>
            <int32 name="o1" description="output 1"/>
            <int32 name="o2" description="output 2"/>
            <int32 name="o3" description="output 3"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[if (inlet_bang>0){outlet_o3=0;}

else if (!(inlet_bang>0)){
switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = 16;
         outlet_o1 = 0;
         outlet_o2 = 0;
         outlet_o3 = 0;
         break;
      case 1: 
         outlet_o0 = 0;
         outlet_o1 = 16;
         outlet_o2 = 0;
         outlet_o3 = 0;
         break;
      case 2: 
         outlet_o0 = 0;
         outlet_o1 = 0;
         outlet_o2 = 16;
         outlet_o3 = 0;
         break;
      case 3: 
         outlet_o0 = 0;
         outlet_o1 = 0;
         outlet_o2 = 0;
         outlet_o3 = 16;
         break;
      default:
         outlet_o0 = 0;
         outlet_o1 = 0;
         outlet_o2 = 0;
         outlet_o3 = 16;
}
}]]></code.krate>
      </object>
   </patchobj>
   <obj type="rbrt/midi/out/cc send 4" uuid="29673ede-ad04-49ea-bb7a-3ecf7cdcf098" name="cc_1" x="966" y="2268">
      <params>
         <int32 name="startcc" value="104"/>
      </params>
      <attribs>
         <combo attributeName="device" selection="usb host port 1"/>
         <spinner attributeName="channel" value="1"/>
      </attribs>
   </obj>
   <obj type="rbrt/launchpad/right disp" uuid="515d095e-931a-4bff-a560-f99140e1fcb6" name="right_5" x="1120" y="2268">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="7"/>
         <combo attributeName="on" selection="red M"/>
         <combo attributeName="off" selection="green W"/>
      </attribs>
   </obj>
   <obj type="rbrt/launchpad/top disp" uuid="53640b5e-2345-494e-9be6-6130e20986e2" name="top_3" x="1274" y="2282">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="4"/>
         <combo attributeName="on" selection="orange S"/>
         <combo attributeName="off" selection="yellow W"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="a60c1f98-1290-4d49-a712-63d019d12654" name="in_1" x="112" y="2296">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="a60c1f98-1290-4d49-a712-63d019d12654">
         <sDescription>recieves note 10 and 11 channel 15 to use for patch switching</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="down" description="key pressed?"/>
            <bool32 name="up"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[uint8_t _gate;
uint8_t _gate2;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;
_gate2 = 0;]]></code.init>
         <code.krate><![CDATA[outlet_down= _gate<<27;
outlet_up= _gate2<<27;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + 14) && (data2)) {if (data1 == 10) {
   _gate = 1;
}
if (data1 ==11) {
   _gate2 = 1;
}
} else if (((status == MIDI_NOTE_ON + 14) && (!data2))||          (status == MIDI_NOTE_OFF + 14)) {
  if (data1 == 10) {
    _gate = 0;
  }
  if (data1 == 11) {
    _gate2 = 0;
  }
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
  _gate2 = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="math/+1" uuid="13c1a4574bb81783beb8839e81782b9a34e3fc17" name="+1_1" x="210" y="2296">
      <params/>
      <attribs/>
   </obj>
   <obj type="patch/load i" uuid="b79124f5b7d1e8b39e187677ddab6260ce8c60a3" name="load_1" x="280" y="2296">
      <params/>
      <attribs/>
   </obj>
   <obj type="const/i" uuid="e202f44b2df17ae0b3e663b98ea6b14c8ff00408" name="i_5" x="1736" y="2296">
      <params/>
      <attribs>
         <spinner attributeName="value" value="64"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="1582" y="2338" text="filter sequence play"/>
   <obj type="math/-1" uuid="5fd46bab471bb6509ae83de702dea72933683a98" name="-1_1" x="210" y="2352">
      <params/>
      <attribs/>
   </obj>
   <obj type="patch/load i" uuid="b79124f5b7d1e8b39e187677ddab6260ce8c60a3" name="load_2" x="280" y="2352">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="adef9b0f-d36f-4e7e-acc0-cc9020c77af3" name="keyb_7" x="1484" y="2352">
      <params/>
      <attribs>
         <spinner attributeName="channel" value="14"/>
      </attribs>
      <object id="patch/object" uuid="adef9b0f-d36f-4e7e-acc0-cc9020c77af3">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <frac32.bipolar name="note" description="midi note number (-64..63)"/>
            <bool32 name="gate" description="key pressed, no retrigger legato"/>
            <bool32 name="gate2" description="key pressed, retrigger on legato"/>
            <frac32.positive name="velocity" description="note-on velocity"/>
            <frac32.positive name="releaseVelocity" description="note-off velocity"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int8_t _note;
int32_t _gate;
int32_t _gate2;
uint8_t _velo;
uint8_t _rvelo;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;
_note = 0;]]></code.init>
         <code.krate><![CDATA[outlet_note= _note<<21;
outlet_gate= _gate;
outlet_gate2= _gate2;
_gate2 = _gate;
outlet_velocity= _velo<<20;
outlet_releaseVelocity= _rvelo<<20;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {
  _velo = data2;
  _note = data1-64;
  _gate = 1<<27;
  _gate2 = 0;
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||
          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (_note == data1-64) {
    _rvelo = data2;
    _gate = 0;
    _note = data1-64;
  }
} else if ((status == (attr_channel-1) + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="env/ahd" uuid="2139369d6de2ba5ddf76e602d1d25df653ca9eed" name="ahd_1" x="1596" y="2352">
      <params>
         <frac32.s.map name="a" value="-63.0"/>
         <frac32.s.map name="d" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_3" x="1708" y="2352">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/inv" uuid="565521d3699b36d8095aa1c79b9ad0046fb133ce" name="inv_4" x="1778" y="2352">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_2" x="1848" y="2352">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2282" y="2352" text="sequenced filter"/>
   <comment type="patch/comment" x="3192" y="2366" text="filter 3"/>
   <comment type="patch/comment" x="2240" y="2380" text="filter 1"/>
   <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_1" x="1918" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/-c" uuid="bc70bed87e5405985ade03f4806b9450609a9093" name="-c_1" x="2044" y="2394">
      <params>
         <frac32.u.map name="c" value="12.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="6b4dd3da49f98e54900f6c20031f38f4624fa364" name="gain_3" x="2100" y="2394">
      <params>
         <frac32.u.map name="amp" value="12.899999618530273"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_1" x="2198" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_1" x="2324" y="2394">
      <params>
         <frac32.s.map name="freq" value="1.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/+c" uuid="13eec32bd8ad57dd0bb18a02566cc0a117d320e3" name="+c_2" x="2436" y="2394">
      <params>
         <frac32.u.map name="c" value="12.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_4" x="2506" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_8" x="2576" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="TSG/math/limit" uuid="96549a9d-cf2a-4b5c-b9b1-58b08745c3fe" name="limit_3" x="2646" y="2394">
      <params/>
      <attribs>
         <spinner attributeName="max" value="64"/>
         <spinner attributeName="min" value="-64"/>
      </attribs>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="max" x="2744" y="2394">
      <params>
         <frac32.u.map name="value" value="53.70000076293945"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_8" x="2814" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_1" x="2870" y="2394">
      <params>
         <frac32.u.map name="amp" value="17.5"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="b22acb60-48df-4da1-bbf3-2f5a420b9c70" name="lp_1" x="2968" y="2394">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="b22acb60-48df-4da1-bbf3-2f5a420b9c70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32.bipolar name="filter"/>
            <frac32.positive name="reso"/>
         </inlets>
         <outlets>
            <frac32buffer name="out" description="filter output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t damp = (0x80<<24) - (inlet_reso<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
MTOFEXTENDED(inlet_filter,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = inlet_in - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band = (___SMMUL(freq,high)<<1) + band;// - drive*band*band*band;
int32_t out1 = low;
outlet_out = out1;]]></code.srate>
      </object>
   </patchobj>
   <obj type="math/-c" uuid="bc70bed87e5405985ade03f4806b9450609a9093" name="-c_3" x="3136" y="2394">
      <params>
         <frac32.u.map name="c" value="7.849999904632568"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="6b4dd3da49f98e54900f6c20031f38f4624fa364" name="gain_5" x="3192" y="2394">
      <params>
         <frac32.u.map name="amp" value="7.699999809265137"/>
      </params>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_3" x="3290" y="2394">
      <params>
         <frac32.s.map name="freq" value="-3.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_3" x="3388" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+c" uuid="13eec32bd8ad57dd0bb18a02566cc0a117d320e3" name="+c_3" x="3528" y="2394">
      <params>
         <frac32.u.map name="c" value="19.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_6" x="3598" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_3" x="3682" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="TSG/math/limit" uuid="96549a9d-cf2a-4b5c-b9b1-58b08745c3fe" name="limit_1" x="3766" y="2394">
      <params/>
      <attribs>
         <spinner attributeName="max" value="64"/>
         <spinner attributeName="min" value="-64"/>
      </attribs>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_13" x="3864" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/inv" uuid="565521d3699b36d8095aa1c79b9ad0046fb133ce" name="inv_2" x="3920" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_14" x="3976" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_7" x="4032" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="max__" x="4116" y="2394">
      <params>
         <frac32.u.map name="value" value="52.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_10" x="4186" y="2394">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_2" x="4242" y="2394">
      <params>
         <frac32.u.map name="amp" value="34.5"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="ef7b0fbd-51d7-4efa-82af-16b6fa944e52" name="hp_1" x="4368" y="2394">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="ef7b0fbd-51d7-4efa-82af-16b6fa944e52">
         <sDescription>Highpass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32.bipolar name="pitch"/>
            <frac32.positive name="reso"/>
         </inlets>
         <outlets>
            <frac32buffer name="out" description="filter output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t damp = (0x80<<24) - (inlet_reso<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
MTOFEXTENDED((inlet_pitch),alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = inlet_in - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band = (___SMMUL(freq,high)<<1) + band;// - drive*band*band*band;
int32_t out1 = high;
outlet_out = out1;]]></code.srate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="0a57c013-268c-4870-84a5-806aca382ec2" name="i_1" x="140" y="2422">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="0a57c013-268c-4870-84a5-806aca382ec2">
         <sDescription>positive integer control</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>ctrl.axh</helpPatch>
         <inlets>
            <bool32 name="active"/>
            <bool32 name="active2"/>
         </inlets>
         <outlets>
            <int32.bipolar name="out"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[if (inlet_active>0)
{outlet_out= 2;}
else if(!(inlet_active2>0))
{outlet_out = (-16);}
else if (!(inlet_active>0))
{outlet_out = 0;}]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="2659beb0-3a83-45bc-8ea9-f857a1a391d5" name="top_1" x="266" y="2464">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="7"/>
         <combo attributeName="on" selection="red S"/>
         <combo attributeName="off" selection="green W"/>
      </attribs>
      <object id="patch/object" uuid="2659beb0-3a83-45bc-8ea9-f857a1a391d5">
         <sDescription>sets a top row button on the &apos;launchpad&apos; to the defined color</sDescription>
         <author>robert schirmer</author>
         <license>BSD</license>
         <helpPatch>launchpad.axh</helpPatch>
         <inlets>
            <bool32.risingfalling name="on"/>
            <int32 name="coloron"/>
            <int32 name="coloroff"/>
            <bool32.rising name="redraw"/>
            <bool32 name="active"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <combo name="device">
               <MenuEntries>
                  <string>usb host port / LP</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
               </CEntries>
            </combo>
            <spinner name="button" MinValue="0" MaxValue="7" DefaultValue="0"/>
            <combo name="on">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
            <combo name="off">
               <MenuEntries>
                  <string>off</string>
                  <string>red W</string>
                  <string>red M</string>
                  <string>red S</string>
                  <string>orange W</string>
                  <string>orange S</string>
                  <string>green W</string>
                  <string>green M</string>
                  <string>green S</string>
                  <string>lime 1 W</string>
                  <string>lime 1 S</string>
                  <string>lime 2</string>
                  <string>yellow W</string>
                  <string>yellow M</string>
                  <string>yellow S</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>18</string>
                  <string>35</string>
                  <string>16</string>
                  <string>32</string>
                  <string>48</string>
                  <string>33</string>
                  <string>50</string>
                  <string>49</string>
                  <string>17</string>
                  <string>34</string>
                  <string>51</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t b;
uint8_t prevb;
int ntrig;]]></code.declaration>
         <code.krate><![CDATA[b  = (inlet_on)?(attr_on+inlet_coloron):(attr_off + inlet_coloroff);
if (((b != prevb ) || (inlet_redraw > 0)) && (!ntrig))
{ MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE, (104 + attr_button), b);ntrig = 1; prevb=b;}
else ntrig = 0;]]></code.krate>
      </object>
   </patchobj>
   <obj type="rbrt/launchpad/right disp" uuid="515d095e-931a-4bff-a560-f99140e1fcb6" name="right_6" x="518" y="2464">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="0"/>
         <combo attributeName="on" selection="red S"/>
         <combo attributeName="off" selection="green W"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="0a57c013-268c-4870-84a5-806aca382ec2" name="i_2" x="420" y="2478">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="0a57c013-268c-4870-84a5-806aca382ec2">
         <sDescription>positive integer control</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>ctrl.axh</helpPatch>
         <inlets>
            <bool32 name="active"/>
         </inlets>
         <outlets>
            <int32.positive name="out" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[if (inlet_active>0)
{outlet_out= 2;}
else if (!(inlet_active>0))
{outlet_out = 0;}]]></code.krate>
      </object>
   </patchobj>
   <obj type="rbrt/launchpad/right disp" uuid="515d095e-931a-4bff-a560-f99140e1fcb6" name="right_8" x="742" y="2506">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="2"/>
         <combo attributeName="on" selection="green S"/>
         <combo attributeName="off" selection="yellow W"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="3276" y="2534" text="filter 4"/>
   <comment type="patch/comment" x="2254" y="2548" text="filter2"/>
   <obj type="math/-c" uuid="bc70bed87e5405985ade03f4806b9450609a9093" name="-c_2" x="2044" y="2562">
      <params>
         <frac32.u.map name="c" value="4.849999904632568"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="6b4dd3da49f98e54900f6c20031f38f4624fa364" name="gain_4" x="2100" y="2562">
      <params>
         <frac32.u.map name="amp" value="7.699999809265137"/>
      </params>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_2" x="2198" y="2562">
      <params>
         <frac32.s.map name="freq" value="11.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_2" x="2296" y="2562">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+c" uuid="13eec32bd8ad57dd0bb18a02566cc0a117d320e3" name="+c_1" x="2436" y="2562">
      <params>
         <frac32.u.map name="c" value="2.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_5" x="2506" y="2562">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_9" x="2576" y="2562">
      <params/>
      <attribs/>
   </obj>
   <obj type="TSG/math/limit" uuid="96549a9d-cf2a-4b5c-b9b1-58b08745c3fe" name="limit_4" x="2646" y="2562">
      <params/>
      <attribs>
         <spinner attributeName="max" value="64"/>
         <spinner attributeName="min" value="-64"/>
      </attribs>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_15" x="2786" y="2562">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/inv" uuid="565521d3699b36d8095aa1c79b9ad0046fb133ce" name="inv_5" x="2842" y="2562">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_16" x="2898" y="2562">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_10" x="2954" y="2562">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="max_" x="3052" y="2562">
      <params>
         <frac32.u.map name="value" value="50.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_9" x="3122" y="2562">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_3" x="3178" y="2562">
      <params>
         <frac32.u.map name="amp" value="18.5"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="b22acb60-48df-4da1-bbf3-2f5a420b9c70" name="lp_2" x="3276" y="2562">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="b22acb60-48df-4da1-bbf3-2f5a420b9c70">
         <sDescription>Low pass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32.bipolar name="filter"/>
            <frac32.positive name="reso"/>
         </inlets>
         <outlets>
            <frac32buffer name="out" description="filter output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t damp = (0x80<<24) - (inlet_reso<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
MTOFEXTENDED(inlet_filter,alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = inlet_in - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band = (___SMMUL(freq,high)<<1) + band;// - drive*band*band*band;
int32_t out1 = low;
outlet_out = out1;]]></code.srate>
      </object>
   </patchobj>
   <obj type="math/-c" uuid="bc70bed87e5405985ade03f4806b9450609a9093" name="-c_4" x="3388" y="2590">
      <params>
         <frac32.u.map name="c" value="8.349999904632568"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="6b4dd3da49f98e54900f6c20031f38f4624fa364" name="gain_6" x="3444" y="2590">
      <params>
         <frac32.u.map name="amp" value="8.199999809265137"/>
      </params>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_4" x="3542" y="2590">
      <params>
         <frac32.s.map name="freq" value="3.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_4" x="3640" y="2590">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+c" uuid="13eec32bd8ad57dd0bb18a02566cc0a117d320e3" name="+c_4" x="3780" y="2590">
      <params>
         <frac32.u.map name="c" value="39.349998474121094"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_7" x="3850" y="2590">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_5" x="3920" y="2590">
      <params/>
      <attribs/>
   </obj>
   <obj type="TSG/math/limit" uuid="96549a9d-cf2a-4b5c-b9b1-58b08745c3fe" name="limit_2" x="4004" y="2590">
      <params/>
      <attribs>
         <spinner attributeName="max" value="64"/>
         <spinner attributeName="min" value="-64"/>
      </attribs>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="max___" x="4130" y="2590">
      <params>
         <frac32.u.map name="value" value="44.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_11" x="4200" y="2590">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_4" x="4256" y="2590">
      <params>
         <frac32.u.map name="amp" value="34.5"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="ef7b0fbd-51d7-4efa-82af-16b6fa944e52" name="hp_2" x="4354" y="2590">
      <params>
         <frac32.s.map name="pitch" value="0.0"/>
         <frac32.u.map name="reso" value="44.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="ef7b0fbd-51d7-4efa-82af-16b6fa944e52">
         <sDescription>Highpass filter, state-variable type</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>filter.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="filter input"/>
            <frac32.bipolar name="pitch"/>
            <frac32.positive name="reso"/>
         </inlets>
         <outlets>
            <frac32buffer name="out" description="filter output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch"/>
            <frac32.u.map.filterq name="reso"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t low;
int32_t band;]]></code.declaration>
         <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
         <code.krate><![CDATA[int32_t damp = (0x80<<24) - (inlet_reso<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
MTOFEXTENDED((inlet_pitch),alpha);
SINE2TINTERP(alpha,freq);]]></code.krate>
         <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = inlet_in - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band = (___SMMUL(freq,high)<<1) + band;// - drive*band*band*band;
int32_t out1 = high;
outlet_out = out1;]]></code.srate>
      </object>
   </patchobj>
   <obj type="rbrt/launchpad/right disp" uuid="515d095e-931a-4bff-a560-f99140e1fcb6" name="right_7" x="518" y="2618">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="1"/>
         <combo attributeName="on" selection="orange S"/>
         <combo attributeName="off" selection="green W"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="1584" y="2644" text="sample serquence play for gate"/>
   <obj type="rbrt/launchpad/top disp" uuid="53640b5e-2345-494e-9be6-6130e20986e2" name="top_2" x="266" y="2646">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port / LP"/>
         <spinner attributeName="button" value="6"/>
         <combo attributeName="on" selection="orange W"/>
         <combo attributeName="off" selection="green W"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="adef9b0f-d36f-4e7e-acc0-cc9020c77af3" name="keyb_9" x="1526" y="2660">
      <params/>
      <attribs>
         <spinner attributeName="channel" value="13"/>
      </attribs>
      <object id="patch/object" uuid="adef9b0f-d36f-4e7e-acc0-cc9020c77af3">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <frac32.bipolar name="note" description="midi note number (-64..63)"/>
            <bool32 name="gate" description="key pressed, no retrigger legato"/>
            <bool32 name="gate2" description="key pressed, retrigger on legato"/>
            <frac32.positive name="velocity" description="note-on velocity"/>
            <frac32.positive name="releaseVelocity" description="note-off velocity"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int8_t _note;
int32_t _gate;
int32_t _gate2;
uint8_t _velo;
uint8_t _rvelo;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;
_note = 0;]]></code.init>
         <code.krate><![CDATA[outlet_note= _note<<21;
outlet_gate= _gate;
outlet_gate2= _gate2;
_gate2 = _gate;
outlet_velocity= _velo<<20;
outlet_releaseVelocity= _rvelo<<20;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {
  _velo = data2;
  _note = data1-64;
  _gate = 1<<27;
  _gate2 = 0;
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||
          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (_note == data1-64) {
    _rvelo = data2;
    _gate = 0;
    _note = -64;
  }
} else if ((status == (attr_channel-1) + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="env/ahd" uuid="2139369d6de2ba5ddf76e602d1d25df653ca9eed" name="ahd_5" x="1624" y="2674">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-62.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_2" x="1736" y="2674">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/inv" uuid="565521d3699b36d8095aa1c79b9ad0046fb133ce" name="inv_6" x="1806" y="2674">
      <params/>
      <attribs/>
   </obj>
   <obj type="const/i" uuid="e202f44b2df17ae0b3e663b98ea6b14c8ff00408" name="i_6" x="1876" y="2674">
      <params/>
      <attribs>
         <spinner attributeName="value" value="64"/>
      </attribs>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_6" x="1974" y="2674">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_2" x="2310" y="2674">
      <params>
         <frac32.u.map name="value" value="49.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_3" x="2380" y="2674">
      <params>
         <frac32.u.map name="value" value="59.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_4" x="2450" y="2674">
      <params>
         <frac32.u.map name="value" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_5" x="2520" y="2674">
      <params>
         <frac32.u.map name="value" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2366" y="2730" text="filter compression"/>
   <obj type="mix/mix 2 g" uuid="221f038da51943034a75e442c90624fcebfe6112" name="mix_1" x="1946" y="2758">
      <params>
         <frac32.u.map name="gain1" value="39.0"/>
         <frac32.u.map name="gain2" value="25.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 2 g" uuid="221f038da51943034a75e442c90624fcebfe6112" name="mix_2" x="2072" y="2758">
      <params>
         <frac32.u.map name="gain1" value="18.0"/>
         <frac32.u.map name="gain2" value="21.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2436" y="2758" text="filter gate"/>
   <comment type="patch/comment" x="2632" y="2758" text="filter level"/>
   <obj type="mix/xfade" uuid="375dc91d218e96cdc9cbc7e92adb48f705ef701a" name="xfade_1" x="2226" y="2772">
      <params/>
      <attribs/>
   </obj>
   <obj type="sss/dyn/limiter" uuid="d2ff4e06-be1a-43ac-bcaa-3833d25d4fae" name="limiter_1" x="2310" y="2772">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_2" x="2436" y="2772">
      <params>
         <frac32.u.map name="amp" value="17.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_8" x="2562" y="2772">
      <params/>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_9" x="2632" y="2772">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2898" y="2786" text="looplevel"/>
   <comment type="patch/comment" x="2982" y="2786" text="dry&amp;loop"/>
   <comment type="patch/comment" x="3066" y="2786" text="filter gate"/>
   <comment type="patch/comment" x="3136" y="2786" text="sample gate"/>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_11" x="2898" y="2800">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="faedbea4612d9bd3644d6d3bf31946d848a70e19" name="+_4" x="2982" y="2800">
      <params/>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_12" x="3066" y="2800">
      <params/>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_13" x="3136" y="2800">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_6" x="2576" y="2856">
      <params>
         <frac32.u.map name="value" value="55.5"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2716" y="2856" text="sample sequence play"/>
   <patcher type="patch/patcher" uuid="b4ceaf52-9232-4e2d-959e-28643775e63b" name="patcher_1" x="2702" y="2870">
      <params/>
      <attribs>
         <combo attributeName="poly" selection="3"/>
         <combo attributeName="midichannel" selection="13"/>
         <combo attributeName="mididevice" selection="omni"/>
         <combo attributeName="midiport" selection="omni"/>
      </attribs>
      <subpatch appVersion="1.0.12">
         <patchobj type="patch/object" uuid="1f6c5579-9723-4f1f-b28f-ab41a6f52f96" name="keyb_10" x="364" y="182">
            <params/>
            <attribs>
               <spinner attributeName="startNote" value="36"/>
               <spinner attributeName="endNote" value="39"/>
            </attribs>
            <object id="patch/object" uuid="1f6c5579-9723-4f1f-b28f-ab41a6f52f96">
               <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity, only responding to a range of notes</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>midi_in.axh</helpPatch>
               <inlets/>
               <outlets>
                  <frac32.bipolar name="note" description="midi note number"/>
                  <bool32 name="gate" description="key pressed?"/>
                  <frac32.positive name="velocity" description="note-on velocity"/>
                  <frac32.positive name="releaseVelocity" description="note-off velocity"/>
                  <frac32.positive name="vol"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="startNote" MinValue="0" MaxValue="127" DefaultValue="0"/>
                  <spinner name="endNote" MinValue="0" MaxValue="127" DefaultValue="127"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[int vol;
int8_t _note;
int8_t _lastnote;
uint8_t _gate;
uint8_t _velo;
uint8_t _rvelo;]]></code.declaration>
               <code.init><![CDATA[_gate = 0;
_note = 0;]]></code.init>
               <code.krate><![CDATA[outlet_note= _note<<21;
outlet_vol= vol<<21;
outlet_gate= _gate<<27;
outlet_velocity= _velo<<20;
outlet_releaseVelocity= _rvelo<<20;]]></code.krate>
               <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
  if ((data1 >= attr_startNote)&&(data1 <= attr_endNote)) {
    _velo = data2;
    _gate = 1;
  }
    if (data1==36) {
    _note = -12;
    vol = 64;
    _lastnote = 36;
  }
  
    if (data1==37) {
    _note = 0;
    vol = 58;
    _lastnote = 37;
  }
    if (data1==38) {
    _note = 12;
    vol = 50;
    _lastnote = 38;
  }
    if (data1==39) {
    _note = 24;
    vol = 35;
    _lastnote = 39;
  }
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_lastnote == data1) {
    _rvelo = data2;
    _gate = 0;
  }
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate = 0;
}]]></code.midihandler>
            </object>
         </patchobj>
         <obj type="table/play pitch" uuid="5632a54926261833bbb9fff049e71322c360e57e" name="play_1" x="504" y="182">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs>
               <objref attributeName="table" obj="../rec2"/>
            </attribs>
         </obj>
         <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_1" x="644" y="182">
            <params>
               <frac32.s.map name="a" value="-64.0"/>
               <frac32.s.map name="d" value="0.0"/>
               <frac32.u.map name="s" value="64.0"/>
               <frac32.s.map name="r" value="-7.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_4" x="812" y="182">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="c16a625a661f40e4b359db604dcd00b3befcdbe3" name="*_1" x="896" y="182">
            <params/>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="1f6c5579-9723-4f1f-b28f-ab41a6f52f96" name="keyb_8" x="364" y="392">
            <params/>
            <attribs>
               <spinner attributeName="startNote" value="40"/>
               <spinner attributeName="endNote" value="43"/>
            </attribs>
            <object id="patch/object" uuid="1f6c5579-9723-4f1f-b28f-ab41a6f52f96">
               <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity, only responding to a range of notes</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>midi_in.axh</helpPatch>
               <inlets/>
               <outlets>
                  <frac32.bipolar name="note" description="midi note number"/>
                  <bool32 name="gate" description="key pressed?"/>
                  <frac32.positive name="velocity" description="note-on velocity"/>
                  <frac32.positive name="releaseVelocity" description="note-off velocity"/>
                  <frac32.positive name="vol"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="startNote" MinValue="0" MaxValue="127" DefaultValue="0"/>
                  <spinner name="endNote" MinValue="0" MaxValue="127" DefaultValue="127"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[int vol;
int8_t _note;
int8_t _lastnote;
uint8_t _gate;
uint8_t _velo;
uint8_t _rvelo;]]></code.declaration>
               <code.init><![CDATA[_gate = 0;
_note = 0;]]></code.init>
               <code.krate><![CDATA[outlet_note= _note<<21;
outlet_vol= vol<<21;
outlet_gate= _gate<<27;
outlet_velocity= _velo<<20;
outlet_releaseVelocity= _rvelo<<20;]]></code.krate>
               <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
  if ((data1 >= attr_startNote)&&(data1 <= attr_endNote)) {
    _velo = data2;
    _gate = 1;
  }
    if (data1==40) {
    _note = -12;
    vol = 64;
    _lastnote = 40;
  }
  
    if (data1==41) {
    _note = 0;
    vol = 58;
    _lastnote = 41;
  }
    if (data1==42) {
    _note = 12;
    vol = 50;
    _lastnote = 42;
  }
    if (data1==43) {
    _note = 24;
    vol = 35;
    _lastnote = 43;
  }
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_lastnote == data1) {
    _rvelo = data2;
    _gate = 0;
  }
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate = 0;
}]]></code.midihandler>
            </object>
         </patchobj>
         <obj type="table/play pitch" uuid="5632a54926261833bbb9fff049e71322c360e57e" name="play_2" x="504" y="392">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs>
               <objref attributeName="table" obj="../rec2_"/>
            </attribs>
         </obj>
         <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_2" x="644" y="392">
            <params>
               <frac32.s.map name="a" value="-64.0"/>
               <frac32.s.map name="d" value="0.0"/>
               <frac32.u.map name="s" value="64.0"/>
               <frac32.s.map name="r" value="-7.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_5" x="770" y="392">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="c16a625a661f40e4b359db604dcd00b3befcdbe3" name="*_2" x="840" y="392">
            <params/>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="1f6c5579-9723-4f1f-b28f-ab41a6f52f96" name="keyb_9" x="364" y="616">
            <params/>
            <attribs>
               <spinner attributeName="startNote" value="44"/>
               <spinner attributeName="endNote" value="47"/>
            </attribs>
            <object id="patch/object" uuid="1f6c5579-9723-4f1f-b28f-ab41a6f52f96">
               <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity, only responding to a range of notes</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>midi_in.axh</helpPatch>
               <inlets/>
               <outlets>
                  <frac32.bipolar name="note" description="midi note number"/>
                  <bool32 name="gate" description="key pressed?"/>
                  <frac32.positive name="velocity" description="note-on velocity"/>
                  <frac32.positive name="releaseVelocity" description="note-off velocity"/>
                  <frac32.positive name="vol"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="startNote" MinValue="0" MaxValue="127" DefaultValue="0"/>
                  <spinner name="endNote" MinValue="0" MaxValue="127" DefaultValue="127"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[int vol;
int8_t _note;
int8_t _lastnote;
uint8_t _gate;
uint8_t _velo;
uint8_t _rvelo;]]></code.declaration>
               <code.init><![CDATA[_gate = 0;
_note = 0;]]></code.init>
               <code.krate><![CDATA[outlet_note= _note<<21;
outlet_vol= vol<<21;
outlet_gate= _gate<<27;
outlet_velocity= _velo<<20;
outlet_releaseVelocity= _rvelo<<20;]]></code.krate>
               <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
  if ((data1 >= attr_startNote)&&(data1 <= attr_endNote)) {
    _velo = data2;
    _gate = 1;
  }
    if (data1==44) {
    _note = -12;
    vol = 64;
    _lastnote = 44;
  }
  
    if (data1==45) {
    _note = 0;
    vol = 58;
    _lastnote = 45;
  }
    if (data1==46) {
    _note = 12;
    vol = 50;
    _lastnote = 46;
  }
    if (data1==47) {
    _note = 24;
    vol = 35;
    _lastnote = 47;
  }
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_lastnote == data1) {
    _rvelo = data2;
    _gate = 0;
  }
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate = 0;
}]]></code.midihandler>
            </object>
         </patchobj>
         <obj type="table/play pitch" uuid="5632a54926261833bbb9fff049e71322c360e57e" name="play_3" x="504" y="616">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs>
               <objref attributeName="table" obj="../rec2__"/>
            </attribs>
         </obj>
         <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_3" x="644" y="616">
            <params>
               <frac32.s.map name="a" value="-64.0"/>
               <frac32.s.map name="d" value="0.0"/>
               <frac32.u.map name="s" value="64.0"/>
               <frac32.s.map name="r" value="-7.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_6" x="756" y="616">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="c16a625a661f40e4b359db604dcd00b3befcdbe3" name="*_3" x="826" y="616">
            <params/>
            <attribs/>
         </obj>
         <obj type="drj/math/sum3" uuid="93cb11244902274d118a237aed86ae7d7fd46107" name="sum3_1" x="980" y="658">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="outlet_1" x="1148" y="658">
            <params/>
            <attribs/>
         </obj>
         <nets>
            <net>
               <source obj="play_1" outlet="wave"/>
               <dest obj="*_1" inlet="a"/>
            </net>
            <net>
               <source obj="keyb_10" outlet="gate"/>
               <dest obj="play_1" inlet="start"/>
               <dest obj="adsr_1" inlet="gate"/>
            </net>
            <net>
               <source obj="*_1" outlet="result"/>
               <dest obj="sum3_1" inlet="in1"/>
            </net>
            <net>
               <source obj="play_2" outlet="wave"/>
               <dest obj="*_2" inlet="a"/>
            </net>
            <net>
               <source obj="keyb_8" outlet="gate"/>
               <dest obj="play_2" inlet="start"/>
               <dest obj="adsr_2" inlet="gate"/>
            </net>
            <net>
               <source obj="play_3" outlet="wave"/>
               <dest obj="*_3" inlet="a"/>
            </net>
            <net>
               <source obj="keyb_9" outlet="gate"/>
               <dest obj="play_3" inlet="start"/>
               <dest obj="adsr_3" inlet="gate"/>
            </net>
            <net>
               <source obj="sum3_1" outlet="out"/>
               <dest obj="outlet_1" inlet="outlet"/>
            </net>
            <net>
               <source obj="*_2" outlet="result"/>
               <dest obj="sum3_1" inlet="in2"/>
            </net>
            <net>
               <source obj="*_3" outlet="result"/>
               <dest obj="sum3_1" inlet="in3"/>
            </net>
            <net>
               <source obj="keyb_8" outlet="note"/>
               <dest obj="play_2" inlet="pitch"/>
            </net>
            <net>
               <source obj="keyb_9" outlet="note"/>
               <dest obj="play_3" inlet="pitch"/>
            </net>
            <net>
               <source obj="adsr_1" outlet="env"/>
               <dest obj="*_4" inlet="a"/>
            </net>
            <net>
               <source obj="*_4" outlet="result"/>
               <dest obj="*_1" inlet="b"/>
            </net>
            <net>
               <source obj="keyb_10" outlet="note"/>
               <dest obj="play_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="keyb_10" outlet="vol"/>
               <dest obj="*_4" inlet="b"/>
            </net>
            <net>
               <source obj="adsr_2" outlet="env"/>
               <dest obj="*_5" inlet="a"/>
            </net>
            <net>
               <source obj="*_5" outlet="result"/>
               <dest obj="*_2" inlet="b"/>
            </net>
            <net>
               <source obj="keyb_8" outlet="vol"/>
               <dest obj="*_5" inlet="b"/>
            </net>
            <net>
               <source obj="adsr_3" outlet="env"/>
               <dest obj="*_6" inlet="a"/>
            </net>
            <net>
               <source obj="*_6" outlet="result"/>
               <dest obj="*_3" inlet="b"/>
            </net>
            <net>
               <source obj="keyb_9" outlet="vol"/>
               <dest obj="*_6" inlet="b"/>
            </net>
         </nets>
         <settings>
            <subpatchmode>polyphonic</subpatchmode>
            <MidiChannel>13</MidiChannel>
            <HasMidiChannelSelector>true</HasMidiChannelSelector>
            <NPresets>0</NPresets>
            <NPresetEntries>0</NPresetEntries>
            <NModulationSources>0</NModulationSources>
            <NModulationTargetsPerSource>0</NModulationTargetsPerSource>
            <Saturate>false</Saturate>
         </settings>
         <notes><![CDATA[]]></notes>
         <windowPos>
            <x>-8</x>
            <y>-8</y>
            <width>1616</width>
            <height>876</height>
         </windowPos>
      </subpatch>
   </patcher>
   <obj type="rbrt/patching/loadbang" uuid="45d1f29d-ac62-4e5b-86f8-2201d2f6c689" name="loadbang_3" x="1358" y="2884">
      <params/>
      <attribs/>
   </obj>
   <obj type="timer/delayedpulseduration" uuid="3b7bf0a7b7f89fad06a734667f48de051deb5c78" name="delayedpulseduration_1" x="1512" y="2884">
      <params>
         <frac32.s.map name="delay" value="-36.0"/>
         <frac32.s.map name="pulselength" value="-13.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2884" y="2884" text="sample level"/>
   <comment type="patch/comment" x="2954" y="2884" text="sample play"/>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_2" x="2884" y="2898">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_1" x="2954" y="2898">
      <params>
         <frac32.u.map name="amp" value="9.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="drj/math/sum3" uuid="93cb11244902274d118a237aed86ae7d7fd46107" name="sum3_1" x="3108" y="2912">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="d1f66f6e-7f4c-47cf-a1df-b901365472e6" name="note_11" x="1064" y="2954">
      <params/>
      <attribs>
         <spinner attributeName="note" value="21"/>
         <spinner attributeName="channel" value="3"/>
      </attribs>
      <object id="patch/object" uuid="d1f66f6e-7f4c-47cf-a1df-b901365472e6">
         <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_in.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="gate" description="key pressed?"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="note" MinValue="0" MaxValue="127" DefaultValue="64"/>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint8_t _gate;]]></code.declaration>
         <code.init><![CDATA[_gate = 0;]]></code.init>
         <code.krate><![CDATA[outlet_gate= _gate<<27;]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) {if (data1 == attr_note) {
   _gate = 1;
}
} else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
  if (data1 == attr_note) {
    _gate = 0;
  }
} else if ((status == (attr_channel-1) + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="timer/delayedpulseduration" uuid="3b7bf0a7b7f89fad06a734667f48de051deb5c78" name="delayedpulseduration_2" x="1694" y="2954">
      <params>
         <frac32.s.map name="delay" value="-36.0"/>
         <frac32.s.map name="pulselength" value="21.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_5" x="3220" y="2968">
      <params>
         <frac32.u.map name="amp" value="46.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/out left" uuid="b11a3c09b2fdd575ea8212f2ce7743d5269253b1" name="out_3" x="3332" y="2968">
      <params/>
      <attribs/>
   </obj>
   <obj type="timer/delayedpulseduration" uuid="3b7bf0a7b7f89fad06a734667f48de051deb5c78" name="delayedpulseduration_3" x="1302" y="2982">
      <params>
         <frac32.s.map name="delay" value="-36.0"/>
         <frac32.s.map name="pulselength" value="21.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="2022" y="2988" text="sample recording"/>
   <obj type="env/ahd" uuid="2139369d6de2ba5ddf76e602d1d25df653ca9eed" name="ahd_4" x="1974" y="3010">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-39.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ahd" uuid="2139369d6de2ba5ddf76e602d1d25df653ca9eed" name="ahd_2" x="2310" y="3010">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-39.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ahd" uuid="2139369d6de2ba5ddf76e602d1d25df653ca9eed" name="ahd_3" x="2632" y="3010">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-39.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_4" x="2086" y="3052">
      <params/>
      <attribs/>
   </obj>
   <obj type="table/record" uuid="2f8909f3691be093f0b8cf6532d4acff2dcb1a9f" name="record_1" x="2156" y="3052">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2"/>
      </attribs>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_5" x="2422" y="3052">
      <params/>
      <attribs/>
   </obj>
   <obj type="table/record" uuid="2f8909f3691be093f0b8cf6532d4acff2dcb1a9f" name="record_2" x="2492" y="3052">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2_"/>
      </attribs>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_6" x="2744" y="3052">
      <params/>
      <attribs/>
   </obj>
   <obj type="table/record" uuid="2f8909f3691be093f0b8cf6532d4acff2dcb1a9f" name="record_3" x="2828" y="3052">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2__"/>
      </attribs>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_8" x="1218" y="3108">
      <params/>
      <attribs>
         <table attributeName="str" table="/loopm"/>
      </attribs>
   </obj>
   <obj type="table/save" uuid="3e4108b607d56d9e1cd10abb898b58eea11e53b2" name="save_5" x="1442" y="3108">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec"/>
      </attribs>
   </obj>
   <obj type="table/load" uuid="600cc22c6734d23a82620da1a14e78782a7e168e" name="load_6" x="1848" y="3108">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec"/>
      </attribs>
   </obj>
   <obj type="table/alloc 32b sdram" uuid="1a4546b7b52747ea765093ac97444601c44721e8" name="rec2__" x="2828" y="3178">
      <params/>
      <attribs>
         <combo attributeName="size" selection="131072"/>
         <text attributeName="init">
            <sText><![CDATA[]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="table/alloc 32b sdram" uuid="1a4546b7b52747ea765093ac97444601c44721e8" name="rec2" x="2156" y="3192">
      <params/>
      <attribs>
         <combo attributeName="size" selection="131072"/>
         <text attributeName="init">
            <sText><![CDATA[]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="table/alloc 32b sdram" uuid="1a4546b7b52747ea765093ac97444601c44721e8" name="rec2_" x="2492" y="3192">
      <params/>
      <attribs>
         <combo attributeName="size" selection="131072"/>
         <text attributeName="init">
            <sText><![CDATA[]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_2" x="1218" y="3206">
      <params/>
      <attribs>
         <table attributeName="str" table="/looprec1"/>
      </attribs>
   </obj>
   <obj type="table/save" uuid="3e4108b607d56d9e1cd10abb898b58eea11e53b2" name="save_2" x="1442" y="3206">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2"/>
      </attribs>
   </obj>
   <obj type="table/load" uuid="600cc22c6734d23a82620da1a14e78782a7e168e" name="load_3" x="1848" y="3206">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2"/>
      </attribs>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_6" x="1218" y="3304">
      <params/>
      <attribs>
         <table attributeName="str" table="/looprec2"/>
      </attribs>
   </obj>
   <obj type="table/save" uuid="3e4108b607d56d9e1cd10abb898b58eea11e53b2" name="save_4" x="1442" y="3304">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2_"/>
      </attribs>
   </obj>
   <obj type="table/load" uuid="600cc22c6734d23a82620da1a14e78782a7e168e" name="load_5" x="1848" y="3304">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2_"/>
      </attribs>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_4" x="1218" y="3416">
      <params/>
      <attribs>
         <table attributeName="str" table="/looprec3"/>
      </attribs>
   </obj>
   <obj type="table/save" uuid="3e4108b607d56d9e1cd10abb898b58eea11e53b2" name="save_3" x="1442" y="3416">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2__"/>
      </attribs>
   </obj>
   <obj type="table/load" uuid="600cc22c6734d23a82620da1a14e78782a7e168e" name="load_4" x="1848" y="3416">
      <params/>
      <attribs>
         <objref attributeName="table" obj="rec2__"/>
      </attribs>
   </obj>
   <nets>
      <net>
         <source obj="step_1____tmp" outlet="value"/>
         <dest obj="to_1" inlet="i"/>
      </net>
      <net>
         <source obj="and_6" outlet="o"/>
         <dest obj="record_1" inlet="start"/>
         <dest obj="ahd_4" inlet="gate"/>
      </net>
      <net>
         <source obj="matrix_1" outlet="start"/>
         <dest obj="step_8" inlet="start"/>
      </net>
      <net>
         <source obj="matrix_1" outlet="coloron"/>
         <dest obj="step_8" inlet="coloron"/>
      </net>
      <net>
         <source obj="matrix_1" outlet="coloroff"/>
         <dest obj="step_8" inlet="coloroff"/>
      </net>
      <net>
         <source obj="matrix_1" outlet="blocksize"/>
         <dest obj="step_8" inlet="blocksize"/>
      </net>
      <net>
         <source obj="matrix_1" outlet="offset"/>
         <dest obj="step_8" inlet="offset"/>
      </net>
      <net>
         <source obj="demux_4" outlet="o0"/>
         <dest obj="cc_1" inlet="v0"/>
      </net>
      <net>
         <source obj="demux_4" outlet="o1"/>
         <dest obj="cc_1" inlet="v1"/>
      </net>
      <net>
         <source obj="demux_4" outlet="o2"/>
         <dest obj="cc_1" inlet="v2"/>
      </net>
      <net>
         <source obj="demux_4" outlet="o3"/>
         <dest obj="cc_1" inlet="v3"/>
      </net>
      <net>
         <source obj="polycc_1" outlet="cc0"/>
         <dest obj="tablestore_2" inlet="v0"/>
      </net>
      <net>
         <source obj="polycc_1" outlet="cc1"/>
         <dest obj="tablestore_2" inlet="v1"/>
      </net>
      <net>
         <source obj="polycc_1" outlet="cc2"/>
         <dest obj="tablestore_2" inlet="v2"/>
      </net>
      <net>
         <source obj="polycc_1" outlet="cc3"/>
         <dest obj="tablestore_2" inlet="v3"/>
      </net>
      <net>
         <source obj="i_10" outlet="out"/>
         <dest obj="tablestore_2" inlet="offset"/>
      </net>
      <net>
         <source obj="flipflop_2" outlet="o"/>
         <dest obj="and_3" inlet="i1"/>
         <dest obj="and_5" inlet="i1"/>
         <dest obj="and_10" inlet="i2"/>
         <dest obj="and_11" inlet="i2"/>
         <dest obj="and_12" inlet="i2"/>
         <dest obj="change_1" inlet="in"/>
         <dest obj="xor_1" inlet="i1"/>
         <dest obj="i_1" inlet="active2"/>
      </net>
      <net>
         <source obj="lrec_1" outlet="offset"/>
         <dest obj="ldrive_1" inlet="offset"/>
      </net>
      <net>
         <source obj="ldrive_1" outlet="pos"/>
         <dest obj="ldub_1" inlet="phase"/>
         <dest obj="read_1" inlet="a"/>
      </net>
      <net>
         <source obj="read_1" outlet="o"/>
         <dest obj="*_1" inlet="a"/>
      </net>
      <net>
         <source obj="and_18" outlet="o"/>
         <dest obj="ldub_1" inlet="overdub"/>
         <dest obj="right_7" inlet="on"/>
      </net>
      <net>
         <source obj="lrec_1" outlet="rec"/>
         <dest obj="inv_3" inlet="i"/>
         <dest obj="or_2" inlet="i1"/>
      </net>
      <net>
         <source obj="or_2" outlet="o"/>
         <dest obj="right_8" inlet="on"/>
         <dest obj="ldrive_1" inlet="play"/>
         <dest obj="ldrive_1" inlet="r2offset"/>
      </net>
      <net>
         <source obj="loadbang_1" outlet="pulse"/>
         <dest obj="or_3" inlet="i2"/>
      </net>
      <net>
         <source obj="or_3" outlet="o"/>
         <dest obj="flipflop_7" inlet="reset"/>
      </net>
      <net>
         <source obj="inv_3" outlet="o"/>
         <dest obj="flipflop_7" inlet="set"/>
      </net>
      <net>
         <source obj="flipflop_7" outlet="o"/>
         <dest obj="and_18" inlet="i1"/>
         <dest obj="or_2" inlet="i2"/>
         <dest obj="*_1" inlet="b"/>
      </net>
      <net>
         <source obj="flipflop_9" outlet="o"/>
         <dest obj="right_6" inlet="on"/>
         <dest obj="lrec_1" inlet="rec"/>
         <dest obj="or_3" inlet="i1"/>
      </net>
      <net>
         <source obj="and_20" outlet="o"/>
         <dest obj="flipflop_9" inlet="set"/>
         <dest obj="counter2_init_start_2" inlet="inc"/>
      </net>
      <net>
         <source obj="counter2_init_start_2" outlet="c"/>
         <dest obj="flipflop_9" inlet="reset"/>
         <dest obj="flipflop_10" inlet="reset"/>
      </net>
      <net>
         <source obj="flipflop_10" outlet="o"/>
         <dest obj="and_20" inlet="i2"/>
         <dest obj="i_2" inlet="active"/>
      </net>
      <net>
         <source obj="or_4" outlet="o"/>
         <dest obj="flipflop_10" inlet="set"/>
         <dest obj="counter2_init_start_2" inlet="r"/>
      </net>
      <net>
         <source obj="flipflop_11" outlet="o"/>
         <dest obj="and_21" inlet="i2"/>
      </net>
      <net>
         <source obj="and_21" outlet="o"/>
         <dest obj="flipflop_11" inlet="reset"/>
         <dest obj="flipflop_7" inlet="trig"/>
      </net>
      <net>
         <source obj="change_1" outlet="trig"/>
         <dest obj="or_3" inlet="i3"/>
      </net>
      <net>
         <source obj="xor_1" outlet="o"/>
         <dest obj="flipflop_11" inlet="set"/>
      </net>
      <net>
         <source obj="toggle_4" outlet="o"/>
         <dest obj="and_18" inlet="i2"/>
      </net>
      <net>
         <source obj="right_1" outlet="r2"/>
         <dest obj="xor_1" inlet="i2"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="outlet_1"/>
         <dest obj="vca_2" inlet="a"/>
      </net>
      <net>
         <source obj="keyb_5" outlet="velocity"/>
         <dest obj="note_2" inlet="velo"/>
         <dest obj="note_6" inlet="velo"/>
      </net>
      <net>
         <source obj="keyb_5" outlet="note"/>
         <dest obj="note_2" inlet="note"/>
         <dest obj="note_6" inlet="note"/>
      </net>
      <net>
         <source obj="and_7" outlet="o"/>
         <dest obj="record_2" inlet="start"/>
         <dest obj="ahd_2" inlet="gate"/>
      </net>
      <net>
         <source obj="and_8" outlet="o"/>
         <dest obj="record_3" inlet="start"/>
         <dest obj="ahd_3" inlet="gate"/>
      </net>
      <net>
         <source obj="step_2" outlet="value"/>
         <dest obj="to_6" inlet="i"/>
      </net>
      <net>
         <source obj="step_1" outlet="value"/>
         <dest obj="to_5" inlet="i"/>
      </net>
      <net>
         <source obj="tablestore_2" outlet="v0"/>
         <dest obj="vca_1" inlet="v"/>
      </net>
      <net>
         <source obj="tablestore_2" outlet="v3"/>
         <dest obj="vca_2" inlet="v"/>
      </net>
      <net>
         <source obj="vca_2" outlet="o"/>
         <dest obj="gain_1" inlet="in"/>
      </net>
      <net>
         <source obj="gain_1" outlet="out"/>
         <dest obj="sum3_1" inlet="in3"/>
      </net>
      <net>
         <source obj="*_1" outlet="result"/>
         <dest obj="vca_11" inlet="a"/>
         <dest obj="+_1" inlet="in1"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="ldub_1" inlet="wave"/>
         <dest obj="lrec_1" inlet="wave"/>
         <dest obj="+_4" inlet="in1"/>
      </net>
      <net>
         <source obj="tablestore_2" outlet="v1"/>
         <dest obj="vca_11" inlet="v"/>
      </net>
      <net>
         <source obj="in_2" outlet="wave"/>
         <dest obj="vca_1" inlet="a"/>
         <dest obj="+_1" inlet="in2"/>
      </net>
      <net>
         <source obj="vca_6" outlet="o"/>
         <dest obj="record_3" inlet="wave"/>
      </net>
      <net>
         <source obj="vca_5" outlet="o"/>
         <dest obj="record_2" inlet="wave"/>
      </net>
      <net>
         <source obj="vca_4" outlet="o"/>
         <dest obj="record_1" inlet="wave"/>
      </net>
      <net>
         <source obj="ahd_4" outlet="env"/>
         <dest obj="vca_4" inlet="v"/>
      </net>
      <net>
         <source obj="ahd_2" outlet="env"/>
         <dest obj="vca_5" inlet="v"/>
      </net>
      <net>
         <source obj="ahd_3" outlet="env"/>
         <dest obj="vca_6" inlet="v"/>
      </net>
      <net>
         <source obj="ahd_1" outlet="env"/>
         <dest obj="vca_8" inlet="v"/>
         <dest obj="*_3" inlet="a"/>
      </net>
      <net>
         <source obj="inv_4" outlet="out"/>
         <dest obj="+_2" inlet="in1"/>
      </net>
      <net>
         <source obj="i_5" outlet="out"/>
         <dest obj="+_2" inlet="in2"/>
      </net>
      <net>
         <source obj="keyb_7" outlet="note"/>
         <dest obj="bipolar2unipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="keyb_7" outlet="gate2"/>
         <dest obj="ahd_1" inlet="gate"/>
      </net>
      <net>
         <source obj="bipolar2unipolar_1" outlet="o"/>
         <dest obj="-c_1" inlet="in"/>
         <dest obj="-c_3" inlet="in"/>
         <dest obj="-c_2" inlet="in"/>
         <dest obj="-c_4" inlet="in"/>
      </net>
      <net>
         <source obj="-c_1" outlet="out"/>
         <dest obj="gain_3" inlet="in"/>
      </net>
      <net>
         <source obj="unipolar2bipolar_1" outlet="o"/>
         <dest obj="lowpass_1" inlet="in"/>
      </net>
      <net>
         <source obj="gain_3" outlet="out"/>
         <dest obj="unipolar2bipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="lowpass_1" outlet="out"/>
         <dest obj="+c_2" inlet="in"/>
      </net>
      <net>
         <source obj="+_1" outlet="out"/>
         <dest obj="vca_4" inlet="a"/>
         <dest obj="vca_5" inlet="a"/>
         <dest obj="vca_6" inlet="a"/>
         <dest obj="vca_3" inlet="a"/>
      </net>
      <net>
         <source obj="+_4" outlet="out"/>
         <dest obj="vca_12" inlet="a"/>
      </net>
      <net>
         <source obj="vca_11" outlet="o"/>
         <dest obj="+_4" inlet="in2"/>
      </net>
      <net>
         <source obj="vca_8" outlet="o"/>
         <dest obj="vca_9" inlet="a"/>
      </net>
      <net>
         <source obj="vca_9" outlet="o"/>
         <dest obj="sum3_1" inlet="in2"/>
      </net>
      <net>
         <source obj="tablestore_2" outlet="v2"/>
         <dest obj="vca_9" inlet="v"/>
      </net>
      <net>
         <source obj="vca_12" outlet="o"/>
         <dest obj="vca_13" inlet="a"/>
      </net>
      <net>
         <source obj="vca_13" outlet="o"/>
         <dest obj="sum3_1" inlet="in1"/>
      </net>
      <net>
         <source obj="keyb_9" outlet="gate"/>
         <dest obj="ahd_5" inlet="gate"/>
      </net>
      <net>
         <source obj="inv_6" outlet="out"/>
         <dest obj="+_6" inlet="in1"/>
      </net>
      <net>
         <source obj="i_6" outlet="out"/>
         <dest obj="+_6" inlet="in2"/>
      </net>
      <net>
         <source obj="+_6" outlet="out"/>
         <dest obj="vca_13" inlet="v"/>
      </net>
      <net>
         <source obj="ahd_5" outlet="env"/>
         <dest obj="*_2" inlet="a"/>
      </net>
      <net>
         <source obj="*_2" outlet="result"/>
         <dest obj="inv_6" inlet="in"/>
      </net>
      <net>
         <source obj="+_2" outlet="out"/>
         <dest obj="vca_12" inlet="v"/>
      </net>
      <net>
         <source obj="*_3" outlet="result"/>
         <dest obj="inv_4" inlet="in"/>
      </net>
      <net>
         <source obj="bankindex_1" outlet="index"/>
         <dest obj="+1_1" inlet="a"/>
         <dest obj="-1_1" inlet="a"/>
      </net>
      <net>
         <source obj="+1_1" outlet="result"/>
         <dest obj="load_1" inlet="i"/>
      </net>
      <net>
         <source obj="-1_1" outlet="result"/>
         <dest obj="load_2" inlet="i"/>
      </net>
      <net>
         <source obj="in_1" outlet="down"/>
         <dest obj="load_2" inlet="trig"/>
      </net>
      <net>
         <source obj="in_1" outlet="up"/>
         <dest obj="load_1" inlet="trig"/>
      </net>
      <net>
         <source obj="launch_2" outlet="button1"/>
         <dest obj="tcopy_2" inlet="trig"/>
      </net>
      <net>
         <source obj="launch_2" outlet="snapshot"/>
         <dest obj="tcopy_2" inlet="snapshot"/>
      </net>
      <net>
         <source obj="launch_2" outlet="save"/>
         <dest obj="tcopy_2" inlet="save"/>
      </net>
      <net>
         <source obj="c_1" outlet="out"/>
         <dest obj="save_1" inlet="filename"/>
      </net>
      <net>
         <source obj="note_3" outlet="gate"/>
         <dest obj="save_1" inlet="trig"/>
      </net>
      <net>
         <source obj="note_9" outlet="gate"/>
         <dest obj="clk_mul_4" inlet="clk"/>
         <dest obj="clk_mul_5" inlet="clk"/>
      </net>
      <net>
         <source obj="or_1" outlet="o"/>
         <dest obj="counter_4" inlet="r"/>
         <dest obj="counter2_init_start_1" inlet="r"/>
         <dest obj="counter_1" inlet="r"/>
         <dest obj="and_21" inlet="i1"/>
         <dest obj="and_20" inlet="i1"/>
      </net>
      <net>
         <source obj="and_3" outlet="o"/>
         <dest obj="counter_1" inlet="trig"/>
         <dest obj="counter2_init_start_1" inlet="inc"/>
      </net>
      <net>
         <source obj="counter2_init_start_1" outlet="c"/>
         <dest obj="counter_4" inlet="trig"/>
      </net>
      <net>
         <source obj="note_8" outlet="gate"/>
         <dest obj="or_1" inlet="i1"/>
         <dest obj="counter_3" inlet="r"/>
         <dest obj="ldrive_1" inlet="r2start"/>
         <dest obj="and_1" inlet="i1"/>
      </net>
      <net>
         <source obj="clk_mul_4" outlet="clk"/>
         <dest obj="and_3" inlet="i2"/>
      </net>
      <net>
         <source obj="counter_1" outlet="o"/>
         <dest obj="x_1" inlet="steplay"/>
      </net>
      <net>
         <source obj="counter_4" outlet="o"/>
         <dest obj="x_1" inlet="steprec"/>
      </net>
      <net>
         <source obj="cc_3" outlet="program"/>
         <dest obj="x_1" inlet="select"/>
      </net>
      <net>
         <source obj="cc_3" outlet="light"/>
         <dest obj="demux_4" inlet="s"/>
      </net>
      <net>
         <source obj="counter_3" outlet="o"/>
         <dest obj="step_8" inlet="step"/>
         <dest obj="step_1____tmp" inlet="step"/>
         <dest obj="step_1" inlet="step"/>
         <dest obj="step_2" inlet="step"/>
      </net>
      <net>
         <source obj="and_5" outlet="o"/>
         <dest obj="counter_3" inlet="trig"/>
      </net>
      <net>
         <source obj="clk_mul_5" outlet="clk"/>
         <dest obj="and_5" inlet="i2"/>
      </net>
      <net>
         <source obj="x_1" outlet="note"/>
         <dest obj="note_4" inlet="note"/>
      </net>
      <net>
         <source obj="x_1" outlet="v"/>
         <dest obj="note_4" inlet="velo"/>
      </net>
      <net>
         <source obj="x_1" outlet="g"/>
         <dest obj="and_10" inlet="i1"/>
      </net>
      <net>
         <source obj="x_1" outlet="note2"/>
         <dest obj="note_7" inlet="note"/>
      </net>
      <net>
         <source obj="x_1" outlet="v2"/>
         <dest obj="note_7" inlet="velo"/>
      </net>
      <net>
         <source obj="x_1" outlet="g2"/>
         <dest obj="and_12" inlet="i1"/>
      </net>
      <net>
         <source obj="x_1" outlet="note3"/>
         <dest obj="note_5" inlet="note"/>
      </net>
      <net>
         <source obj="x_1" outlet="v3"/>
         <dest obj="note_5" inlet="velo"/>
      </net>
      <net>
         <source obj="x_1" outlet="g3"/>
         <dest obj="and_11" inlet="i1"/>
      </net>
      <net>
         <source obj="cc_3" outlet="matrix"/>
         <dest obj="keyb_5" inlet="matrix"/>
         <dest obj="matrix_1" inlet="matrix"/>
         <dest obj="tcopy_1" inlet="matrix"/>
         <dest obj="matrix_3" inlet="matrix"/>
         <dest obj="matrix_2" inlet="matrix"/>
      </net>
      <net>
         <source obj="cc_3" outlet="offsetshift"/>
         <dest obj="matrix_1" inlet="offset"/>
         <dest obj="matrix_3" inlet="offset"/>
         <dest obj="matrix_2" inlet="offset"/>
      </net>
      <net>
         <source obj="keyb_5" outlet="gate2"/>
         <dest obj="note_2" inlet="trig"/>
      </net>
      <net>
         <source obj="keyb_5" outlet="gateB"/>
         <dest obj="note_6" inlet="trig"/>
      </net>
      <net>
         <source obj="cc_3" outlet="lightgate"/>
         <dest obj="right_2" inlet="on"/>
      </net>
      <net>
         <source obj="cc_3" outlet="lightgate2"/>
         <dest obj="right_3" inlet="on"/>
      </net>
      <net>
         <source obj="cc_3" outlet="lightgate3"/>
         <dest obj="right_4" inlet="on"/>
      </net>
      <net>
         <source obj="to_1" outlet="o"/>
         <dest obj="and_6" inlet="i1"/>
      </net>
      <net>
         <source obj="to_5" outlet="o"/>
         <dest obj="and_7" inlet="i1"/>
      </net>
      <net>
         <source obj="to_6" outlet="o"/>
         <dest obj="and_8" inlet="i1"/>
      </net>
      <net>
         <source obj="cc_3" outlet="toggleon"/>
         <dest obj="flipflop_5" inlet="trig"/>
      </net>
      <net>
         <source obj="flipflop_5" outlet="o"/>
         <dest obj="and_6" inlet="i2"/>
         <dest obj="and_7" inlet="i2"/>
         <dest obj="and_8" inlet="i2"/>
         <dest obj="right_5" inlet="on"/>
      </net>
      <net>
         <source obj="i_1" outlet="out"/>
         <dest obj="top_1" inlet="coloroff"/>
      </net>
      <net>
         <source obj="cc_3" outlet="shift"/>
         <dest obj="top_3" inlet="on"/>
         <dest obj="and_9" inlet="i2"/>
         <dest obj="matrix_3" inlet="active"/>
         <dest obj="matrix_2" inlet="active"/>
      </net>
      <net>
         <source obj="i_2" outlet="out"/>
         <dest obj="right_6" inlet="coloroff"/>
      </net>
      <net>
         <source obj="cc_3" outlet="cleargate"/>
         <dest obj="and_9" inlet="i1"/>
      </net>
      <net>
         <source obj="and_9" outlet="o"/>
         <dest obj="tcopy_1" inlet="trig"/>
      </net>
      <net>
         <source obj="and_10" outlet="o"/>
         <dest obj="note_4" inlet="trig"/>
      </net>
      <net>
         <source obj="and_11" outlet="o"/>
         <dest obj="note_5" inlet="trig"/>
      </net>
      <net>
         <source obj="and_12" outlet="o"/>
         <dest obj="note_7" inlet="trig"/>
      </net>
      <net>
         <source obj="limiter_1" outlet="out"/>
         <dest obj="gain_2" inlet="in"/>
      </net>
      <net>
         <source obj="gain_2" outlet="out"/>
         <dest obj="vca_8" inlet="a"/>
      </net>
      <net>
         <source obj="dial_2" outlet="out"/>
         <dest obj="limiter_1" inlet="gainAdd"/>
      </net>
      <net>
         <source obj="dial_3" outlet="out"/>
         <dest obj="limiter_1" inlet="threshold"/>
      </net>
      <net>
         <source obj="dial_4" outlet="out"/>
         <dest obj="limiter_1" inlet="rate"/>
      </net>
      <net>
         <source obj="dial_5" outlet="out"/>
         <dest obj="limiter_1" inlet="goal"/>
      </net>
      <net>
         <source obj="lp_1" outlet="out"/>
         <dest obj="mix_1" inlet="in1"/>
      </net>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="lp_1" inlet="in"/>
      </net>
      <net>
         <source obj="flipflop_6" outlet="o"/>
         <dest obj="or_10" inlet="i1"/>
         <dest obj="x_1" inlet="clear"/>
         <dest obj="i_1" inlet="active"/>
      </net>
      <net>
         <source obj="and_4" outlet="o"/>
         <dest obj="delayedpulse_2" inlet="trig"/>
         <dest obj="or_6" inlet="i1"/>
         <dest obj="or_7" inlet="i1"/>
      </net>
      <net>
         <source obj="cc_3" outlet="recbutton"/>
         <dest obj="flipflop_6" inlet="set"/>
         <dest obj="counter_5" inlet="r"/>
         <dest obj="flipflop_12" inlet="reset"/>
      </net>
      <net>
         <source obj="counter_4" outlet="c"/>
         <dest obj="and_4" inlet="i2"/>
         <dest obj="and_13" inlet="i2"/>
      </net>
      <net>
         <source obj="flipflop_8" outlet="o"/>
         <dest obj="or_10" inlet="i2"/>
         <dest obj="x_1" inlet="rec"/>
         <dest obj="top_1" inlet="on"/>
      </net>
      <net>
         <source obj="counter_5" outlet="c"/>
         <dest obj="or_8" inlet="i1"/>
      </net>
      <net>
         <source obj="or_10" outlet="o"/>
         <dest obj="and_4" inlet="i1"/>
      </net>
      <net>
         <source obj="delayedpulse_2" outlet="pulse"/>
         <dest obj="flipflop_8" inlet="set"/>
         <dest obj="counter_5" inlet="trig"/>
      </net>
      <net>
         <source obj="flipflop_12" outlet="o"/>
         <dest obj="and_13" inlet="i1"/>
         <dest obj="top_2" inlet="on"/>
      </net>
      <net>
         <source obj="and_13" outlet="o"/>
         <dest obj="or_6" inlet="i2"/>
      </net>
      <net>
         <source obj="cc_3" outlet="overdub"/>
         <dest obj="flipflop_12" inlet="trig"/>
         <dest obj="tcopy_6" inlet="trig"/>
         <dest obj="or_7" inlet="i2"/>
         <dest obj="or_8" inlet="i2"/>
      </net>
      <net>
         <source obj="or_7" outlet="o"/>
         <dest obj="flipflop_6" inlet="reset"/>
      </net>
      <net>
         <source obj="or_8" outlet="o"/>
         <dest obj="flipflop_8" inlet="reset"/>
      </net>
      <net>
         <source obj="or_6" outlet="o"/>
         <dest obj="x_1" inlet="trig"/>
      </net>
      <net>
         <source obj="c_2" outlet="out"/>
         <dest obj="save_2" inlet="filename"/>
         <dest obj="load_3" inlet="filename"/>
      </net>
      <net>
         <source obj="note_11" outlet="gate"/>
         <dest obj="save_2" inlet="trig"/>
         <dest obj="save_4" inlet="trig"/>
         <dest obj="save_3" inlet="trig"/>
         <dest obj="delayedpulseduration_3" inlet="trig"/>
      </net>
      <net>
         <source obj="delayedpulseduration_1" outlet="pulse"/>
         <dest obj="load_3" inlet="trig"/>
         <dest obj="load_5" inlet="trig"/>
         <dest obj="load_4" inlet="trig"/>
         <dest obj="delayedpulseduration_2" inlet="trig"/>
      </net>
      <net>
         <source obj="c_4" outlet="out"/>
         <dest obj="save_3" inlet="filename"/>
         <dest obj="load_4" inlet="filename"/>
      </net>
      <net>
         <source obj="c_8" outlet="out"/>
         <dest obj="save_5" inlet="filename"/>
         <dest obj="load_6" inlet="filename"/>
      </net>
      <net>
         <source obj="loadbang_2" outlet="pulse"/>
         <dest obj="flipflop_5" inlet="reset"/>
      </net>
      <net>
         <source obj="loadbang_3" outlet="pulse"/>
         <dest obj="delayedpulseduration_1" inlet="trig"/>
      </net>
      <net>
         <source obj="delayedpulseduration_2" outlet="pulse"/>
         <dest obj="load_6" inlet="trig"/>
      </net>
      <net>
         <source obj="delayedpulseduration_3" outlet="pulse"/>
         <dest obj="save_5" inlet="trig"/>
      </net>
      <net>
         <source obj="dial_1" outlet="out"/>
         <dest obj="ldrive_1" inlet="range"/>
      </net>
      <net>
         <source obj="-c_2" outlet="out"/>
         <dest obj="gain_4" inlet="in"/>
      </net>
      <net>
         <source obj="gain_4" outlet="out"/>
         <dest obj="lowpass_2" inlet="in"/>
      </net>
      <net>
         <source obj="lowpass_2" outlet="out"/>
         <dest obj="unipolar2bipolar_2" inlet="i"/>
      </net>
      <net>
         <source obj="+_10" outlet="out"/>
         <dest obj="lp_2" inlet="filter"/>
      </net>
      <net>
         <source obj="lp_2" outlet="out"/>
         <dest obj="mix_1" inlet="in2"/>
      </net>
      <net>
         <source obj="*c_3" outlet="out"/>
         <dest obj="lp_2" inlet="in"/>
      </net>
      <net>
         <source obj="unipolar2bipolar_2" outlet="o"/>
         <dest obj="+c_1" inlet="in"/>
      </net>
      <net>
         <source obj="limit_3" outlet="o"/>
         <dest obj="lp_1" inlet="filter"/>
      </net>
      <net>
         <source obj="-c_3" outlet="out"/>
         <dest obj="gain_5" inlet="in"/>
      </net>
      <net>
         <source obj="gain_5" outlet="out"/>
         <dest obj="lowpass_3" inlet="in"/>
      </net>
      <net>
         <source obj="lowpass_3" outlet="out"/>
         <dest obj="unipolar2bipolar_3" inlet="i"/>
      </net>
      <net>
         <source obj="+_7" outlet="out"/>
         <dest obj="hp_1" inlet="pitch"/>
      </net>
      <net>
         <source obj="*c_2" outlet="out"/>
         <dest obj="hp_1" inlet="in"/>
      </net>
      <net>
         <source obj="unipolar2bipolar_3" outlet="o"/>
         <dest obj="+c_3" inlet="in"/>
      </net>
      <net>
         <source obj="hp_1" outlet="out"/>
         <dest obj="mix_2" inlet="in1"/>
      </net>
      <net>
         <source obj="-c_4" outlet="out"/>
         <dest obj="gain_6" inlet="in"/>
      </net>
      <net>
         <source obj="gain_6" outlet="out"/>
         <dest obj="lowpass_4" inlet="in"/>
      </net>
      <net>
         <source obj="lowpass_4" outlet="out"/>
         <dest obj="unipolar2bipolar_4" inlet="i"/>
      </net>
      <net>
         <source obj="limit_2" outlet="o"/>
         <dest obj="hp_2" inlet="pitch"/>
      </net>
      <net>
         <source obj="*c_4" outlet="out"/>
         <dest obj="hp_2" inlet="in"/>
      </net>
      <net>
         <source obj="unipolar2bipolar_4" outlet="o"/>
         <dest obj="+c_4" inlet="in"/>
      </net>
      <net>
         <source obj="hp_2" outlet="out"/>
         <dest obj="mix_2" inlet="in2"/>
      </net>
      <net>
         <source obj="lowpass_5" outlet="out"/>
         <dest obj="*_4" inlet="b"/>
         <dest obj="*_6" inlet="b"/>
         <dest obj="*_5" inlet="b"/>
         <dest obj="*_7" inlet="b"/>
      </net>
      <net>
         <source obj="+c_2" outlet="out"/>
         <dest obj="*_4" inlet="a"/>
      </net>
      <net>
         <source obj="+c_1" outlet="out"/>
         <dest obj="*_5" inlet="a"/>
      </net>
      <net>
         <source obj="*_4" outlet="result"/>
         <dest obj="+_8" inlet="in1"/>
      </net>
      <net>
         <source obj="*_5" outlet="result"/>
         <dest obj="+_9" inlet="in1"/>
      </net>
      <net>
         <source obj="+c_3" outlet="out"/>
         <dest obj="*_6" inlet="a"/>
      </net>
      <net>
         <source obj="*_6" outlet="result"/>
         <dest obj="+_3" inlet="in1"/>
      </net>
      <net>
         <source obj="+c_4" outlet="out"/>
         <dest obj="*_7" inlet="a"/>
      </net>
      <net>
         <source obj="*_7" outlet="result"/>
         <dest obj="+_5" inlet="in1"/>
      </net>
      <net>
         <source obj="unipolar2bipolar_5" outlet="o"/>
         <dest obj="+_8" inlet="in2"/>
         <dest obj="+_3" inlet="in2"/>
         <dest obj="+_9" inlet="in2"/>
         <dest obj="+_5" inlet="in2"/>
      </net>
      <net>
         <source obj="+_3" outlet="out"/>
         <dest obj="limit_1" inlet="i"/>
      </net>
      <net>
         <source obj="+_5" outlet="out"/>
         <dest obj="limit_2" inlet="i"/>
      </net>
      <net>
         <source obj="+_9" outlet="out"/>
         <dest obj="limit_4" inlet="i"/>
      </net>
      <net>
         <source obj="+_8" outlet="out"/>
         <dest obj="limit_3" inlet="i"/>
      </net>
      <net>
         <source obj="vca_3" outlet="o"/>
         <dest obj="*c_1" inlet="in"/>
         <dest obj="*c_2" inlet="in"/>
         <dest obj="*c_3" inlet="in"/>
         <dest obj="*c_4" inlet="in"/>
      </net>
      <net>
         <source obj="lowpass_6" outlet="out"/>
         <dest obj="*_12" inlet="b"/>
      </net>
      <net>
         <source obj="max" outlet="out"/>
         <dest obj="*_8" inlet="b"/>
      </net>
      <net>
         <source obj="*_8" outlet="result"/>
         <dest obj="lp_1" inlet="reso"/>
      </net>
      <net>
         <source obj="tablestore_3" outlet="v1"/>
         <dest obj="*_8" inlet="a"/>
         <dest obj="*_10" inlet="a"/>
         <dest obj="*_9" inlet="a"/>
         <dest obj="*_11" inlet="a"/>
      </net>
      <net>
         <source obj="max_" outlet="out"/>
         <dest obj="*_9" inlet="b"/>
      </net>
      <net>
         <source obj="*_9" outlet="result"/>
         <dest obj="lp_2" inlet="reso"/>
      </net>
      <net>
         <source obj="max__" outlet="out"/>
         <dest obj="*_10" inlet="b"/>
      </net>
      <net>
         <source obj="max___" outlet="out"/>
         <dest obj="*_11" inlet="b"/>
      </net>
      <net>
         <source obj="*_10" outlet="result"/>
         <dest obj="hp_1" inlet="reso"/>
      </net>
      <net>
         <source obj="*_11" outlet="result"/>
         <dest obj="hp_2" inlet="reso"/>
      </net>
      <net>
         <source obj="poly_2" outlet="cc0"/>
         <dest obj="tablestore_3" inlet="v0"/>
      </net>
      <net>
         <source obj="poly_2" outlet="cc1"/>
         <dest obj="tablestore_3" inlet="v1"/>
      </net>
      <net>
         <source obj="poly_2" outlet="cc2"/>
         <dest obj="tablestore_3" inlet="v2"/>
      </net>
      <net>
         <source obj="poly_2" outlet="cc3"/>
         <dest obj="tablestore_3" inlet="v3"/>
      </net>
      <net>
         <source obj="i_14" outlet="out"/>
         <dest obj="tablestore_3" inlet="offset"/>
      </net>
      <net>
         <source obj="tablestore_3" outlet="v0"/>
         <dest obj="smooth_1" inlet="in"/>
      </net>
      <net>
         <source obj="smooth_1" outlet="out"/>
         <dest obj="unipolar2bipolar_5" inlet="i"/>
      </net>
      <net>
         <source obj="tablestore_3" outlet="v3"/>
         <dest obj="lowpass_6" inlet="in"/>
      </net>
      <net>
         <source obj="dial_15" outlet="out"/>
         <dest obj="*_12" inlet="a"/>
      </net>
      <net>
         <source obj="*_12" outlet="result"/>
         <dest obj="vca_3" inlet="v"/>
      </net>
      <net>
         <source obj="limit_1" outlet="o"/>
         <dest obj="*_13" inlet="b"/>
         <dest obj="inv_2" inlet="in"/>
      </net>
      <net>
         <source obj="*_13" outlet="result"/>
         <dest obj="+_7" inlet="in1"/>
      </net>
      <net>
         <source obj="lowpass_7" outlet="out"/>
         <dest obj="inv_1" inlet="in"/>
         <dest obj="*_14" inlet="a"/>
         <dest obj="*_16" inlet="a"/>
      </net>
      <net>
         <source obj="inv_1" outlet="out"/>
         <dest obj="+c_5" inlet="in"/>
      </net>
      <net>
         <source obj="+c_5" outlet="out"/>
         <dest obj="*_13" inlet="a"/>
         <dest obj="*_15" inlet="a"/>
      </net>
      <net>
         <source obj="inv_2" outlet="out"/>
         <dest obj="*_14" inlet="b"/>
      </net>
      <net>
         <source obj="*_14" outlet="result"/>
         <dest obj="+_7" inlet="in2"/>
      </net>
      <net>
         <source obj="limit_4" outlet="o"/>
         <dest obj="*_15" inlet="b"/>
         <dest obj="inv_5" inlet="in"/>
      </net>
      <net>
         <source obj="*_15" outlet="result"/>
         <dest obj="+_10" inlet="in1"/>
      </net>
      <net>
         <source obj="inv_5" outlet="out"/>
         <dest obj="*_16" inlet="b"/>
      </net>
      <net>
         <source obj="*_16" outlet="result"/>
         <dest obj="+_10" inlet="in2"/>
      </net>
      <net>
         <source obj="*c_5" outlet="out"/>
         <dest obj="out_3" inlet="wave"/>
      </net>
      <net>
         <source obj="sum3_1" outlet="out"/>
         <dest obj="*c_5" inlet="in"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="xfade_1" inlet="i1"/>
      </net>
      <net>
         <source obj="mix_2" outlet="out"/>
         <dest obj="xfade_1" inlet="i2"/>
      </net>
      <net>
         <source obj="xfade_1" outlet="o"/>
         <dest obj="limiter_1" inlet="in"/>
      </net>
      <net>
         <source obj="tablestore_3" outlet="v2"/>
         <dest obj="lowpass_5" inlet="in"/>
      </net>
      <net>
         <source obj="poly_2" outlet="cc4"/>
         <dest obj="tablestore_3" inlet="v4"/>
      </net>
      <net>
         <source obj="poly_2" outlet="cc5"/>
         <dest obj="tablestore_3" inlet="v5"/>
      </net>
      <net>
         <source obj="poly_2" outlet="cc6"/>
         <dest obj="tablestore_3" inlet="v6"/>
      </net>
      <net>
         <source obj="poly_2" outlet="cc7"/>
         <dest obj="tablestore_3" inlet="v7"/>
      </net>
      <net>
         <source obj="tablestore_3" outlet="v4"/>
         <dest obj="lowpass_7" inlet="in"/>
      </net>
      <net>
         <source obj="tablestore_3" outlet="v5"/>
         <dest obj="xfade_1" inlet="c"/>
      </net>
      <net>
         <source obj="tablestore_3" outlet="v6"/>
         <dest obj="*_3" inlet="b"/>
      </net>
      <net>
         <source obj="polycc_2" outlet="cc0"/>
         <dest obj="tablestore_4" inlet="v0"/>
      </net>
      <net>
         <source obj="polycc_2" outlet="cc1"/>
         <dest obj="tablestore_4" inlet="v1"/>
      </net>
      <net>
         <source obj="polycc_2" outlet="cc2"/>
         <dest obj="tablestore_4" inlet="v2"/>
      </net>
      <net>
         <source obj="polycc_2" outlet="cc3"/>
         <dest obj="tablestore_4" inlet="v3"/>
      </net>
      <net>
         <source obj="i_11" outlet="out"/>
         <dest obj="tablestore_4" inlet="offset"/>
      </net>
      <net>
         <source obj="tablestore_4" outlet="v2"/>
         <dest obj="*_2" inlet="b"/>
      </net>
      <net>
         <source obj="c_6" outlet="out"/>
         <dest obj="save_4" inlet="filename"/>
         <dest obj="load_5" inlet="filename"/>
      </net>
      <net>
         <source obj="right_1" outlet="r0"/>
         <dest obj="or_4" inlet="i1"/>
      </net>
      <net>
         <source obj="note_1" outlet="gate5"/>
         <dest obj="or_4" inlet="i2"/>
      </net>
      <net>
         <source obj="or_5" outlet="o"/>
         <dest obj="toggle_4" inlet="trig"/>
      </net>
      <net>
         <source obj="right_1" outlet="r1"/>
         <dest obj="or_5" inlet="i1"/>
      </net>
      <net>
         <source obj="note_1" outlet="gate4"/>
         <dest obj="or_5" inlet="i2"/>
      </net>
      <net>
         <source obj="note_1" outlet="gate3"/>
         <dest obj="xor_1" inlet="i3"/>
      </net>
      <net>
         <source obj="note_1" outlet="gate"/>
         <dest obj="or_3" inlet="i4"/>
      </net>
      <net>
         <source obj="note_1" outlet="gate2"/>
         <dest obj="tcopy_4" inlet="trig"/>
      </net>
      <net>
         <source obj="delayedpulse_1" outlet="pulse"/>
         <dest obj="right_2" inlet="redraw"/>
         <dest obj="right_3" inlet="redraw"/>
         <dest obj="right_4" inlet="redraw"/>
         <dest obj="right_8" inlet="redraw"/>
         <dest obj="right_6" inlet="redraw"/>
         <dest obj="top_2" inlet="redraw"/>
         <dest obj="right_7" inlet="redraw"/>
         <dest obj="right_5" inlet="redraw"/>
         <dest obj="top_3" inlet="redraw"/>
         <dest obj="demux_4" inlet="bang"/>
         <dest obj="top_1" inlet="redraw"/>
      </net>
      <net>
         <source obj="loadbang_4" outlet="pulse"/>
         <dest obj="delayedpulse_1" inlet="trig"/>
      </net>
      <net>
         <source obj="and_1" outlet="o"/>
         <dest obj="counter_2" inlet="trig"/>
         <dest obj="flipflop_2" inlet="trig"/>
      </net>
      <net>
         <source obj="cc_3" outlet="playstop"/>
         <dest obj="flipflop_1" inlet="set"/>
      </net>
      <net>
         <source obj="counter_2" outlet="c"/>
         <dest obj="flipflop_1" inlet="reset"/>
      </net>
      <net>
         <source obj="flipflop_1" outlet="o"/>
         <dest obj="and_1" inlet="i2"/>
      </net>
      <net>
         <source obj="note_10" outlet="gate"/>
         <dest obj="flipflop_2" inlet="set"/>
         <dest obj="inv_7" inlet="i"/>
      </net>
      <net>
         <source obj="inv_7" outlet="o"/>
         <dest obj="flipflop_2" inlet="reset"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
      <MidiChannel>7</MidiChannel>
      <HasMidiChannelSelector>true</HasMidiChannelSelector>
      <NPresets>0</NPresets>
      <NPresetEntries>0</NPresetEntries>
      <NModulationSources>0</NModulationSources>
      <NModulationTargetsPerSource>0</NModulationTargetsPerSource>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>-8</y>
      <width>1616</width>
      <height>876</height>
   </windowPos>
</patch-1.0>