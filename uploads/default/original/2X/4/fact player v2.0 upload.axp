<patch-1.0 appVersion="1.0.12">
   <comment type="patch/comment" x="98" y="0" text="Recorder settings *******************************"/>
   <comment type="patch/comment" x="98" y="28" text="record"/>
   <comment type="patch/comment" x="182" y="28" text="feedback"/>
   <comment type="patch/comment" x="266" y="28" text="overdub"/>
   <comment type="patch/comment" x="451" y="29" text="Sample settings ********************************************************"/>
   <obj type="ctrl/button" uuid="ef3d13774349df85aa9bfecf30dbc91ab8488b3f" name="button_1" x="98" y="42">
      <params>
         <bool32.mom name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_5" x="182" y="42">
      <params>
         <frac32.u.map name="value" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_5" x="266" y="42">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="448" y="56" text="oneshot"/>
   <comment type="patch/comment" x="560" y="56" text="start"/>
   <comment type="patch/comment" x="644" y="56" text="end"/>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_2" x="448" y="70">
      <params>
         <bool32.tgl name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_4" x="560" y="70">
      <params>
         <frac32.u.map name="value" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_7" x="644" y="70">
      <params>
         <frac32.u.map name="value" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="table/alloc 32b sdram" uuid="1a4546b7b52747ea765093ac97444601c44721e8" name="data" x="1162" y="84">
      <params/>
      <attribs>
         <combo attributeName="size" selection="1048576"/>
         <text attributeName="init">
            <sText><![CDATA[]]></sText>
         </text>
      </attribs>
   </obj>
   <comment type="patch/comment" x="98" y="154" text="delay mode"/>
   <comment type="patch/comment" x="196" y="154" text="delay"/>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_3" x="98" y="168">
      <params>
         <bool32.tgl name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_6" x="196" y="168">
      <params>
         <frac32.u.map name="value" value="13.5"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="448" y="182" text="SAMPLE PLAYBACK   ********************************************************************************"/>
   <comment type="patch/comment" x="448" y="210" text="trigger"/>
   <comment type="patch/comment" x="532" y="210" text="stop"/>
   <comment type="patch/comment" x="616" y="210" text="volume"/>
   <comment type="patch/comment" x="714" y="210" text="pitch"/>
   <comment type="patch/comment" x="798" y="210" text="stretch"/>
   <comment type="patch/comment" x="882" y="210" text="rate"/>
   <comment type="patch/comment" x="966" y="210" text="window"/>
   <obj type="ctrl/button" uuid="ef3d13774349df85aa9bfecf30dbc91ab8488b3f" name="button_4" x="448" y="224">
      <params>
         <bool32.mom name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/button" uuid="ef3d13774349df85aa9bfecf30dbc91ab8488b3f" name="button_5" x="532" y="224">
      <params>
         <bool32.mom name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_9" x="616" y="224">
      <params>
         <frac32.u.map name="value" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_1" x="714" y="224">
      <params>
         <frac32.s.map name="value" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_2" x="798" y="224">
      <params>
         <frac32.s.map name="value" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_3" x="882" y="224">
      <params>
         <frac32.s.map name="value" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_8" x="966" y="224">
      <params>
         <frac32.u.map name="value" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="70" y="294" text="save"/>
   <comment type="patch/comment" x="168" y="294" text="load"/>
   <obj type="ctrl/button" uuid="ef3d13774349df85aa9bfecf30dbc91ab8488b3f" name="button_2" x="70" y="308">
      <params>
         <bool32.mom name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/button" uuid="ef3d13774349df85aa9bfecf30dbc91ab8488b3f" name="button_3" x="168" y="308">
      <params>
         <bool32.mom name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="462" y="336" text="looper mode"/>
   <comment type="patch/comment" x="463" y="353" text="if on sample is triggered when"/>
   <comment type="patch/comment" x="462" y="364" text=" recording finishes - like a looper"/>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_1" x="462" y="378">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="714" y="448" text="smooth window dial"/>
   <obj type="math/smooth" uuid="6c5d08c282bb08bff24af85b4891447f99bcbc97" name="smooth_1" x="714" y="462">
      <params>
         <frac32.u.map name="time" value="36.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="210" y="476" text="smooth delay mode time changes"/>
   <obj type="math/smooth" uuid="6c5d08c282bb08bff24af85b4891447f99bcbc97" name="smooth_2" x="210" y="490">
      <params>
         <frac32.u.map name="time" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="938" y="518" text="mute when recording"/>
   <comment type="patch/comment" x="308" y="546" text="FACT RECORDER"/>
   <comment type="patch/comment" x="448" y="546" text="if looper mode is on,"/>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_3" x="966" y="546">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="308" y="560" text="records sample when "/>
   <comment type="patch/comment" x="448" y="560" text=" loop start  trigger is sent to player"/>
   <comment type="patch/comment" x="672" y="560" text="stop button or"/>
   <comment type="patch/comment" x="308" y="574" text="inlet rec is high"/>
   <comment type="patch/comment" x="448" y="574" text="If off only trigger button sent to player"/>
   <comment type="patch/comment" x="658" y="574" text="rec button stop sample"/>
   <comment type="patch/comment" x="812" y="574" text="fact player"/>
   <comment type="patch/comment" x="1050" y="574" text="input + sampler"/>
   <obj type="audio/in left" uuid="d40e60b7641fe75af4d7c91b45bb038aacafc52e" name="in_1" x="98" y="588">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="453249d2-1214-4675-b4cc-8fe7f0472b96" name="1_2" x="294" y="588">
      <params/>
      <attribs>
         <objref attributeName="table" obj="data"/>
         <combo attributeName="dubtrig" selection="external"/>
      </attribs>
      <object id="patch/object" uuid="453249d2-1214-4675-b4cc-8fe7f0472b96">
         <sDescription>Difficult to name. Pitchshifter, time-stretcher, play-rate adjuster (stretch+pitchshift), sampler, delay, granulizer...

See inputs/controls for their functions (hoover above them)</sDescription>
         <author>Remco van der most</author>
         <license>BSD</license>
         <helpPatch>delay.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="audio input"/>
            <bool32.risingfalling name="rec"/>
            <bool32.risingfalling name="overdub"/>
            <bool32.rising name="dubtrig"/>
            <frac32.positive name="feedback"/>
            <frac32.positive name="delay"/>
            <bool32 name="delaymode"/>
         </inlets>
         <outlets>
            <bool32.pulse name="start"/>
            <bool32 name="xtrig"/>
            <int32 name="length"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <objref name="table"/>
            <combo name="dubtrig">
               <MenuEntries>
                  <string>internal</string>
                  <string>external</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int prevo;
int dhold;
int dcount;

int32_t dubfade;
int32_t dubphase;
int32_t prev;
int32_t step;
int32_t prevf;
int32_t stepf;
int32_t cnt;
int32_t fade;
int32_t env;
int32_t iix;
int32_t ii;
uint32_t dubpos;

uint32_t delaypos;
uint32_t position;
uint32_t delay;
uint32_t x;
uint32_t prevxx;
uint32_t offset;
uint32_t stepxx;
uint32_t delayin;
uint32_t Pdelayin;
uint32_t dwrap;
uint32_t lastmax;
uint32_t wrap;
uint32_t writepos;
uint32_t recorded;
uint32_t frecorded;
uint32_t length;
uint32_t buffer;
uint32_t bsize;
//uint32_t bufftable[1024];
uint32_t in;
bool pd;
bool rec;
bool overdub;
bool dubbing;
bool dtrig;
bool recording;
bool start;
bool prevd;

bool delaymode;
bool dt;
bool xtrig;
bool fadein;
bool delayoff;]]></code.declaration>
         <code.krate><![CDATA[fade=1<<10;
bsize=1024;
dubphase=0x07FFFFFF/48;


length=(attr_table.array[0+bsize]<<15)+attr_table.array[1+bsize];




x=((___SMMUL(inlet_delay<<3,(length*(0x07FFFFFF/length))<<2))/(0x07FFFFFF/length));
   stepxx = (x - prevxx)>>4;
   delay = prevxx;
   prevxx =x;


    


step = (inlet_feedback - prev)>>4;
int32_t i = prev;
prev = inlet_feedback;


if (prevo!=inlet_overdub){
	
	overdub=inlet_overdub;
	if (!delaymode){
		dubfade=0x07FFFFFF;
		if (overdub){
			if (prevo==2){
				delayoff=1;
				dhold=1;
			}
			fadein=1;
		}
		else if (!overdub){
			fadein=0;
		}
		}
	prevo=inlet_overdub;
	}
if ((prevd!=inlet_delaymode)&&!dhold){
	prevd=inlet_delaymode;
	fadein=0;
	dubfade=0x07FFFFFF;
	dhold=1;
}

if ((dhold>0)&&(!dubbing)){
		dhold=0;
		if (!delayoff){
			if (prevd){
				delaymode=1;
				delay=delayin;
				dubfade=0x07FFFFFF;
				fadein=1;
				
				}
			if (!prevd){
				delaymode=0;
				fadein=0;
				if (inlet_overdub){
					prevo=2;
					
				}
			}
		}
		if (delayoff){
			delayoff=0;
		}
	
}

if((inlet_rec>0)&&!rec){
	rec=1;
	recording=1;
	writepos=0;
	dubpos=0;
	cnt=0;
	length=0;
	attr_table.array[0+bsize]=0;
	attr_table.array[1+bsize]=0;
}
else if((inlet_rec==0)&&rec){
	start=1;
	rec=0;
	attr_table.array[0+bsize]=((writepos)/(1<<15));
	attr_table.array[1+bsize]=writepos-(((writepos)/(1<<15))<<15);
	length=writepos;
	lastmax=length;
	dubpos=0;
	//buffer=0;
//	if (!dubbing){
		cnt=fade+8192;
//		}
	}

if (inlet_dubtrig&&!dtrig){
	if (!delaymode){
	lastmax=dubpos;
	dtrig=1;
	dubpos=0;
	}
}
else if (!inlet_dubtrig){
	dtrig=0;
}
if (delaymode && (dubpos>=length) && (length>0)){
	lastmax=length;
	dubpos=0;
}
if (!attr_dubtrig && (dubpos>=length) && (length>0)){
	dubpos=0;
	lastmax=length;
}



if (dubfade>0){
	dubfade-=dubphase;
}
if (dubfade<=0){
	dubfade=0;
}

if (fadein){
	env=0x07FFFFFF-dubfade;
}
if (!fadein){
	env=dubfade;
}
stepf = (env - prevf)>>4;
   ii = prevf;
   prevf = env;
   dubbing=ii;


outlet_start=start;
if ((dubpos==0)&&!dt){
	dt=1;
	xtrig=1;;
}
if (dubpos>0){
	dt=0;
}
outlet_xtrig=xtrig;
outlet_length=length;
start=0;

xtrig=0;]]></code.krate>
         <code.srate><![CDATA[if((rec>0) && (writepos>=bsize)){
attr_table.array[writepos-bsize+32+bsize] = attr_table.array[buffer];
}
if(cnt>0){
if (cnt>=(8192-(fade<<1))){	
		attr_table.array[writepos-bsize+32+bsize]= attr_table.array[buffer];
	}
else  {
	recording=0;
	attr_table.array[writepos-bsize+32+bsize]=0;
}

cnt-=1;
}

if (dubpos>=bsize){
		position=dubpos-bsize;
	}
	if (dubpos<bsize){
		position=dubpos-bsize+lastmax;
	}


if (delaymode){
	offset=0;
	if (position<(lastmax-delay)){
			delaypos=delay;
	}
	else {
		delaypos=0-(lastmax-delay);
	}
	
}
else {
	delaypos=0;
	offset=lastmax;
	}


if ((dubbing)&&!rec&&(length>0)){
		attr_table.array[position+delaypos+32+bsize]= __SSAT((___SMMUL((attr_table.array[buffer] )<<3,ii<<2)) + ___SMMUL(attr_table.array[bsize+position+32]<<3,i<<2),16);
		if (((position+delaypos)<(fade<<1))  ){			
			attr_table.array[position+delaypos+32+lastmax+bsize]= __SSAT( ((___SMMUL((attr_table.array[buffer] )<<3,ii<<2)) + ___SMMUL(attr_table.array[position+32+bsize+offset]<<3,i<<2)),16);
		}


	
}
i += step;
ii += stepf;
x += stepxx;

in=__SSAT(inlet_in>>14,16);
attr_table.array[buffer]=in;
buffer+=1;
if (buffer>=bsize){
	buffer=0;
}


writepos = (writepos + 1)&attr_table.LENGTHMASK;
dubpos = (dubpos + 1)&attr_table.LENGTHMASK;]]></code.srate>
      </object>
   </patchobj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_1" x="462" y="588">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_1" x="532" y="588">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_3" x="672" y="588">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="8c9cd62e-fe31-4ff5-94fc-f0ec035e726f" name="2_3" x="812" y="588">
      <params/>
      <attribs>
         <objref attributeName="table" obj="data"/>
      </attribs>
      <object id="patch/object" uuid="8c9cd62e-fe31-4ff5-94fc-f0ec035e726f">
         <sDescription>Difficult to name. Pitchshifter, time-stretcher, play-rate adjuster (stretch+pitchshift), sampler, delay, granulizer...

See inputs/controls for their functions (hoover above them)</sDescription>
         <author>Remco van der most</author>
         <license>BSD</license>
         <helpPatch>delay.axh</helpPatch>
         <inlets>
            <frac32.positive name="VCA"/>
            <bool32 name="trigger" description="when high, restarts at &quot;phase-position&quot;  of phase input+parameter"/>
            <bool32 name="stop"/>
            <frac32.bipolar name="pitchshift" description="ONLY pitchshifts the signal without stretching it. normal semitone response."/>
            <frac32.bipolar name="stretch" description="ONLY stretches the signal without pitchshifting it. normal semitone response."/>
            <frac32.bipolar name="rate"/>
            <bool32.risingfalling name="oneshot"/>
            <frac32.positive name="start"/>
            <frac32.positive name="end"/>
            <frac32.positive name="window"/>
         </inlets>
         <outlets>
            <frac32buffer name="out"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int32_t out;
int32_t mp;
int32_t phase;
int32_t start;
int32_t end;
int32_t phs;
int32_t rate;
int32_t bsize;
int32_t length;
int32_t xlength;
int32_t xoffset;
int32_t total;
int32_t cnt;
int32_t fade;
int32_t fd;
float32_t ratio;
int32_t fBase;
int32_t fRate;
int32_t LNG;
int32_t window;
int32_t rez;
int32_t Pstart;
int32_t Pend;
int32_t Fsample;
int32_t sample;
int32_t prevv;
int32_t Fphase;
int32_t Fenv;
int32_t inenv;
int32_t Uphase;
int32_t RATEPRE;
int32_t i;
int32_t READ(int T,uint32_t R,uint32_t L){
      int32_t tmp_a2;
      int32_t tmp_di = T/R;
      int32_t tmp_w1 = (T-tmp_di*R)*R>>2;
      int32_t tmp_a1 = attr_table.array[tmp_di+32+start+bsize];
      tmp_a1 = (tmp_a1<<14)+___SMMUL(attr_table.array[(tmp_di+1)+32+start+bsize]-tmp_a1<<16,tmp_w1);
      if((tmp_di<fade)&&fadeon){
	      tmp_a2 = attr_table.array[tmp_di+L+32+start+bsize];
	      tmp_a2 = (tmp_a2<<14)+___SMMUL(attr_table.array[(tmp_di+1)+L+32+start+bsize]-tmp_a2<<16,tmp_w1);
		 tmp_a1+=___SMMUL(tmp_a2-tmp_a1,__USAT(fade-tmp_di,30)<<(30-fd))<<2;
      }
      return out= tmp_a1;
}
int32_t prestep;
    int32_t step;

bool play;
bool prevplay;
bool snc;
bool trig;
bool returntrig;
bool oneshot;
bool fadeon;

bool stop;]]></code.declaration>
         <code.init><![CDATA[Fphase=0x07FFFFFF/(3);
fade=1<<10;
fd=10;
bsize=1024;]]></code.init>
         <code.krate><![CDATA[total=(attr_table.array[0+bsize]<<15)+attr_table.array[1+bsize];
oneshot=inlet_oneshot;
//bsize=1024;

if((inlet_trigger>0)&&!snc){
	if (!play){
		trig=1;
	}
	else if (play){
		returntrig=1;
		play=0;
	}
	start=((inlet_start<<4)/(0x7FFFFFF0/total));
	end=(( inlet_end<<4)/(0x7FFFFFF0/total));
	if (end<=(start+fade)){
		end=start+fade;
	}
	xlength=end-start;
	snc=1;
}

else if(inlet_trigger==0){
	snc=0;
	}

if (oneshot){	
	length=xlength+(fade<<4);
	xoffset=(((fade<<4))*RATEPRE);
//length=xlength;
//	xoffset=0;
	if (inlet_rate>=0){
//		if ((phase>=(0-rez-window-xoffset))  && (prevv<(0-rez-window-xoffset)))  {
//					play=0;
//					
//				}
		if ((phase>=(0-window-xoffset))  && (prevv<(0-window-xoffset)))  {
					play=0;
					
				}
			}
	else {
		if   ((!(phase>(0+rez-window)))&&((prevv)>(0+rez-window)))  {
					play=0;
			}
	}
}
else if (!oneshot){
	length=xlength;
	xoffset=0;
	if (phase>=(0x07FFFFFF>>1)){
		fadeon=1;
		}
}

if (inlet_stop && !stop){
	stop=1;
	play=0;
	returntrig=0;
}
else if (!inlet_stop){
	stop=0;
}
//generate play env - fade on trigger/ rertrigger and stop
if (Fenv>0){
	Fenv-=Fphase;
	if (Fenv<=0){
		Fenv=0;
		if (returntrig){
			returntrig=0;
			trig=1;
			}
	}
}

if (play!=prevplay){
	Fenv=0x07FFFFFF;
	prevplay=play;
}


if (play){
	inenv=0x07FFFFFF-Fenv;
	}
else if (!play){
	inenv=Fenv;

}
//equal power curve for fade
int32_t curve;
SINE2TINTERP(((0x07FFFFFF-inenv)<<3)+(1<<30),curve)
// *inlet for vca
inenv= ___SMMUL((curve>>4)<<3,inlet_VCA<<2);
if (inenv<=0){
	inenv=0;
}

step = (inenv - prestep)>>4;
 i = prestep;
   prestep = inenv;

MTOFEXTENDED(0,fBase);
MTOFEXTENDED(inlet_stretch,fRate)
ratio=(float32_t)fRate/fBase;

LNG=___SMMUL(length,(0x7FFFFFF0))<<1;
rate=((uint64_t)1<<32)/LNG;
int32_t RATE=rate*ratio;
RATEPRE=RATE;
int32_t prate;
MTOFEXTENDED(inlet_pitchshift-inlet_stretch,prate)
float32_t pratio=(float32_t)prate/fBase;
window=((uint64_t)inlet_window<<16)/length;

float32_t wratio=(float32_t)(1<<30)/(window>>1);
prate=(int64_t)((int64_t)RATE*pratio-RATE)*wratio;
rez=(((3)<<4)*(RATE));

if (trig&&(total>0)){
	fadeon=0;
	if (inlet_rate>=0){	
		phase=0-window;
		}
	else if (inlet_rate<0){
		phase=(0-window-xoffset);
		}
	prevv=phase;
	play=1;
	phs=0;
	trig=0;
}


prevv=phase;]]></code.krate>
         <code.srate><![CDATA[int32_t FRQ=___SMMUL(prate<<2,inlet_rate<<3);
int32_t FRQQ=___SMMUL(RATE<<2,inlet_rate<<3);

phase+=FRQQ;
phs+=FRQ;



//if (play){
	int32_t P1=((uint32_t)phs)>>1;
	int32_t P2=((uint32_t)phs+(1<<31))>>1;
	
	int32_t tmp1=READ(phase+(___SMMUL(P2,window)<<2),rate,LNG);
	int32_t tmp2=READ(phase+(___SMMUL(P1,window)<<2),rate,LNG);

	SINE2TINTERP(phs+(1<<30),mp)
	//mp=-mp;
	mp=(mp>>2)+(1<<29);
	int32_t out=tmp2+(___SMMUL(tmp1-tmp2,mp)<<2);
 outlet_out =  ___SMMUL(out,i)<<5;
   i += step;]]></code.srate>
      </object>
   </patchobj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="966" y="588">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="faedbea4612d9bd3644d6d3bf31946d848a70e19" name="+_1" x="1050" y="588">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/out left" uuid="b11a3c09b2fdd575ea8212f2ce7743d5269253b1" name="out_1" x="1162" y="588">
      <params/>
      <attribs/>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_1" x="154" y="882">
      <params/>
      <attribs>
         <table attributeName="str" table="/mattisSOgreat"/>
      </attribs>
   </obj>
   <obj type="table/save" uuid="3e4108b607d56d9e1cd10abb898b58eea11e53b2" name="save_1" x="322" y="882">
      <params/>
      <attribs>
         <objref attributeName="table" obj="data"/>
      </attribs>
   </obj>
   <obj type="table/load" uuid="600cc22c6734d23a82620da1a14e78782a7e168e" name="load_1" x="462" y="882">
      <params/>
      <attribs>
         <objref attributeName="table" obj="data"/>
      </attribs>
   </obj>
   <nets>
      <net>
         <source obj="button_1" outlet="o"/>
         <dest obj="inv_3" inlet="i"/>
         <dest obj="or_3" inlet="i2"/>
         <dest obj="1_2" inlet="rec"/>
      </net>
      <net>
         <source obj="c_1" outlet="out"/>
         <dest obj="load_1" inlet="filename"/>
         <dest obj="save_1" inlet="filename"/>
      </net>
      <net>
         <source obj="button_3" outlet="o"/>
         <dest obj="load_1" inlet="trig"/>
      </net>
      <net>
         <source obj="button_2" outlet="o"/>
         <dest obj="save_1" inlet="trig"/>
      </net>
      <net>
         <source obj="+_1" outlet="out"/>
         <dest obj="out_1" inlet="wave"/>
      </net>
      <net>
         <source obj="inv_3" outlet="o"/>
         <dest obj="vca_1" inlet="v"/>
      </net>
      <net>
         <source obj="toggle_5" outlet="o"/>
         <dest obj="1_2" inlet="overdub"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="+_1" inlet="in2"/>
      </net>
      <net>
         <source obj="button_4" outlet="o"/>
         <dest obj="or_1" inlet="i1"/>
         <dest obj="1_2" inlet="dubtrig"/>
      </net>
      <net>
         <source obj="dial_5" outlet="out"/>
         <dest obj="1_2" inlet="feedback"/>
      </net>
      <net>
         <source obj="dial_1" outlet="out"/>
         <dest obj="2_3" inlet="pitchshift"/>
      </net>
      <net>
         <source obj="dial_2" outlet="out"/>
         <dest obj="2_3" inlet="stretch"/>
      </net>
      <net>
         <source obj="dial_3" outlet="out"/>
         <dest obj="2_3" inlet="rate"/>
      </net>
      <net>
         <source obj="dial_8" outlet="out"/>
         <dest obj="smooth_1" inlet="in"/>
      </net>
      <net>
         <source obj="dial_9" outlet="out"/>
         <dest obj="2_3" inlet="VCA"/>
      </net>
      <net>
         <source obj="button_5" outlet="o"/>
         <dest obj="or_3" inlet="i1"/>
      </net>
      <net>
         <source obj="toggle_2" outlet="o"/>
         <dest obj="2_3" inlet="oneshot"/>
      </net>
      <net>
         <source obj="dial_4" outlet="out"/>
         <dest obj="2_3" inlet="start"/>
      </net>
      <net>
         <source obj="dial_7" outlet="out"/>
         <dest obj="2_3" inlet="end"/>
      </net>
      <net>
         <source obj="or_1" outlet="o"/>
         <dest obj="2_3" inlet="trigger"/>
      </net>
      <net>
         <source obj="or_3" outlet="o"/>
         <dest obj="2_3" inlet="stop"/>
      </net>
      <net>
         <source obj="and_1" outlet="o"/>
         <dest obj="or_1" inlet="i2"/>
      </net>
      <net>
         <source obj="toggle_1" outlet="o"/>
         <dest obj="and_1" inlet="i1"/>
      </net>
      <net>
         <source obj="smooth_1" outlet="out"/>
         <dest obj="2_3" inlet="window"/>
      </net>
      <net>
         <source obj="toggle_3" outlet="o"/>
         <dest obj="1_2" inlet="delaymode"/>
      </net>
      <net>
         <source obj="dial_6" outlet="out"/>
         <dest obj="smooth_2" inlet="in"/>
      </net>
      <net>
         <source obj="smooth_2" outlet="out"/>
         <dest obj="1_2" inlet="delay"/>
      </net>
      <net>
         <source obj="in_1" outlet="wave"/>
         <dest obj="+_1" inlet="in1"/>
         <dest obj="1_2" inlet="in"/>
      </net>
      <net>
         <source obj="1_2" outlet="start"/>
         <dest obj="and_1" inlet="i2"/>
      </net>
      <net>
         <source obj="2_3" outlet="out"/>
         <dest obj="vca_1" inlet="a"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>-8</y>
      <width>1616</width>
      <height>876</height>
   </windowPos>
</patch-1.0>