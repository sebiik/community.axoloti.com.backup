<patch-1.0 appVersion="1.0.12">
   <patchobj type="patch/object" uuid="671e5832-e93e-4fff-bec5-cbb6c1f8bd92" name="arrows_notes" x="770" y="0">
      <params/>
      <attribs>
         <spinner attributeName="1" value="91"/>
         <spinner attributeName="2" value="92"/>
         <spinner attributeName="3" value="93"/>
         <spinner attributeName="4" value="94"/>
      </attribs>
      <object id="patch/object" uuid="671e5832-e93e-4fff-bec5-cbb6c1f8bd92">
         <sDescription>4 positive integer controls with individual outputs. 
this version uses attributes instead of parameters.</sDescription>
         <author>Jaffasplaffa / chaocrator</author>
         <license>BSD</license>
         <inlets/>
         <outlets>
            <int32.positive name="o1" description="output"/>
            <int32.positive name="o2"/>
            <int32.positive name="o3"/>
            <int32.positive name="o4"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-65536" MaxValue="65535" DefaultValue="0"/>
            <spinner name="2" MinValue="-65536" MaxValue="65535" DefaultValue="0"/>
            <spinner name="3" MinValue="-65536" MaxValue="65535" DefaultValue="0"/>
            <spinner name="4" MinValue="-65536" MaxValue="65535" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[outlet_o1= attr_1;
outlet_o2= attr_2;
outlet_o3= attr_3;
outlet_o4= attr_4;]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="0" y="56" text="highlighted notes are always ON. "/>
   <comment type="patch/comment" x="0" y="70" text="by pressing arrows, we shift available notes area, so when any arrow is pressed, all highlighted notes go OFF."/>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="up_velo" x="896" y="70">
      <params/>
      <attribs>
         <spinner attributeName="1" value="49"/>
         <spinner attributeName="2" value="41"/>
         <spinner attributeName="3" value="33"/>
         <spinner attributeName="4" value="25"/>
         <spinner attributeName="5" value="17"/>
         <spinner attributeName="6" value="13"/>
         <spinner attributeName="7" value="9"/>
         <spinner attributeName="8" value="5"/>
         <spinner attributeName="9" value="57"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="c850b64d-1743-4950-9bc1-03f72e155a1a" name="arrows_LED" x="1512" y="70">
      <params/>
      <attribs>
         <spinner attributeName="ch1" value="1"/>
         <spinner attributeName="ch2" value="1"/>
         <spinner attributeName="ch3" value="1"/>
         <spinner attributeName="ch4" value="1"/>
         <combo attributeName="dev" selection="usb host port 1"/>
      </attribs>
      <object id="patch/object" uuid="c850b64d-1743-4950-9bc1-03f72e155a1a">
         <sDescription>MIDI note output x4. 
integer version by chaocrator. 
note MIDI channels are attributes instead of parameters.</sDescription>
         <author>Johannes Taelman / jaffasplaffa / chaocrator</author>
         <license>BSD</license>
         <helpPatch>midi_out.axh</helpPatch>
         <inlets>
            <int32 name="note1"/>
            <int32.positive name="velo1"/>
            <bool32.rising name="trig1" description="trigger"/>
            <int32 name="note2"/>
            <int32.positive name="velo2"/>
            <bool32.rising name="trig2" description="trigger"/>
            <int32 name="note3"/>
            <int32.positive name="velo3"/>
            <bool32 name="trig3"/>
            <int32 name="note4"/>
            <int32.positive name="velo4"/>
            <bool32 name="trig4"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <spinner name="ch1" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="ch2" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="ch3" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="ch4" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <combo name="dev">
               <MenuEntries>
                  <string>din</string>
                  <string>usb host port 1</string>
                  <string>usb host port 2</string>
                  <string>usb host port 3</string>
                  <string>usb host port 4</string>
                  <string>internal port 1</string>
                  <string>internal port 2</string>
                  <string>usb device port 1</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_DIN, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 2</string>
                  <string>MIDI_DEVICE_USB_HOST, 3</string>
                  <string>MIDI_DEVICE_USB_HOST, 4</string>
                  <string>MIDI_DEVICE_INTERNAL, 1</string>
                  <string>MIDI_DEVICE_INTERNAL, 2</string>
                  <string>MIDI_DEVICE_USB_DEVICE, 1</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig1;
int lastnote1;

int ntrig2;
int lastnote2;

int ntrig3;
int lastnote3;

int ntrig4;
int lastnote4;]]></code.declaration>
         <code.init><![CDATA[ntrig1=0;

ntrig2=0;

ntrig3=0;

ntrig4=0;]]></code.init>
         <code.krate><![CDATA[// Ch1 //
{
if ((inlet_trig1>0) && !ntrig1) {
lastnote1 = inlet_note1&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch1-1),lastnote1,inlet_velo1);  ntrig1=1;
}
if (!(inlet_trig1>0) && ntrig1) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch1-1),lastnote1,__USAT(inlet_velo1,7)); ntrig1=0;}
}


// Ch2 //
{
if ((inlet_trig2>0) && !ntrig2) {
lastnote2 = inlet_note2&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch2-1),lastnote2,inlet_velo2);  ntrig2=1;
}
if (!(inlet_trig2>0) && ntrig2) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch2-1),lastnote2,__USAT(inlet_velo2,7)); ntrig2=0;}
}


// Ch3 //
{
if ((inlet_trig3>0) && !ntrig3) {
lastnote3 = inlet_note3&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch3-1),lastnote3,inlet_velo3);  ntrig3=1;
}
if (!(inlet_trig3>0) && ntrig3) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch3-1),lastnote3,__USAT(inlet_velo3,7)); ntrig3=0;}
}


// Ch4 //
{
if ((inlet_trig4>0) && !ntrig4) {
lastnote4 = inlet_note4&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch4-1),lastnote4,inlet_velo4);  ntrig4=1;
}
if (!(inlet_trig4>0) && ntrig4) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch4-1),lastnote4,__USAT(inlet_velo4,7)); ntrig4=0;}
}]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="0" y="84" text="arrows also change horizontal and vertical shift counters value, so highlighted notes are shifted respectively."/>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="down_velo" x="966" y="84">
      <params/>
      <attribs>
         <spinner attributeName="1" value="57"/>
         <spinner attributeName="2" value="5"/>
         <spinner attributeName="3" value="9"/>
         <spinner attributeName="4" value="13"/>
         <spinner attributeName="5" value="17"/>
         <spinner attributeName="6" value="25"/>
         <spinner attributeName="7" value="33"/>
         <spinner attributeName="8" value="41"/>
         <spinner attributeName="9" value="49"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      default: outlet_value= attr_5;break;
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="9bd447e7-04b4-4e04-91b1-6f833d81504e" name="LPPro_arrows" x="0" y="98">
      <params>
         <bool32.tgl name="up" MidiCC="91" value="0"/>
         <bool32.tgl name="down" MidiCC="92" value="0"/>
         <bool32.tgl name="left" MidiCC="93" value="0"/>
         <bool32.tgl name="right" MidiCC="94" value="0"/>
         <bool32.tgl name="ClrScr" MidiCC="10" value="0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="9bd447e7-04b4-4e04-91b1-6f833d81504e">
         <sDescription>originally 6x constant boolean, toggle control. 
optimized for use with this certain patch.</sDescription>
         <author>Remco van der Most / modded by chaocrator</author>
         <license>BSD / do what thou wilt should</license>
         <helpPatch>ctrl.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="alwaysON"/>
            <bool32 name="alwaysOFF"/>
            <bool32 name="up"/>
            <bool32 name="down"/>
            <bool32 name="left"/>
            <bool32 name="right"/>
            <bool32 name="ClrScr"/>
         </outlets>
         <displays/>
         <params>
            <bool32.tgl name="up"/>
            <bool32.tgl name="down"/>
            <bool32.tgl name="left"/>
            <bool32.tgl name="right"/>
            <bool32.tgl name="ClrScr"/>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[// note is always on when highlighted
outlet_alwaysON=1;
// and then always goes off
outlet_alwaysOFF=0;
// arrow inputs from the top of Launchpad Pro
outlet_up=param_up;
outlet_down=param_down;
outlet_left=param_left;
outlet_right=param_right;
outlet_ClrScr=param_ClrScr;]]></code.krate>
      </object>
   </patchobj>
   <obj type="mux/mux 2" uuid="e1c92bc92f4d191bfadf0efeae4503b458a4e440" name="mux_1" x="196" y="98">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="left_velo" x="1036" y="98">
      <params/>
      <attribs>
         <spinner attributeName="1" value="49"/>
         <spinner attributeName="2" value="41"/>
         <spinner attributeName="3" value="33"/>
         <spinner attributeName="4" value="25"/>
         <spinner attributeName="5" value="17"/>
         <spinner attributeName="6" value="13"/>
         <spinner attributeName="7" value="9"/>
         <spinner attributeName="8" value="5"/>
         <spinner attributeName="9" value="57"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="velo_up" x="1260" y="98">
      <params/>
      <attribs>
         <spinner attributeName="o" value="0"/>
      </attribs>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high, outputs &quot;o&quot; attribute value,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <int32 name="in" description="input"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <int32 name="out" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="o" MinValue="-2147483648" MaxValue="2147483647" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = attr_o;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="right_velo" x="1106" y="112">
      <params/>
      <attribs>
         <spinner attributeName="1" value="57"/>
         <spinner attributeName="2" value="5"/>
         <spinner attributeName="3" value="9"/>
         <spinner attributeName="4" value="13"/>
         <spinner attributeName="5" value="17"/>
         <spinner attributeName="6" value="25"/>
         <spinner attributeName="7" value="33"/>
         <spinner attributeName="8" value="41"/>
         <spinner attributeName="9" value="49"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="13531c88-f877-4d68-9648-93fca1428c06" name="or_1" x="98" y="140">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="13531c88-f877-4d68-9648-93fca1428c06">
         <sDescription>logic OR with 5 inputs</sDescription>
         <author>Alex / chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <bool32 name="i1" description="input 1"/>
            <bool32 name="i2" description="input 2"/>
            <bool32 name="i3" description="input 3"/>
            <bool32 name="i4" description="input 4"/>
            <bool32 name="i5" description="input 5"/>
         </inlets>
         <outlets>
            <bool32 name="o" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[outlet_o = (inlet_i1)||(inlet_i2)||(inlet_i3)||(inlet_i4)||(inlet_i5);]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="velo_down" x="1330" y="140">
      <params/>
      <attribs>
         <spinner attributeName="o" value="0"/>
      </attribs>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high, outputs &quot;o&quot; attribute value,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <int32 name="in" description="input"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <int32 name="out" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="o" MinValue="-2147483648" MaxValue="2147483647" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = attr_o;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="85fe3bf7-afce-42bf-8280-5a030d0175e8" name="layout_shift_handler" x="196" y="196">
      <params/>
      <attribs>
         <spinner attributeName="Hoffset" value="2"/>
         <spinner attributeName="Voffset" value="12"/>
      </attribs>
      <object id="patch/object" uuid="85fe3bf7-afce-42bf-8280-5a030d0175e8">
         <sDescription>this object shifts the 8x8 area of Magic Tone Network layout (3 octaves in total) available for playing.
based on Robert Schirmer&apos;s accum object.</sDescription>
         <author>chaocrator@gmail.com</author>
         <license>do what thou wilt should be the whole of the law</license>
         <helpPatch>math.axh</helpPatch>
         <inlets>
            <bool32.rising name="up"/>
            <bool32.rising name="down" description="trigger down"/>
            <bool32.rising name="left"/>
            <bool32.rising name="right" description="trigger right"/>
            <bool32.rising name="reset" description="reset"/>
         </inlets>
         <outlets>
            <int32.bipolar name="transpose" description="total H+V transposition (for played notes)"/>
            <int32.bipolar name="Vshift" description="current vertical shift in semitones"/>
            <int32.bipolar name="Hshift" description="current horizontal shift in semitones"/>
            <int32.bipolar name="Vcounter" description="vertical shift counter value (0 to 9)"/>
            <int32.bipolar name="Hcounter" description="horizontal shift counter value (0 to 9)"/>
         </outlets>
         <displays>
            <int32.label name="Vcount" description="Vcount"/>
            <int32.label name="Hcount" description="Hcount"/>
         </displays>
         <params/>
         <attribs>
            <spinner name="Hoffset" MinValue="-127" MaxValue="127" DefaultValue="0"/>
            <spinner name="Voffset" MinValue="-127" MaxValue="127" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int left; 
int right; 
int up; 
int down; 
int rtrig; 
int accu; 
int Haccu; 
int Vaccu; 
int Hcount;
int Vcount;
//int Hoddcount;]]></code.declaration>
         <code.init><![CDATA[left = 0;
right = 0;
up = 0;
down = 0;
rtrig = 0;
accu = 0;
Haccu = 0;
Vaccu = 0;
Hcount = 5;
//Hoddcount = 5;
Vcount = 5;]]></code.init>
         <code.krate><![CDATA[/* this object is made in quite illogical fashion at the moment - 
   horizontal and vertiacl shift are tuneable, but shift iteration 
   counter is hardcoded.
   anyway, it works for Magic Tone Network layout, so for now 
   provided as is. to be enhanced later. */

// vertical shift
// up
if ((inlet_up) && !up) {
	if (Vcount>=1 && Vcount<9) {
	Vcount += 1;  {Vaccu += attr_Voffset; up=1;}
	}
	else {Hcount += 0; {Haccu += 0; up=1;}
	}
}
if (!inlet_up) up=0;
// down
if ((inlet_down) && !down) {
	if (Vcount>1 && Vcount<=9) {
	Vcount -= 1;  {Vaccu -= attr_Voffset; down=1;}
	}
	else {Vcount -= 0; {Vaccu -= 0; down=1;}
	}
}
if (!inlet_down) down=0;
/********
    horizontal shift
 ********/
/*  counter can take negative values (first implementation was in -4 to +4 range),
    but actual implementation works in 1 to 9 range, because it's optimal
    for passing to next objects, avoiding extra modofications of those objects. */
// left
if ((inlet_left) && !left) {
	if (Hcount>=1 && Hcount<9) {
	Hcount += 1;  {Haccu += attr_Hoffset; left=1;}
	}
	else {Hcount += 0; {Haccu += 0; left=1;}
	}
/* oddcounter is currently unused - commenting it out
// oddcounter
if((Hcount & 1) != 0) {
	   if (Hoddcount>3 && Hoddcount<=7) { Hoddcount -= 1; }
	   else Hoddcount -= 0;
        }
// end oddcounter
*/
}
if (!inlet_left) left=0;
// right
if ((inlet_right) && !right) {
	if (Hcount>1 && Hcount<=9) {
	Hcount -= 1;  {Haccu -= attr_Hoffset; right=1;}
	}
	else {Hcount -= 0; {Haccu -= 0; right=1;}
	}
/* oddcounter is currently unused - commenting it out
// oddcounter
if((Hcount & 1) != 0) {
	   if (Hoddcount>=3 && Hoddcount<7) { Hoddcount += 1; }
	   else Hoddcount -= 0;
        }
// end oddcounter
*/
}
if (!inlet_right) right=0;
// reset to initial (center) position
if ((inlet_reset) && !rtrig) {accu = 0; rtrig=1;}
if (!inlet_reset) rtrig=0;
// outlets
outlet_transpose = Haccu + Vaccu;
outlet_Vshift = Vaccu;
outlet_Hshift = Haccu;
outlet_Vcounter = Vcount;
outlet_Hcounter = Hcount;
//outlet_Hoddcounter = Hoddcounter;
disp_Vcount=Vcount;
disp_Hcount=Hcount;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="velo_left" x="1260" y="196">
      <params/>
      <attribs>
         <spinner attributeName="o" value="0"/>
      </attribs>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high, outputs &quot;o&quot; attribute value,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <int32 name="in" description="input"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <int32 name="out" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="o" MinValue="-2147483648" MaxValue="2147483647" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = attr_o;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <obj type="const/i" uuid="e202f44b2df17ae0b3e663b98ea6b14c8ff00408" name="i_1" x="770" y="210">
      <params/>
      <attribs>
         <spinner attributeName="value" value="21"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="velo_right" x="1330" y="238">
      <params/>
      <attribs>
         <spinner attributeName="o" value="0"/>
      </attribs>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high, outputs &quot;o&quot; attribute value,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <int32 name="in" description="input"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <int32 name="out" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="o" MinValue="-2147483648" MaxValue="2147483647" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = attr_o;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="rootnote1" x="364" y="252">
      <params/>
      <attribs>
         <spinner attributeName="1" value="-1"/>
         <spinner attributeName="2" value="28"/>
         <spinner attributeName="3" value="26"/>
         <spinner attributeName="4" value="18"/>
         <spinner attributeName="5" value="16"/>
         <spinner attributeName="6" value="-1"/>
         <spinner attributeName="7" value="-1"/>
         <spinner attributeName="8" value="28"/>
         <spinner attributeName="9" value="26"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="rootnote2" x="434" y="266">
      <params/>
      <attribs>
         <spinner attributeName="1" value="12"/>
         <spinner attributeName="2" value="34"/>
         <spinner attributeName="3" value="32"/>
         <spinner attributeName="4" value="24"/>
         <spinner attributeName="5" value="22"/>
         <spinner attributeName="6" value="14"/>
         <spinner attributeName="7" value="12"/>
         <spinner attributeName="8" value="34"/>
         <spinner attributeName="9" value="32"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <obj type="const/i" uuid="e202f44b2df17ae0b3e663b98ea6b14c8ff00408" name="i_2" x="770" y="266">
      <params/>
      <attribs>
         <spinner attributeName="value" value="44"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="rootnote3" x="504" y="280">
      <params/>
      <attribs>
         <spinner attributeName="1" value="36"/>
         <spinner attributeName="2" value="58"/>
         <spinner attributeName="3" value="56"/>
         <spinner attributeName="4" value="48"/>
         <spinner attributeName="5" value="46"/>
         <spinner attributeName="6" value="38"/>
         <spinner attributeName="7" value="36"/>
         <spinner attributeName="8" value="58"/>
         <spinner attributeName="9" value="56"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="rootnote4" x="574" y="294">
      <params/>
      <attribs>
         <spinner attributeName="1" value="42"/>
         <spinner attributeName="2" value="64"/>
         <spinner attributeName="3" value="62"/>
         <spinner attributeName="4" value="54"/>
         <spinner attributeName="5" value="52"/>
         <spinner attributeName="6" value="44"/>
         <spinner attributeName="7" value="42"/>
         <spinner attributeName="8" value="64"/>
         <spinner attributeName="9" value="62"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="868" y="294" text="polyphonic note input"/>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="rootnote5" x="644" y="308">
      <params/>
      <attribs>
         <spinner attributeName="1" value="66"/>
         <spinner attributeName="2" value="88"/>
         <spinner attributeName="3" value="86"/>
         <spinner attributeName="4" value="78"/>
         <spinner attributeName="5" value="76"/>
         <spinner attributeName="6" value="68"/>
         <spinner attributeName="7" value="66"/>
         <spinner attributeName="8" value="88"/>
         <spinner attributeName="9" value="86"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="854" y="308" text="and LED feedback handler"/>
   <comment type="patch/comment" x="0" y="322" text="ClrScr is sort of &quot;clear screen&quot;."/>
   <patchobj type="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4" name="rootnote6" x="714" y="322">
      <params/>
      <attribs>
         <spinner attributeName="1" value="72"/>
         <spinner attributeName="2" value="-1"/>
         <spinner attributeName="3" value="-1"/>
         <spinner attributeName="4" value="84"/>
         <spinner attributeName="5" value="82"/>
         <spinner attributeName="6" value="74"/>
         <spinner attributeName="7" value="72"/>
         <spinner attributeName="8" value="-1"/>
         <spinner attributeName="9" value="-1"/>
      </attribs>
      <object id="patch/object" uuid="f011d8fe-3801-425c-a203-347a8fe12fc4">
         <sDescription>8 positive integer controls fed into a muxer. Use input to select which one of the 8 integer values to output. Nr output shows which integer value is currently selected.</sDescription>
         <author>Jaffasplaffa / modified by chaocrator</author>
         <license>BSD</license>
         <inlets>
            <int32 name="counter"/>
         </inlets>
         <outlets>
            <int32 name="value"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="1" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="2" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="3" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="4" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="5" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="6" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="7" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="8" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
            <spinner name="9" MinValue="-1" MaxValue="127" DefaultValue="-1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[switch(inlet_counter>0?inlet_counter-1:0){
      case 0: outlet_value= attr_1;break;
      case 1: outlet_value= attr_2;break;
      case 2: outlet_value= attr_3;break;
      case 3: outlet_value= attr_4;break;
      case 4: outlet_value= attr_5;break;
      case 5: outlet_value= attr_6;break;
      case 6: outlet_value= attr_7;break;
      case 7: outlet_value= attr_8;break;
      case 8: outlet_value= attr_9;break;
      default: outlet_value= attr_5;break;
}
// not needed
//outlet_counter= inlet_counter;]]></code.krate>
      </object>
   </patchobj>
   <patcher type="patch/patcher" uuid="4b228e98-d78e-4a97-88d1-8411153310ac" name="poly_input" x="854" y="322">
      <params/>
      <attribs>
         <combo attributeName="poly" selection="12"/>
         <combo attributeName="midichannel" selection="inherit"/>
         <combo attributeName="mididevice" selection="usb host"/>
         <combo attributeName="midiport" selection="omni"/>
      </attribs>
      <subpatch appVersion="1.0.12">
         <obj type="patch/inlet i" uuid="f11927f00c59219df0c50f73056aa19f125540b7" name="transpose" x="0" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet i" uuid="f11927f00c59219df0c50f73056aa19f125540b7" name="rootnote1" x="70" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet i" uuid="f11927f00c59219df0c50f73056aa19f125540b7" name="rootnote2" x="140" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet i" uuid="f11927f00c59219df0c50f73056aa19f125540b7" name="rootnote3" x="70" y="42">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet i" uuid="f11927f00c59219df0c50f73056aa19f125540b7" name="rootnote4" x="140" y="42">
            <params/>
            <attribs/>
         </obj>
         <comment type="patch/comment" x="266" y="56" text="custom layouts can be created here."/>
         <comment type="patch/comment" x="266" y="70" text="output note is entered for each pad"/>
         <obj type="patch/inlet i" uuid="f11927f00c59219df0c50f73056aa19f125540b7" name="rootnote5" x="70" y="84">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet i" uuid="f11927f00c59219df0c50f73056aa19f125540b7" name="rootnote6" x="140" y="84">
            <params/>
            <attribs/>
         </obj>
         <comment type="patch/comment" x="266" y="84" text="in 0-127 format."/>
         <comment type="patch/comment" x="490" y="84" text="mapped note external output"/>
         <patchobj type="patch/object" uuid="94278fcc-2728-47d1-ad1b-5681a8dc454d" name="note_input_handler" x="266" y="98">
            <params/>
            <attribs>
               <spinner attributeName="pad11" value="49"/>
               <spinner attributeName="pad12" value="44"/>
               <spinner attributeName="pad13" value="51"/>
               <spinner attributeName="pad14" value="46"/>
               <spinner attributeName="pad15" value="53"/>
               <spinner attributeName="pad16" value="48"/>
               <spinner attributeName="pad17" value="55"/>
               <spinner attributeName="pad18" value="50"/>
               <spinner attributeName="pad21" value="53"/>
               <spinner attributeName="pad22" value="48"/>
               <spinner attributeName="pad23" value="55"/>
               <spinner attributeName="pad24" value="50"/>
               <spinner attributeName="pad25" value="57"/>
               <spinner attributeName="pad26" value="52"/>
               <spinner attributeName="pad27" value="59"/>
               <spinner attributeName="pad28" value="54"/>
               <spinner attributeName="pad31" value="57"/>
               <spinner attributeName="pad32" value="52"/>
               <spinner attributeName="pad33" value="59"/>
               <spinner attributeName="pad34" value="54"/>
               <spinner attributeName="pad35" value="61"/>
               <spinner attributeName="pad36" value="56"/>
               <spinner attributeName="pad37" value="63"/>
               <spinner attributeName="pad38" value="58"/>
               <spinner attributeName="pad41" value="61"/>
               <spinner attributeName="pad42" value="56"/>
               <spinner attributeName="pad43" value="63"/>
               <spinner attributeName="pad44" value="58"/>
               <spinner attributeName="pad45" value="65"/>
               <spinner attributeName="pad46" value="60"/>
               <spinner attributeName="pad47" value="67"/>
               <spinner attributeName="pad48" value="62"/>
               <spinner attributeName="pad51" value="65"/>
               <spinner attributeName="pad52" value="60"/>
               <spinner attributeName="pad53" value="67"/>
               <spinner attributeName="pad54" value="62"/>
               <spinner attributeName="pad55" value="69"/>
               <spinner attributeName="pad56" value="64"/>
               <spinner attributeName="pad57" value="71"/>
               <spinner attributeName="pad58" value="66"/>
               <spinner attributeName="pad61" value="69"/>
               <spinner attributeName="pad62" value="64"/>
               <spinner attributeName="pad63" value="71"/>
               <spinner attributeName="pad64" value="66"/>
               <spinner attributeName="pad65" value="73"/>
               <spinner attributeName="pad66" value="68"/>
               <spinner attributeName="pad67" value="75"/>
               <spinner attributeName="pad68" value="70"/>
               <spinner attributeName="pad71" value="73"/>
               <spinner attributeName="pad72" value="68"/>
               <spinner attributeName="pad73" value="75"/>
               <spinner attributeName="pad74" value="70"/>
               <spinner attributeName="pad75" value="77"/>
               <spinner attributeName="pad76" value="72"/>
               <spinner attributeName="pad77" value="79"/>
               <spinner attributeName="pad78" value="74"/>
               <spinner attributeName="pad81" value="77"/>
               <spinner attributeName="pad82" value="72"/>
               <spinner attributeName="pad83" value="79"/>
               <spinner attributeName="pad84" value="74"/>
               <spinner attributeName="pad85" value="81"/>
               <spinner attributeName="pad86" value="76"/>
               <spinner attributeName="pad87" value="83"/>
               <spinner attributeName="pad88" value="78"/>
            </attribs>
            <object id="patch/object" uuid="94278fcc-2728-47d1-ad1b-5681a8dc454d">
               <sDescription>Quick, dirty &amp; simple Launchpad Pro note input handler. 
Allows to assign output note for each pad manually. When a pad pressed, outputs either user mapped MIDI note (___outlet) and original MIDI note number generated by LP Pro (___ outlet, useful for LED visual feedback). Mapped notes can be transposed by a number of semitones provided via **shift** inlet. 
If polyphony is desired, it should be used in a regular polyphonic subpatch. 
This object is mainly based on Johannes Taelman&apos;s monophonic MIDI keyboard code and David Bax&apos;s **remap16** object, and uses fragments of code from some other objects available in 1.0.12, too many to remember.</sDescription>
               <author>chaocrator a.k.a. Vimanastaffel</author>
               <license>BSD</license>
               <helpPatch>midi_in.axh</helpPatch>
               <inlets>
                  <int32.bipolar name="transpose" description="(from parent patch:) absolute transpose value (vertical &amp; horizontal shifts sum)"/>
                  <int32 name="rootnote1" description="(from parent patch:) current root note 1"/>
                  <int32 name="rootnote2" description="(from parent patch:) current root note 2"/>
                  <int32 name="rootnote3" description="(from parent patch:) current root note 3"/>
                  <int32 name="rootnote4" description="(from parent patch:) current root note 4"/>
                  <int32 name="rootnote5" description="(from parent patch:) current root note 5"/>
                  <int32 name="rootnote6" description="(from parent patch:) current root note 6"/>
               </inlets>
               <outlets>
                  <int32 name="mappedNote"/>
                  <int32.positive name="velocity"/>
                  <bool32 name="gate" description="key pressed"/>
                  <int32 name="padLED"/>
                  <int32 name="pad2LED"/>
                  <bool32 name="gate2" description="highlight another pad with this note in MTN layout"/>
                  <bool32 name="rootgate1" description="(to parent patch:) current root note 1 active?"/>
                  <bool32 name="rootgate2" description="(to parent patch:) current root note 2 active?"/>
                  <bool32 name="rootgate3" description="(to parent patch:) current root note 3 active?"/>
                  <bool32 name="rootgate4" description="(to parent patch:) current root note 4 active?"/>
                  <bool32 name="rootgate5" description="(to parent patch:) current root note 5 active?"/>
                  <bool32 name="rootgate6" description="(to parent patch:) current root note 6 active?"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="pad11" MinValue="0" MaxValue="127" DefaultValue="49"/>
                  <spinner name="pad12" MinValue="0" MaxValue="127" DefaultValue="44"/>
                  <spinner name="pad13" MinValue="0" MaxValue="127" DefaultValue="51"/>
                  <spinner name="pad14" MinValue="0" MaxValue="127" DefaultValue="46"/>
                  <spinner name="pad15" MinValue="0" MaxValue="127" DefaultValue="53"/>
                  <spinner name="pad16" MinValue="0" MaxValue="127" DefaultValue="48"/>
                  <spinner name="pad17" MinValue="0" MaxValue="127" DefaultValue="55"/>
                  <spinner name="pad18" MinValue="0" MaxValue="127" DefaultValue="50"/>
                  <spinner name="pad21" MinValue="0" MaxValue="127" DefaultValue="53"/>
                  <spinner name="pad22" MinValue="0" MaxValue="127" DefaultValue="48"/>
                  <spinner name="pad23" MinValue="0" MaxValue="127" DefaultValue="55"/>
                  <spinner name="pad24" MinValue="0" MaxValue="127" DefaultValue="50"/>
                  <spinner name="pad25" MinValue="0" MaxValue="127" DefaultValue="57"/>
                  <spinner name="pad26" MinValue="0" MaxValue="127" DefaultValue="52"/>
                  <spinner name="pad27" MinValue="0" MaxValue="127" DefaultValue="59"/>
                  <spinner name="pad28" MinValue="0" MaxValue="127" DefaultValue="54"/>
                  <spinner name="pad31" MinValue="0" MaxValue="127" DefaultValue="57"/>
                  <spinner name="pad32" MinValue="0" MaxValue="127" DefaultValue="52"/>
                  <spinner name="pad33" MinValue="0" MaxValue="127" DefaultValue="59"/>
                  <spinner name="pad34" MinValue="0" MaxValue="127" DefaultValue="54"/>
                  <spinner name="pad35" MinValue="0" MaxValue="127" DefaultValue="61"/>
                  <spinner name="pad36" MinValue="0" MaxValue="127" DefaultValue="56"/>
                  <spinner name="pad37" MinValue="0" MaxValue="127" DefaultValue="63"/>
                  <spinner name="pad38" MinValue="0" MaxValue="127" DefaultValue="58"/>
                  <spinner name="pad41" MinValue="0" MaxValue="127" DefaultValue="61"/>
                  <spinner name="pad42" MinValue="0" MaxValue="127" DefaultValue="56"/>
                  <spinner name="pad43" MinValue="0" MaxValue="127" DefaultValue="63"/>
                  <spinner name="pad44" MinValue="0" MaxValue="127" DefaultValue="58"/>
                  <spinner name="pad45" MinValue="0" MaxValue="127" DefaultValue="65"/>
                  <spinner name="pad46" MinValue="0" MaxValue="127" DefaultValue="60"/>
                  <spinner name="pad47" MinValue="0" MaxValue="127" DefaultValue="67"/>
                  <spinner name="pad48" MinValue="0" MaxValue="127" DefaultValue="62"/>
                  <spinner name="pad51" MinValue="0" MaxValue="127" DefaultValue="65"/>
                  <spinner name="pad52" MinValue="0" MaxValue="127" DefaultValue="60"/>
                  <spinner name="pad53" MinValue="0" MaxValue="127" DefaultValue="67"/>
                  <spinner name="pad54" MinValue="0" MaxValue="127" DefaultValue="62"/>
                  <spinner name="pad55" MinValue="0" MaxValue="127" DefaultValue="69"/>
                  <spinner name="pad56" MinValue="0" MaxValue="127" DefaultValue="64"/>
                  <spinner name="pad57" MinValue="0" MaxValue="127" DefaultValue="71"/>
                  <spinner name="pad58" MinValue="0" MaxValue="127" DefaultValue="66"/>
                  <spinner name="pad61" MinValue="0" MaxValue="127" DefaultValue="69"/>
                  <spinner name="pad62" MinValue="0" MaxValue="127" DefaultValue="64"/>
                  <spinner name="pad63" MinValue="0" MaxValue="127" DefaultValue="71"/>
                  <spinner name="pad64" MinValue="0" MaxValue="127" DefaultValue="66"/>
                  <spinner name="pad65" MinValue="0" MaxValue="127" DefaultValue="73"/>
                  <spinner name="pad66" MinValue="0" MaxValue="127" DefaultValue="68"/>
                  <spinner name="pad67" MinValue="0" MaxValue="127" DefaultValue="75"/>
                  <spinner name="pad68" MinValue="0" MaxValue="127" DefaultValue="70"/>
                  <spinner name="pad71" MinValue="0" MaxValue="127" DefaultValue="73"/>
                  <spinner name="pad72" MinValue="0" MaxValue="127" DefaultValue="68"/>
                  <spinner name="pad73" MinValue="0" MaxValue="127" DefaultValue="75"/>
                  <spinner name="pad74" MinValue="0" MaxValue="127" DefaultValue="70"/>
                  <spinner name="pad75" MinValue="0" MaxValue="127" DefaultValue="77"/>
                  <spinner name="pad76" MinValue="0" MaxValue="127" DefaultValue="72"/>
                  <spinner name="pad77" MinValue="0" MaxValue="127" DefaultValue="79"/>
                  <spinner name="pad78" MinValue="0" MaxValue="127" DefaultValue="74"/>
                  <spinner name="pad81" MinValue="0" MaxValue="127" DefaultValue="77"/>
                  <spinner name="pad82" MinValue="0" MaxValue="127" DefaultValue="72"/>
                  <spinner name="pad83" MinValue="0" MaxValue="127" DefaultValue="79"/>
                  <spinner name="pad84" MinValue="0" MaxValue="127" DefaultValue="74"/>
                  <spinner name="pad85" MinValue="0" MaxValue="127" DefaultValue="81"/>
                  <spinner name="pad86" MinValue="0" MaxValue="127" DefaultValue="76"/>
                  <spinner name="pad87" MinValue="0" MaxValue="127" DefaultValue="83"/>
                  <spinner name="pad88" MinValue="0" MaxValue="127" DefaultValue="78"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[int8_t _mappedNote;
int8_t _padLED;
int8_t _pad2LED;
uint8_t _gate;
uint8_t _gate2;
uint8_t _velo;
int8_t transpose;
uint8_t _rootgate1;
uint8_t _rootgate2;
uint8_t _rootgate3;
uint8_t _rootgate4;
uint8_t _rootgate5;
uint8_t _rootgate6;
int8_t rootnote1;
int8_t rootnote2;
int8_t rootnote3;
int8_t rootnote4;
int8_t rootnote5;
int8_t rootnote6;]]></code.declaration>
               <code.init><![CDATA[// the order corresponds to the order of outlets
_mappedNote = -1; 	// because note 0 is in MIDI 0-127 range
_padLED = -1; 	// pad pressed
_pad2LED = -1;
_gate = 0;
_gate2 = 0;
_rootgate1 = 0;
_rootgate2 = 0;
_rootgate3 = 0;
_rootgate4 = 0;
_rootgate5 = 0;
_rootgate6 = 0;]]></code.init>
               <code.krate><![CDATA[// the order corresponds to the order of outlets
// output
//outlet_mappedNote = _mappedNote<<21;
outlet_mappedNote = _mappedNote;
outlet_padLED = _padLED;
outlet_pad2LED = _pad2LED;
outlet_gate = _gate<<27;
outlet_gate2 = _gate2<<27;
outlet_rootgate1 = _rootgate1<<27;
outlet_rootgate2 = _rootgate2<<27;
outlet_rootgate3 = _rootgate3<<27;
outlet_rootgate4 = _rootgate4<<27;
outlet_rootgate5 = _rootgate5<<27;
outlet_rootgate6 = _rootgate6<<27;
outlet_velocity = _velo;
// input
transpose = inlet_transpose;
rootnote1 = inlet_rootnote1;
rootnote2 = inlet_rootnote2;
rootnote3 = inlet_rootnote3;
rootnote4 = inlet_rootnote4;
rootnote5 = inlet_rootnote5;
rootnote6 = inlet_rootnote6;]]></code.krate>
               <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
if(data1 == 11) _mappedNote = attr_pad11 + transpose;
if(data1 == 12) _mappedNote = attr_pad12 + transpose;
if(data1 == 13) _mappedNote = attr_pad13 + transpose;
if(data1 == 14) _mappedNote = attr_pad14 + transpose;
if(data1 == 15) { _mappedNote = attr_pad15 + transpose; _pad2LED = data1 + 6; }
if(data1 == 16) { _mappedNote = attr_pad16 + transpose; _pad2LED = data1 + 6; } 
if(data1 == 17) { _mappedNote = attr_pad17 + transpose; _pad2LED = data1 + 6; }
if(data1 == 18) { _mappedNote = attr_pad18 + transpose; _pad2LED = data1 + 6; }
if(data1 == 21) { _mappedNote = attr_pad21 + transpose; _pad2LED = data1 - 6; }
if(data1 == 22) { _mappedNote = attr_pad22 + transpose; _pad2LED = data1 - 6; }
if(data1 == 23) { _mappedNote = attr_pad23 + transpose; _pad2LED = data1 - 6; }
if(data1 == 24) { _mappedNote = attr_pad24 + transpose; _pad2LED = data1 - 6; }
if(data1 == 25) { _mappedNote = attr_pad25 + transpose; _pad2LED = data1 + 6; }
if(data1 == 26) { _mappedNote = attr_pad26 + transpose; _pad2LED = data1 + 6; }
if(data1 == 27) { _mappedNote = attr_pad27 + transpose; _pad2LED = data1 + 6; }
if(data1 == 28) { _mappedNote = attr_pad28 + transpose; _pad2LED = data1 + 6; }
if(data1 == 31) { _mappedNote = attr_pad31 + transpose; _pad2LED = data1 - 6; }
if(data1 == 32) { _mappedNote = attr_pad32 + transpose; _pad2LED = data1 - 6; }
if(data1 == 33) { _mappedNote = attr_pad33 + transpose; _pad2LED = data1 - 6; }
if(data1 == 34) { _mappedNote = attr_pad34 + transpose; _pad2LED = data1 - 6; }
if(data1 == 35) { _mappedNote = attr_pad35 + transpose; _pad2LED = data1 + 6; }
if(data1 == 36) { _mappedNote = attr_pad36 + transpose; _pad2LED = data1 + 6; }
if(data1 == 37) { _mappedNote = attr_pad37 + transpose; _pad2LED = data1 + 6; }
if(data1 == 38) { _mappedNote = attr_pad38 + transpose; _pad2LED = data1 + 6; }
if(data1 == 41) { _mappedNote = attr_pad41 + transpose; _pad2LED = data1 - 6; }
if(data1 == 42) { _mappedNote = attr_pad42 + transpose; _pad2LED = data1 - 6; }
if(data1 == 43) { _mappedNote = attr_pad43 + transpose; _pad2LED = data1 - 6; }
if(data1 == 44) { _mappedNote = attr_pad44 + transpose; _pad2LED = data1 - 6; }
if(data1 == 45) { _mappedNote = attr_pad45 + transpose; _pad2LED = data1 + 6; }
if(data1 == 46) { _mappedNote = attr_pad46 + transpose; _pad2LED = data1 + 6; }
if(data1 == 47) { _mappedNote = attr_pad47 + transpose; _pad2LED = data1 + 6; }
if(data1 == 48) { _mappedNote = attr_pad48 + transpose; _pad2LED = data1 + 6; }
if(data1 == 51) { _mappedNote = attr_pad51 + transpose; _pad2LED = data1 - 6; }
if(data1 == 52) { _mappedNote = attr_pad52 + transpose; _pad2LED = data1 - 6; }
if(data1 == 53) { _mappedNote = attr_pad53 + transpose; _pad2LED = data1 - 6; }
if(data1 == 54) { _mappedNote = attr_pad54 + transpose; _pad2LED = data1 - 6; }
if(data1 == 55) { _mappedNote = attr_pad55 + transpose; _pad2LED = data1 + 6; }
if(data1 == 56) { _mappedNote = attr_pad56 + transpose; _pad2LED = data1 + 6; }
if(data1 == 57) { _mappedNote = attr_pad57 + transpose; _pad2LED = data1 + 6; }
if(data1 == 58) { _mappedNote = attr_pad58 + transpose; _pad2LED = data1 + 6; }
if(data1 == 61) { _mappedNote = attr_pad61 + transpose; _pad2LED = data1 - 6; }
if(data1 == 62) { _mappedNote = attr_pad62 + transpose; _pad2LED = data1 - 6; }
if(data1 == 63) { _mappedNote = attr_pad63 + transpose; _pad2LED = data1 - 6; }
if(data1 == 64) { _mappedNote = attr_pad64 + transpose; _pad2LED = data1 - 6; }
if(data1 == 65) { _mappedNote = attr_pad65 + transpose; _pad2LED = data1 + 6; }
if(data1 == 66) { _mappedNote = attr_pad66 + transpose; _pad2LED = data1 + 6; }
if(data1 == 67) { _mappedNote = attr_pad67 + transpose; _pad2LED = data1 + 6; }
if(data1 == 68) { _mappedNote = attr_pad68 + transpose; _pad2LED = data1 + 6; }
if(data1 == 71) { _mappedNote = attr_pad71 + transpose; _pad2LED = data1 - 6; }
if(data1 == 72) { _mappedNote = attr_pad72 + transpose; _pad2LED = data1 - 6; }
if(data1 == 73) { _mappedNote = attr_pad73 + transpose; _pad2LED = data1 - 6; }
if(data1 == 74) { _mappedNote = attr_pad74 + transpose; _pad2LED = data1 - 6; }
if(data1 == 75) { _mappedNote = attr_pad75 + transpose; _pad2LED = data1 + 6; }
if(data1 == 76) { _mappedNote = attr_pad76 + transpose; _pad2LED = data1 + 6; }
if(data1 == 77) { _mappedNote = attr_pad77 + transpose; _pad2LED = data1 + 6; }
if(data1 == 78) { _mappedNote = attr_pad78 + transpose; _pad2LED = data1 + 6; }
if(data1 == 81) { _mappedNote = attr_pad81 + transpose; _pad2LED = data1 - 6; }
if(data1 == 82) { _mappedNote = attr_pad82 + transpose; _pad2LED = data1 - 6; }
if(data1 == 83) { _mappedNote = attr_pad83 + transpose; _pad2LED = data1 - 6; }
if(data1 == 84) { _mappedNote = attr_pad84 + transpose; _pad2LED = data1 - 6; }
if(data1 == 85) _mappedNote = attr_pad85 + transpose;
if(data1 == 86) _mappedNote = attr_pad86 + transpose;
if(data1 == 87) _mappedNote = attr_pad87 + transpose;
if(data1 == 88) _mappedNote = attr_pad88 + transpose;
if(data1 == rootnote1) { _rootgate1 = 1; }
else if(data1 == rootnote2) { _rootgate2 = 1; }
else if(data1 == rootnote3) { _rootgate3 = 1; }
else if(data1 == rootnote4) { _rootgate4 = 1; }
else if(data1 == rootnote5) { _rootgate5 = 1; }
else if(data1 == rootnote6) { _rootgate6 = 1; }
else { _gate2 = 1; }
     _gate = 1;
     _velo = data2;
    _padLED = data1;
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_padLED == data1) {
    _gate = 0;
    _gate2 = 0;
    _rootgate1 = 0;
    _rootgate2 = 0;
    _rootgate3 = 0;
    _rootgate4 = 0;
    _rootgate5 = 0;
    _rootgate6 = 0;
    _pad2LED = -1;
  }
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate = 0;
    _gate2 = 0;
    _rootgate1 = 0;
    _rootgate2 = 0;
    _rootgate3 = 0;
    _rootgate4 = 0;
    _rootgate5 = 0;
    _rootgate6 = 0;
    _pad2LED = -1;
}]]></code.midihandler>
            </object>
         </patchobj>
         <comment type="patch/comment" x="490" y="98" text="(or it can be connected to"/>
         <comment type="patch/comment" x="490" y="112" text="sound generation objects instead)"/>
         <patchobj type="patch/object" uuid="585785d9-b1ec-4fc2-a3bb-f7d9e845e4a9" name="mapped_note_output" x="490" y="126">
            <params/>
            <attribs>
               <spinner attributeName="chnl" value="1"/>
               <combo attributeName="dev" selection="din"/>
            </attribs>
            <object id="patch/object" uuid="585785d9-b1ec-4fc2-a3bb-f7d9e845e4a9">
               <sDescription>MIDI note output.
integer version by chaocrator</sDescription>
               <author>Johannes Taelman / chaocrator</author>
               <license>BSD</license>
               <helpPatch>midi_out.axh</helpPatch>
               <inlets>
                  <int32 name="note"/>
                  <int32.positive name="velo"/>
                  <bool32.rising name="trig" description="trigger"/>
               </inlets>
               <outlets/>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="chnl" MinValue="1" MaxValue="16" DefaultValue="1"/>
                  <combo name="dev">
                     <MenuEntries>
                        <string>din</string>
                        <string>usb host port 1</string>
                        <string>usb host port 2</string>
                        <string>usb host port 3</string>
                        <string>usb host port 4</string>
                        <string>internal port 1</string>
                        <string>internal port 2</string>
                        <string>usb device port 1</string>
                     </MenuEntries>
                     <CEntries>
                        <string>MIDI_DEVICE_DIN, 1</string>
                        <string>MIDI_DEVICE_USB_HOST, 1</string>
                        <string>MIDI_DEVICE_USB_HOST, 2</string>
                        <string>MIDI_DEVICE_USB_HOST, 3</string>
                        <string>MIDI_DEVICE_USB_HOST, 4</string>
                        <string>MIDI_DEVICE_INTERNAL, 1</string>
                        <string>MIDI_DEVICE_INTERNAL, 2</string>
                        <string>MIDI_DEVICE_USB_DEVICE, 1</string>
                     </CEntries>
                  </combo>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[int ntrig;
int lastnote;]]></code.declaration>
               <code.init><![CDATA[ntrig=0;]]></code.init>
               <code.krate><![CDATA[{
if ((inlet_trig>0) && !ntrig) {
lastnote = inlet_note&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_chnl-1),lastnote,inlet_velo);  ntrig=1;
}
if (!(inlet_trig>0) && ntrig) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_chnl-1),lastnote,__USAT(inlet_velo,7)); ntrig=0;}
}]]></code.krate>
            </object>
         </patchobj>
         <comment type="patch/comment" x="616" y="182" text="LED feedback"/>
         <patchobj type="patch/object" uuid="b0361cfa-830e-40f4-b006-598bfcb55607" name="note_LED_feedback" x="616" y="196">
            <params>
               <int32 name="ch1" value="1"/>
               <int32 name="ch2" value="1"/>
            </params>
            <attribs>
               <spinner attributeName="velo1" value="60"/>
               <spinner attributeName="velo2" value="16"/>
               <combo attributeName="d" selection="usb host port 1"/>
            </attribs>
            <object id="patch/object" uuid="b0361cfa-830e-40f4-b006-598bfcb55607">
               <sDescription>MIDI note output x2
integer version with fixed velocity by chaocrator</sDescription>
               <author>Johannes Taelman / jaffasplaffa / chaocrator</author>
               <license>BSD</license>
               <helpPatch>midi_out.axh</helpPatch>
               <inlets>
                  <int32 name="note1"/>
                  <bool32.rising name="trig1" description="trigger"/>
                  <int32 name="note2"/>
                  <bool32.rising name="trig2" description="trigger"/>
               </inlets>
               <outlets/>
               <displays/>
               <params>
                  <int32 name="ch1">
                     <MinValue i="1"/>
                     <MaxValue i="16"/>
                  </int32>
                  <int32 name="ch2">
                     <MinValue i="1"/>
                     <MaxValue i="16"/>
                  </int32>
               </params>
               <attribs>
                  <spinner name="velo1" MinValue="0" MaxValue="127" DefaultValue="0"/>
                  <spinner name="velo2" MinValue="0" MaxValue="127" DefaultValue="0"/>
                  <combo name="d">
                     <MenuEntries>
                        <string>din</string>
                        <string>usb host port 1</string>
                        <string>usb host port 2</string>
                        <string>usb host port 3</string>
                        <string>usb host port 4</string>
                        <string>internal port 1</string>
                        <string>internal port 2</string>
                        <string>usb device port 1</string>
                     </MenuEntries>
                     <CEntries>
                        <string>MIDI_DEVICE_DIN, 1</string>
                        <string>MIDI_DEVICE_USB_HOST, 1</string>
                        <string>MIDI_DEVICE_USB_HOST, 2</string>
                        <string>MIDI_DEVICE_USB_HOST, 3</string>
                        <string>MIDI_DEVICE_USB_HOST, 4</string>
                        <string>MIDI_DEVICE_INTERNAL, 1</string>
                        <string>MIDI_DEVICE_INTERNAL, 2</string>
                        <string>MIDI_DEVICE_USB_DEVICE, 1</string>
                     </CEntries>
                  </combo>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[int ntrig1;
int lastnote1;

int ntrig2;
int lastnote2;]]></code.declaration>
               <code.init><![CDATA[ntrig1=0;

ntrig2=0;]]></code.init>
               <code.krate><![CDATA[// Ch1 //
{
if ((inlet_trig1>0) && !ntrig1) {
lastnote1 = inlet_note1&0x7F;
MidiSend3((midi_device_t) attr_d, MIDI_NOTE_ON + (param_ch1-1),lastnote1,attr_velo1);  ntrig1=1;
}
if (!(inlet_trig1>0) && ntrig1) {MidiSend3((midi_device_t) attr_d, MIDI_NOTE_OFF + (param_ch1-1),lastnote1,__USAT(attr_velo1,7)); ntrig1=0;}
}



// Ch2 //
{
if ((inlet_trig2>0) && !ntrig2) {
lastnote2 = inlet_note2&0x7F;
MidiSend3((midi_device_t) attr_d, MIDI_NOTE_ON + (param_ch2-1),lastnote2,attr_velo2);  ntrig2=1;
}
if (!(inlet_trig2>0) && ntrig2) {MidiSend3((midi_device_t) attr_d, MIDI_NOTE_OFF + (param_ch2-1),lastnote2,__USAT(attr_velo2,7)); ntrig2=0;}
}]]></code.krate>
            </object>
         </patchobj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="rootgate1" x="518" y="252">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="rootgate2" x="518" y="294">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="rootgate3" x="518" y="336">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="rootgate4" x="518" y="378">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="rootgate5" x="518" y="420">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="rootgate6" x="518" y="462">
            <params/>
            <attribs/>
         </obj>
         <nets>
            <net>
               <source obj="note_input_handler" outlet="gate"/>
               <dest obj="note_LED_feedback" inlet="trig1"/>
               <dest obj="mapped_note_output" inlet="trig"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="padLED"/>
               <dest obj="note_LED_feedback" inlet="note1"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="pad2LED"/>
               <dest obj="note_LED_feedback" inlet="note2"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="gate2"/>
               <dest obj="note_LED_feedback" inlet="trig2"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="rootgate1"/>
               <dest obj="rootgate1" inlet="outlet"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="rootgate2"/>
               <dest obj="rootgate2" inlet="outlet"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="rootgate3"/>
               <dest obj="rootgate3" inlet="outlet"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="rootgate4"/>
               <dest obj="rootgate4" inlet="outlet"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="rootgate5"/>
               <dest obj="rootgate5" inlet="outlet"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="rootgate6"/>
               <dest obj="rootgate6" inlet="outlet"/>
            </net>
            <net>
               <source obj="transpose" outlet="inlet"/>
               <dest obj="note_input_handler" inlet="transpose"/>
            </net>
            <net>
               <source obj="rootnote1" outlet="inlet"/>
               <dest obj="note_input_handler" inlet="rootnote1"/>
            </net>
            <net>
               <source obj="rootnote2" outlet="inlet"/>
               <dest obj="note_input_handler" inlet="rootnote2"/>
            </net>
            <net>
               <source obj="rootnote3" outlet="inlet"/>
               <dest obj="note_input_handler" inlet="rootnote3"/>
            </net>
            <net>
               <source obj="rootnote4" outlet="inlet"/>
               <dest obj="note_input_handler" inlet="rootnote4"/>
            </net>
            <net>
               <source obj="rootnote5" outlet="inlet"/>
               <dest obj="note_input_handler" inlet="rootnote5"/>
            </net>
            <net>
               <source obj="rootnote6" outlet="inlet"/>
               <dest obj="note_input_handler" inlet="rootnote6"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="mappedNote"/>
               <dest obj="mapped_note_output" inlet="note"/>
            </net>
            <net>
               <source obj="note_input_handler" outlet="velocity"/>
               <dest obj="mapped_note_output" inlet="velo"/>
            </net>
         </nets>
         <settings>
            <subpatchmode>polyphonic</subpatchmode>
            <MidiChannel>1</MidiChannel>
            <HasMidiChannelSelector>true</HasMidiChannelSelector>
            <NPresets>8</NPresets>
            <NPresetEntries>32</NPresetEntries>
            <NModulationSources>8</NModulationSources>
            <NModulationTargetsPerSource>8</NModulationTargetsPerSource>
            <License> </License>
         </settings>
         <notes><![CDATA[]]></notes>
         <windowPos>
            <x>0</x>
            <y>301</y>
            <width>780</width>
            <height>541</height>
         </windowPos>
      </subpatch>
   </patcher>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="rootnotes12" x="1050" y="322">
      <params/>
      <attribs/>
   </obj>
   <obj type="mux/mux 2" uuid="16f90f81694766b0bc8187bfcba5a021e5701d81" name="mux_2" x="1148" y="322">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/change" uuid="96e39ae624c3f3c952cec4a95e1986ee0104f718" name="change_1" x="1218" y="322">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="0" y="336" text="pressing switches off all active LEDs."/>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="note12_retrig" x="1414" y="336">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high,puts out a fixed value of 0 ,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / modded by chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <bool32 name="in"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <bool32 name="out"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = 0;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="0" y="350" text="(without resetting the counters)"/>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="velo12_retrig" x="1344" y="350">
      <params/>
      <attribs>
         <spinner attributeName="o" value="0"/>
      </attribs>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high, outputs &quot;o&quot; attribute value,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <int32 name="in" description="input"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <int32 name="out" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="o" MinValue="-2147483648" MaxValue="2147483647" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = attr_o;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="0" y="364" text="QUIRK: if uncheck &quot;Live&quot; when pressed, "/>
   <comment type="patch/comment" x="196" y="364" text="Vshift &amp; Hshift are for future use."/>
   <patchobj type="patch/object" uuid="c850b64d-1743-4950-9bc1-03f72e155a1a" name="rootnotes_LED" x="1512" y="364">
      <params/>
      <attribs>
         <spinner attributeName="ch1" value="1"/>
         <spinner attributeName="ch2" value="1"/>
         <spinner attributeName="ch3" value="1"/>
         <spinner attributeName="ch4" value="1"/>
         <spinner attributeName="ch5" value="1"/>
         <spinner attributeName="ch6" value="1"/>
         <combo attributeName="dev" selection="usb host port 1"/>
      </attribs>
      <object id="patch/object" uuid="c850b64d-1743-4950-9bc1-03f72e155a1a">
         <sDescription>MIDI note output x6. 
integer version by chaocrator. 
note MIDI channels are attributes instead of parameters.</sDescription>
         <author>Johannes Taelman / jaffasplaffa / chaocrator</author>
         <license>BSD</license>
         <helpPatch>midi_out.axh</helpPatch>
         <inlets>
            <int32 name="note1"/>
            <int32.positive name="velo1"/>
            <bool32.rising name="trig1" description="trigger"/>
            <int32 name="note2"/>
            <int32.positive name="velo2"/>
            <bool32.rising name="trig2" description="trigger"/>
            <int32 name="note3"/>
            <int32.positive name="velo3"/>
            <bool32 name="trig3"/>
            <int32 name="note4"/>
            <int32.positive name="velo4"/>
            <bool32 name="trig4"/>
            <int32 name="note5"/>
            <int32.positive name="velo5"/>
            <bool32 name="trig5"/>
            <int32 name="note6"/>
            <int32.positive name="velo6"/>
            <bool32 name="trig6"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <spinner name="ch1" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="ch2" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="ch3" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="ch4" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="ch5" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <spinner name="ch6" MinValue="1" MaxValue="16" DefaultValue="1"/>
            <combo name="dev">
               <MenuEntries>
                  <string>din</string>
                  <string>usb host port 1</string>
                  <string>usb host port 2</string>
                  <string>usb host port 3</string>
                  <string>usb host port 4</string>
                  <string>internal port 1</string>
                  <string>internal port 2</string>
                  <string>usb device port 1</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_DIN, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 2</string>
                  <string>MIDI_DEVICE_USB_HOST, 3</string>
                  <string>MIDI_DEVICE_USB_HOST, 4</string>
                  <string>MIDI_DEVICE_INTERNAL, 1</string>
                  <string>MIDI_DEVICE_INTERNAL, 2</string>
                  <string>MIDI_DEVICE_USB_DEVICE, 1</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig1;
int lastnote1;

int ntrig2;
int lastnote2;

int ntrig3;
int lastnote3;

int ntrig4;
int lastnote4;

int ntrig5;
int lastnote5;

int ntrig6;
int lastnote6;]]></code.declaration>
         <code.init><![CDATA[ntrig1=0;

ntrig2=0;

ntrig3=0;

ntrig4=0;

ntrig5=0;

ntrig6=0;]]></code.init>
         <code.krate><![CDATA[// Ch1 //
{
if ((inlet_trig1>0) && !ntrig1) {
lastnote1 = inlet_note1&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch1-1),lastnote1,inlet_velo1);  ntrig1=1;
}
if (!(inlet_trig1>0) && ntrig1) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch1-1),lastnote1,__USAT(inlet_velo1,7)); ntrig1=0;}
}


// Ch2 //
{
if ((inlet_trig2>0) && !ntrig2) {
lastnote2 = inlet_note2&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch2-1),lastnote2,inlet_velo2);  ntrig2=1;
}
if (!(inlet_trig2>0) && ntrig2) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch2-1),lastnote2,__USAT(inlet_velo2,7)); ntrig2=0;}
}


// Ch3 //
{
if ((inlet_trig3>0) && !ntrig3) {
lastnote3 = inlet_note3&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch3-1),lastnote3,inlet_velo3);  ntrig3=1;
}
if (!(inlet_trig3>0) && ntrig3) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch3-1),lastnote3,__USAT(inlet_velo3,7)); ntrig3=0;}
}


// Ch4 //
{
if ((inlet_trig4>0) && !ntrig4) {
lastnote4 = inlet_note4&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch4-1),lastnote4,inlet_velo4);  ntrig4=1;
}
if (!(inlet_trig4>0) && ntrig4) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch4-1),lastnote4,__USAT(inlet_velo4,7)); ntrig4=0;}
}


// Ch5 //
{
if ((inlet_trig5>0) && !ntrig5) {
lastnote5 = inlet_note5&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch5-1),lastnote5,inlet_velo5);  ntrig5=1;
}
if (!(inlet_trig5>0) && ntrig5) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch5-1),lastnote5,__USAT(inlet_velo5,7)); ntrig5=0;}
}


// Ch3 //
{
if ((inlet_trig6>0) && !ntrig6) {
lastnote6 = inlet_note6&0x7F;
MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_ON + (attr_ch6-1),lastnote6,inlet_velo6);  ntrig6=1;
}
if (!(inlet_trig6>0) && ntrig6) {MidiSend3((midi_device_t) attr_dev, MIDI_NOTE_OFF + (attr_ch6-1),lastnote6,__USAT(inlet_velo6,7)); ntrig6=0;}
}]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="0" y="378" text="patch will remember its &quot;ON&quot; state."/>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="rootnotes34" x="1050" y="392">
      <params/>
      <attribs/>
   </obj>
   <obj type="mux/mux 2" uuid="16f90f81694766b0bc8187bfcba5a021e5701d81" name="mux_3" x="1148" y="392">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/change" uuid="96e39ae624c3f3c952cec4a95e1986ee0104f718" name="change_2" x="1218" y="392">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="velo34_retrig" x="1344" y="434">
      <params/>
      <attribs>
         <spinner attributeName="o" value="0"/>
      </attribs>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high, outputs &quot;o&quot; attribute value,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <int32 name="in" description="input"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <int32 name="out" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="o" MinValue="-2147483648" MaxValue="2147483647" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = attr_o;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="note34_retrig" x="1414" y="434">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high,puts out a fixed value of 0 ,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / modded by chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <bool32 name="in"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <bool32 name="out"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = 0;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="rootnotes56" x="1050" y="462">
      <params/>
      <attribs/>
   </obj>
   <obj type="mux/mux 2" uuid="16f90f81694766b0bc8187bfcba5a021e5701d81" name="mux_4" x="1148" y="476">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/change" uuid="96e39ae624c3f3c952cec4a95e1986ee0104f718" name="change_3" x="1218" y="476">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="velo34_retrig_" x="1344" y="518">
      <params/>
      <attribs>
         <spinner attributeName="o" value="0"/>
      </attribs>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high, outputs &quot;o&quot; attribute value,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <int32 name="in" description="input"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <int32 name="out" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="o" MinValue="-2147483648" MaxValue="2147483647" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = attr_o;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2" name="note56_retrig" x="1414" y="518">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="c558d45b-578f-4af0-ab25-268496fbbaa2">
         <sDescription>copies inlet &apos;in&apos; to outlet &apos;out&apos;. 
if &apos;trig&apos; is high,puts out a fixed value of 0 ,THEN outputs and keeps the value at inlet &apos;in&apos;.</sDescription>
         <author>Robert Schirmer / modded by chaocrator</author>
         <license>BSD</license>
         <helpPatch>logic.axh</helpPatch>
         <inlets>
            <bool32 name="in"/>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <bool32 name="out"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int ntrig;   int latch;]]></code.declaration>
         <code.krate><![CDATA[if ((inlet_trig>0) && !ntrig) {latch = inlet_in; ntrig=1;outlet_out = 0;}

if (!(inlet_trig>0)) {ntrig=0;outlet_out= latch;}

if ((!(inlet_trig>0)) && !ntrig) outlet_out = inlet_in;]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="1302" y="616" text="veloXY_retrig objects"/>
   <comment type="patch/comment" x="1302" y="630" text="output 0 on connected keys press,"/>
   <comment type="patch/comment" x="1302" y="644" text="otherwise current velocity value"/>
   <comment type="patch/comment" x="1302" y="658" text="(which changes on connected keys press)"/>
   <nets>
      <net>
         <source obj="layout_shift_handler" outlet="Hcounter"/>
         <dest obj="rootnote1" inlet="counter"/>
         <dest obj="rootnote2" inlet="counter"/>
         <dest obj="rootnote3" inlet="counter"/>
         <dest obj="rootnote4" inlet="counter"/>
         <dest obj="rootnote5" inlet="counter"/>
         <dest obj="rootnote6" inlet="counter"/>
         <dest obj="right_velo" inlet="counter"/>
         <dest obj="left_velo" inlet="counter"/>
      </net>
      <net>
         <source obj="or_1" outlet="o"/>
         <dest obj="mux_1" inlet="s"/>
         <dest obj="velo_up" inlet="trig"/>
         <dest obj="velo_left" inlet="trig"/>
         <dest obj="velo_down" inlet="trig"/>
         <dest obj="velo_right" inlet="trig"/>
      </net>
      <net>
         <source obj="LPPro_arrows" outlet="alwaysON"/>
         <dest obj="mux_1" inlet="i1"/>
      </net>
      <net>
         <source obj="LPPro_arrows" outlet="alwaysOFF"/>
         <dest obj="mux_1" inlet="i2"/>
      </net>
      <net>
         <source obj="LPPro_arrows" outlet="up"/>
         <dest obj="or_1" inlet="i1"/>
         <dest obj="layout_shift_handler" inlet="up"/>
      </net>
      <net>
         <source obj="LPPro_arrows" outlet="down"/>
         <dest obj="or_1" inlet="i2"/>
         <dest obj="layout_shift_handler" inlet="down"/>
      </net>
      <net>
         <source obj="LPPro_arrows" outlet="left"/>
         <dest obj="or_1" inlet="i3"/>
         <dest obj="layout_shift_handler" inlet="left"/>
      </net>
      <net>
         <source obj="LPPro_arrows" outlet="right"/>
         <dest obj="or_1" inlet="i4"/>
         <dest obj="layout_shift_handler" inlet="right"/>
      </net>
      <net>
         <source obj="layout_shift_handler" outlet="transpose"/>
         <dest obj="poly_input" inlet="transpose"/>
      </net>
      <net>
         <source obj="mux_1" outlet="o"/>
         <dest obj="note12_retrig" inlet="in"/>
         <dest obj="note34_retrig" inlet="in"/>
         <dest obj="note56_retrig" inlet="in"/>
         <dest obj="arrows_LED" inlet="trig1"/>
         <dest obj="arrows_LED" inlet="trig2"/>
         <dest obj="arrows_LED" inlet="trig3"/>
         <dest obj="arrows_LED" inlet="trig4"/>
      </net>
      <net>
         <source obj="rootnote1" outlet="value"/>
         <dest obj="rootnotes_LED" inlet="note1"/>
         <dest obj="poly_input" inlet="rootnote1"/>
      </net>
      <net>
         <source obj="rootnote2" outlet="value"/>
         <dest obj="rootnotes_LED" inlet="note2"/>
         <dest obj="poly_input" inlet="rootnote2"/>
      </net>
      <net>
         <source obj="rootnote3" outlet="value"/>
         <dest obj="rootnotes_LED" inlet="note3"/>
         <dest obj="poly_input" inlet="rootnote3"/>
      </net>
      <net>
         <source obj="rootnote6" outlet="value"/>
         <dest obj="rootnotes_LED" inlet="note6"/>
         <dest obj="poly_input" inlet="rootnote6"/>
      </net>
      <net>
         <source obj="rootnote5" outlet="value"/>
         <dest obj="rootnotes_LED" inlet="note5"/>
         <dest obj="poly_input" inlet="rootnote5"/>
      </net>
      <net>
         <source obj="rootnote4" outlet="value"/>
         <dest obj="rootnotes_LED" inlet="note4"/>
         <dest obj="poly_input" inlet="rootnote4"/>
      </net>
      <net>
         <source obj="mux_2" outlet="o"/>
         <dest obj="velo12_retrig" inlet="in"/>
         <dest obj="change_1" inlet="in"/>
      </net>
      <net>
         <source obj="change_1" outlet="trig"/>
         <dest obj="velo12_retrig" inlet="trig"/>
         <dest obj="note12_retrig" inlet="trig"/>
      </net>
      <net>
         <source obj="note12_retrig" outlet="out"/>
         <dest obj="rootnotes_LED" inlet="trig1"/>
         <dest obj="rootnotes_LED" inlet="trig2"/>
      </net>
      <net>
         <source obj="velo12_retrig" outlet="out"/>
         <dest obj="rootnotes_LED" inlet="velo1"/>
         <dest obj="rootnotes_LED" inlet="velo2"/>
      </net>
      <net>
         <source obj="rootnotes12" outlet="o"/>
         <dest obj="mux_2" inlet="s"/>
      </net>
      <net>
         <source obj="poly_input" outlet="rootgate1"/>
         <dest obj="rootnotes12" inlet="i1"/>
      </net>
      <net>
         <source obj="poly_input" outlet="rootgate2"/>
         <dest obj="rootnotes12" inlet="i2"/>
      </net>
      <net>
         <source obj="poly_input" outlet="rootgate3"/>
         <dest obj="rootnotes34" inlet="i1"/>
      </net>
      <net>
         <source obj="poly_input" outlet="rootgate4"/>
         <dest obj="rootnotes34" inlet="i2"/>
      </net>
      <net>
         <source obj="poly_input" outlet="rootgate5"/>
         <dest obj="rootnotes56" inlet="i1"/>
      </net>
      <net>
         <source obj="poly_input" outlet="rootgate6"/>
         <dest obj="rootnotes56" inlet="i2"/>
      </net>
      <net>
         <source obj="mux_3" outlet="o"/>
         <dest obj="change_2" inlet="in"/>
         <dest obj="velo34_retrig" inlet="in"/>
      </net>
      <net>
         <source obj="rootnotes34" outlet="o"/>
         <dest obj="mux_3" inlet="s"/>
      </net>
      <net>
         <source obj="mux_4" outlet="o"/>
         <dest obj="change_3" inlet="in"/>
         <dest obj="velo34_retrig_" inlet="in"/>
      </net>
      <net>
         <source obj="rootnotes56" outlet="o"/>
         <dest obj="mux_4" inlet="s"/>
      </net>
      <net>
         <source obj="i_1" outlet="out"/>
         <dest obj="mux_2" inlet="i2"/>
         <dest obj="mux_3" inlet="i2"/>
         <dest obj="mux_4" inlet="i2"/>
      </net>
      <net>
         <source obj="i_2" outlet="out"/>
         <dest obj="mux_2" inlet="i1"/>
         <dest obj="mux_3" inlet="i1"/>
         <dest obj="mux_4" inlet="i1"/>
      </net>
      <net>
         <source obj="note34_retrig" outlet="out"/>
         <dest obj="rootnotes_LED" inlet="trig3"/>
         <dest obj="rootnotes_LED" inlet="trig4"/>
      </net>
      <net>
         <source obj="change_2" outlet="trig"/>
         <dest obj="note34_retrig" inlet="trig"/>
         <dest obj="velo34_retrig" inlet="trig"/>
      </net>
      <net>
         <source obj="note56_retrig" outlet="out"/>
         <dest obj="rootnotes_LED" inlet="trig5"/>
         <dest obj="rootnotes_LED" inlet="trig6"/>
      </net>
      <net>
         <source obj="change_3" outlet="trig"/>
         <dest obj="note56_retrig" inlet="trig"/>
         <dest obj="velo34_retrig_" inlet="trig"/>
      </net>
      <net>
         <source obj="velo34_retrig_" outlet="out"/>
         <dest obj="rootnotes_LED" inlet="velo5"/>
         <dest obj="rootnotes_LED" inlet="velo6"/>
      </net>
      <net>
         <source obj="LPPro_arrows" outlet="ClrScr"/>
         <dest obj="or_1" inlet="i5"/>
      </net>
      <net>
         <source obj="velo34_retrig" outlet="out"/>
         <dest obj="rootnotes_LED" inlet="velo3"/>
         <dest obj="rootnotes_LED" inlet="velo4"/>
      </net>
      <net>
         <source obj="arrows_notes" outlet="o1"/>
         <dest obj="arrows_LED" inlet="note1"/>
      </net>
      <net>
         <source obj="arrows_notes" outlet="o2"/>
         <dest obj="arrows_LED" inlet="note2"/>
      </net>
      <net>
         <source obj="arrows_notes" outlet="o3"/>
         <dest obj="arrows_LED" inlet="note3"/>
      </net>
      <net>
         <source obj="arrows_notes" outlet="o4"/>
         <dest obj="arrows_LED" inlet="note4"/>
      </net>
      <net>
         <source obj="velo_up" outlet="out"/>
         <dest obj="arrows_LED" inlet="velo1"/>
      </net>
      <net>
         <source obj="velo_down" outlet="out"/>
         <dest obj="arrows_LED" inlet="velo2"/>
      </net>
      <net>
         <source obj="velo_left" outlet="out"/>
         <dest obj="arrows_LED" inlet="velo3"/>
      </net>
      <net>
         <source obj="velo_right" outlet="out"/>
         <dest obj="arrows_LED" inlet="velo4"/>
      </net>
      <net>
         <source obj="layout_shift_handler" outlet="Vcounter"/>
         <dest obj="up_velo" inlet="counter"/>
         <dest obj="down_velo" inlet="counter"/>
      </net>
      <net>
         <source obj="down_velo" outlet="value"/>
         <dest obj="velo_down" inlet="in"/>
      </net>
      <net>
         <source obj="up_velo" outlet="value"/>
         <dest obj="velo_up" inlet="in"/>
      </net>
      <net>
         <source obj="left_velo" outlet="value"/>
         <dest obj="velo_left" inlet="in"/>
      </net>
      <net>
         <source obj="right_velo" outlet="value"/>
         <dest obj="velo_right" inlet="in"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>2</x>
      <y>44</y>
      <width>1276</width>
      <height>980</height>
   </windowPos>
</patch-1.0>