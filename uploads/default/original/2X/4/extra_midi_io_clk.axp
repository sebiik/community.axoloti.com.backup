<patch-1.0 appVersion="1.0.12">
   <comment type="patch/comment" x="14" y="14" text="Shows how to receive MIDI on pin PA3 (3.3V logic) "/>
   <comment type="patch/comment" x="294" y="14" text="send some midi on PA2"/>
   <comment type="patch/comment" x="14" y="28" text="and channel to Internal MIDI"/>
   <obj type="script/script2" uuid="d39e743cf47c9221f4e99c133430148cf74c68c5" name="script2_2" x="294" y="42">
      <params/>
      <attribs>
         <text attributeName="script">
            <sText><![CDATA[uint8_t i;

void setup(){
  i = 0;
}

void SendMidi3(uint8_t b0,uint8_t b1,uint8_t b2){
  sdPut(&SD2,b0);
  sdPut(&SD2,b1);
  sdPut(&SD2,b2);
}

void loop(){
  chThdSleepMilliseconds(100);
  i = (uint8_t)((this->in1)>>20);
  //LogTextMessage("Sending: %d",i);
  //LogTextMessage("Sending: %d",(uint8_t(this->in2>>26)));
  if((uint8_t(this->in2>>26))==1)
  {
  	SendMidi3(0x90,i,100);
  }
  else
  {
  	SendMidi3(0x80,i,100);
  }
}]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="gpio/serial/config" uuid="8ec617bbe7b552a58656442e87513d8b4c69833a" name="serial.begin_1" x="28" y="56">
      <params/>
      <attribs>
         <combo attributeName="baudrate" selection="31250"/>
      </attribs>
   </obj>
   <obj type="script/script2" uuid="d39e743cf47c9221f4e99c133430148cf74c68c5" name="script2_1" x="28" y="112">
      <params/>
      <attribs>
         <text attributeName="script">
            <sText><![CDATA[  uint8_t StatusToMsgLength(uint8_t t){
    switch(t) {
    case 0x0:
    case 0x1:
    case 0x2:
    case 0x3:
    case 0x4:
    case 0x5:
    case 0x6:
    case 0x7:
        return 0;
    case 0x8:
    case 0x9:
    case 0xa:
    case 0xb:
        return 3;
    case 0xc:
    case 0xd:
        return 2;
    case 0xe:
        return 3;
    default:
        return -1;
    }
  }

  uint8_t SysToMsgLength(uint8_t t){
    switch(t) {
    case 0x0:
        return -1; // 0xf0=sysex start. may vary
    case 0x1:
        return 2; // 0xf1=MIDI Time Code. 2 bytes
    case 0x2:
        return 3; // 0xf2=MIDI Song position. 3 bytes
    case 0x3:
        return 2; // 0xf3=MIDI Song Select. 2 bytes.
    case 0x4:
        return 1; // 0xf4=undefined
    case 0x5:
        return 1; // 0xf5=undefined
    case 0x6:
        return 1; // 0xf6=TUNE Request
    case 0x7:
        return 1; // 0xf7=sysex end.
    case 0x8:
        return 1; // 0xf8=timing clock. 1 byte
    case 0x9:
        return 1; // 0xf9=proposed measure end?
    case 0xa:
        return 1; // 0xfa=start. 1 byte
    case 0xb:
        return 1; // 0xfb=continue. 1 byte
    case 0xc:
        return 1; // 0xfc=stop. 1 byte
    case 0xd:
        return 1; // 0xfd=undefined
    case 0xe:
        return 1; // 0xfe=active sensing. 1 byte
    case 0xf:
    default:
        return 3; // 0xff= not reset, but a META-EVENT, which is always 3 bytes
    }
  }

  unsigned char MidiByte0;
  unsigned char MidiByte1;
  unsigned char MidiByte2;
  unsigned char MidiCurData;
  unsigned char MidiNumData;

  uint8_t port = 0;

  void setup(){
  MidiNumData = 0;
  MidiCurData = 0;
  }

  void MidiInByteHandler(uint8_t data) {
  int8_t len;

  // FILTER AND SEND CLOCK MESSAGE
  if(data & 0xf8){
      MidiInMsgHandler(MIDI_DEVICE_INTERNAL,port,0xf8,data,0);
  	}
      
  if (data & 0x80) {
    len = StatusToMsgLength(data >> 4);
    if (len == -1) {
      len = SysToMsgLength(data - 0xF0);
    }
    if (len == 1) {
      MidiInMsgHandler(MIDI_DEVICE_INTERNAL,port,data,0,0);
    } else {
      MidiByte0 = data;
      MidiNumData = len - 1;
      MidiCurData = 0;
    }
  }
  /*
  else if(data & 0xf8){ 
    //LogTextMessage("receiving clock");
    MidiInMsgHandler(MIDI_DEVICE_INTERNAL,port,0xf8,data,0);
  } */
  else // not a status byte
  {
    if (MidiCurData == 0) {
      MidiByte1 = data;
      if (MidiNumData == 1) {
        // 2 byte message complete
        MidiInMsgHandler(MIDI_DEVICE_INTERNAL,port,MidiByte0, MidiByte1,0);
        //MidiInMsgHandler(MidiByte0, MidiByte1, 0);
        MidiCurData = 0;
      }
      else
        MidiCurData++;
    }
    else if (MidiCurData == 1) {
      MidiByte2 = data;
      if (MidiNumData == 2) {
          MidiInMsgHandler(MIDI_DEVICE_INTERNAL,port,MidiByte0, MidiByte1, MidiByte2);
        //MidiInMsgHandler(MidiByte0, MidiByte1, MidiByte2);
        MidiCurData = 0;
      }
    }
  }
  }
  void loop(){
    while(!sdGetWouldBlock(&SD2))
    {
            char ch = sdGet(&SD2);
            MidiInByteHandler(ch);
        }	
  }]]></sText>
         </text>
      </attribs>
   </obj>
   <comment type="patch/comment" x="294" y="154" text="if you connect PA2 to PA3, axoloti will receive MIDI produced in this script..."/>
   <obj type="ctrl/button" uuid="ef3d13774349df85aa9bfecf30dbc91ab8488b3f" name="Trigger" x="294" y="182">
      <params>
         <bool32.mom name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="MIDI Note" x="392" y="182">
      <params>
         <frac32.u.map name="value" value="37.5"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="14" y="294" text="show any incoming midi continuous controller message"/>
   <comment type="patch/comment" x="294" y="294" text="show incoming MIDI notes and trigger"/>
   <obj type="midi/in/cc i any" uuid="a5a8957c081888a8175ecd4630479533958e488b" name="ctlini_any_1" x="14" y="322">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="dispI_1" x="168" y="322">
      <params/>
      <attribs/>
   </obj>
   <obj type="midi/in/keyb" uuid="53b04874696932f38aceaa168bd5d9efb743716d" name="keyb_1" x="294" y="336">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="dial_1" x="490" y="336">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="dispI_2" x="168" y="378">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_1" x="406" y="378">
      <params/>
      <attribs/>
   </obj>
   <obj type="drj/midi/clock_rx" uuid="83a7e9eb627413a35b43f97114c130af4b3a4793" name="clock_rx_1" x="28" y="434">
      <params/>
      <attribs>
         <combo attributeName="device" selection="omni"/>
      </attribs>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="dispI_3" x="196" y="448">
      <params/>
      <attribs/>
   </obj>
   <obj type="rbrt/midi/in/monitor" uuid="64b3d36e-97ab-4b18-91f7-ff611e14fd7a" name="monitor_1" x="266" y="462">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="dispI_4" x="196" y="532">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_1" x="280" y="560">
      <params>
         <int32 name="maximum" value="16"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/ibar 16" uuid="302bfed4cde8894229679ce81f6b8a5c5212dd98" name="ibar_1" x="378" y="560">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="ctlini_any_1" outlet="value"/>
         <dest obj="dispI_1" inlet="in"/>
      </net>
      <net>
         <source obj="ctlini_any_1" outlet="cc"/>
         <dest obj="dispI_2" inlet="in"/>
      </net>
      <net>
         <source obj="ctlini_any_1" outlet="channel"/>
         <dest obj="dispI_3" inlet="in"/>
      </net>
      <net>
         <source obj="keyb_1" outlet="note"/>
         <dest obj="dial_1" inlet="in"/>
      </net>
      <net>
         <source obj="Trigger" outlet="o"/>
         <dest obj="script2_2" inlet="in2_"/>
      </net>
      <net>
         <source obj="MIDI Note" outlet="out"/>
         <dest obj="script2_2" inlet="in1_"/>
      </net>
      <net>
         <source obj="keyb_1" outlet="gate"/>
         <dest obj="bool_1" inlet="in"/>
      </net>
      <net>
         <source obj="clock_rx_1" outlet="position"/>
         <dest obj="dispI_4" inlet="in"/>
      </net>
      <net>
         <source obj="counter_1" outlet="o"/>
         <dest obj="ibar_1" inlet="in"/>
      </net>
      <net>
         <source obj="clock_rx_1" outlet="24ppq"/>
         <dest obj="counter_1" inlet="trig"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>-8</y>
      <width>1382</width>
      <height>754</height>
   </windowPos>
</patch-1.0>