<objdefs appVersion="1.0.12">
   <obj.normal id="step toggle LCXL" uuid="39e843d2-5d3a-4a80-b6de-18e95b9ff653">
      <sDescription>adapted from rbrt&apos;s launchpad objects - all mistakes my own. Mattilyn Mattroe

toggles an element of a table : if the element at index == 0,the element is set to the dial &apos;value&apos;.
if the element &gt; 0 ,the element is set to 0.</sDescription>
      <author>Robert Schirmer</author>
      <license>BSD</license>
      <helpPatch>step_seq.axh</helpPatch>
      <inlets>
         <int32.positive name="offset" description="offset in the table"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <objref name="table"/>
         <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="9"/>
      </attribs>
      <code.declaration><![CDATA[int ntrig;
bool op;
int8_t _note;
uint8_t _gate;]]></code.declaration>
      <code.krate><![CDATA[if ((_gate>0) && !ntrig) {
      ntrig=1;
      op = attr_table.array[(_note + inlet_offset)];
      op = !op ;
         attr_table.array[(_note + inlet_offset)]= (op * (__SSAT(((1<<27)),28)>>attr_table.GAIN));
         
   }
   if (!(_gate>0)) {
   	ntrig=0;
   }]]></code.krate>
      <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 41)) {
    _note = 0;
    _gate = 1;
}
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 42)) {
    _note = 1;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 43)) {
    _note = 2;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 44)) {
    _note = 3;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 57)) {
    _note = 4;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 58)) {
    _note = 5;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + + (attr_channel-1)) && (data2) && (data1 == 59)) {
    _note = 6;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 60)) {
    _note = 7;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 73)) {
    _note = 8;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 74)) {
    _note = 9;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 75)) {
    _note = 10;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 76)) {
    _note = 11;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 89)) {
    _note = 12;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 90)) {
    _note = 13;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 91)) {
    _note = 14;
    _gate = 1;
} 
if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2) && (data1 == 92)) {
    _note = 15;
    _gate = 1;
} 
else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
    _gate = 0;
  }
 
 else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate = 0;
}]]></code.midihandler>
   </obj.normal>
</objdefs>