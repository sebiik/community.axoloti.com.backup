<patch-1.0 appVersion="1.0.12">
   <comment type="patch/comment" x="0" y="0" text="I&apos;m not sure what type of output to use w/ this object"/>
   <comment type="patch/comment" x="0" y="14" text="but this would be where the individual buttons come out of the 8 muxs magically"/>
   <comment type="patch/comment" x="448" y="28" text="place holder pretending like I know what I&apos;m doing here."/>
   <comment type="patch/comment" x="798" y="28" text="midi out! woo!"/>
   <patchobj type="patch/object" uuid="50d65984-1f67-40ef-a11e-8e5f7e8c6a33" name="Ctrl3_4067_mv_3" x="0" y="42">
      <params/>
      <attribs>
         <combo attributeName="Z0" selection="PA0 (ADC1_IN0)"/>
         <combo attributeName="Z1" selection="PA1 (ADC1_IN1)"/>
         <combo attributeName="Z2" selection="PA2 (ADC1_IN2)"/>
         <combo attributeName="S0" selection="PC1"/>
         <combo attributeName="S1" selection="PC2"/>
         <combo attributeName="S2" selection="PC3"/>
         <combo attributeName="S3" selection="PC4"/>
      </attribs>
      <object id="patch/object" uuid="50d65984-1f67-40ef-a11e-8e5f7e8c6a33">
         <sDescription>control object for 3 4067
	  include &apos;smart&apos; filter
	  
		select GPIOs
		S0 low
		S1
		S2
        S3		high
		
		Input GPIOs
		Z0 from first 4067
		Z1
		Z2 from last 4067</sDescription>
         <author>Smashed Transistors</author>
         <license>LGPL</license>
         <helpPatch>Ctrl3_4067_mv.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="o1"/>
            <bool32 name="o2"/>
            <bool32 name="o3"/>
            <bool32 name="o4"/>
            <bool32 name="o5"/>
            <bool32 name="o6"/>
            <bool32 name="o7"/>
            <bool32 name="o8"/>
            <bool32 name="o9"/>
            <bool32 name="o10"/>
            <bool32 name="o11"/>
            <bool32 name="o12"/>
            <bool32 name="o13"/>
            <bool32 name="o14"/>
            <bool32 name="o15"/>
            <bool32 name="o16"/>
            <bool32 name="o17"/>
            <bool32 name="o18"/>
            <bool32 name="o19"/>
            <bool32 name="o20"/>
            <bool32 name="o21"/>
            <bool32 name="o22"/>
            <bool32 name="o23"/>
            <bool32 name="o24"/>
            <bool32 name="o25"/>
            <bool32 name="o26"/>
            <bool32 name="o27"/>
            <bool32 name="o28"/>
            <bool32 name="o29"/>
            <bool32 name="o30"/>
            <bool32 name="o31"/>
            <bool32 name="o32"/>
            <bool32 name="o33"/>
            <bool32 name="o34"/>
            <bool32 name="o35"/>
            <bool32 name="o36"/>
            <bool32 name="o37"/>
            <bool32 name="o38"/>
            <bool32 name="o39"/>
            <bool32 name="o40"/>
            <bool32 name="o41"/>
            <bool32 name="o42"/>
            <bool32 name="o43"/>
            <bool32 name="o44"/>
            <bool32 name="o45"/>
            <bool32 name="o46"/>
            <bool32 name="o47"/>
            <bool32 name="o48"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <combo name="Z0">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="Z1">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="Z2">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="S0">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S1">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S2">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S3">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int32_t get(int h){
		return a_inF3[h];
	  }
	  int32_t a_inF0[48], a_inF1[48], a_inF2[48], a_inF3[48];

uint8_t multiplex_cpt;
uint8_t kcycle2_cpt, kcycle48_cpt;]]></code.declaration>
         <code.init><![CDATA[multiplex_cpt = kcycle2_cpt = kcycle48_cpt = 0;

for(int i = 0; i < 48; i++) {
	a_inF3[i] = a_inF2[i] = a_inF1[i] = a_inF0[i] = 0;
}

//init gpios  
//outputs for the 4067 select lines S0 S1 S2 S3  
palSetPadMode(attr_S0, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S1, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S2, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S3, PAL_MODE_OUTPUT_PUSHPULL);]]></code.init>
         <code.krate><![CDATA[//the inputs are sampled 1/2 kcycle so that the multiplexed signals (4067) are stable 
kcycle2_cpt++;
if(kcycle2_cpt == 2){
	kcycle2_cpt = 0;

	int32_t* a_in = a_inF0 + multiplex_cpt;
	//LP with 0.25 coefficient
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z0]<<15) - *a_in, *a_in);
	a_in += 16; 
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z1]<<15) - *a_in, *a_in);
	a_in += 16; 
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z2]<<15) - *a_in, *a_in);

	// prepare next
	multiplex_cpt++;
	multiplex_cpt &= 15;
}
//set gpio outputs
palWritePad(attr_S0, (multiplex_cpt & 1) != 0);
palWritePad(attr_S1, (multiplex_cpt & 2) != 0);
palWritePad(attr_S2, (multiplex_cpt & 4) != 0);
palWritePad(attr_S3, (multiplex_cpt & 8) != 0);
//Repartition des filtrages 'intelligent' des 48 entrees analogiques
{
	kcycle48_cpt++;
	if(kcycle48_cpt == 48){
		kcycle48_cpt = 0;
	}
	int i = kcycle48_cpt;

	//extends to  [0 64[ even if there is some noise
	a_inF0[i]=__USAT(___SMMLA(a_inF0[i],0x40800000,-1<<17)<<2,27);

     int32_t coef = a_inF0[i] - a_inF1[i];
     coef = __USAT(___SMMLA(coef,coef,0x00008000)<<8,25)<<6;
     a_inF1[i] = ___SMMLA(coef,(a_inF0[i] - a_inF1[i])<<1,a_inF1[i]);

	coef = a_inF1[i] - a_inF2[i];
     coef = __USAT(___SMMLA(coef,coef,0x00000800)<<8,24)<<7;
     a_inF2[i] = ___SMMLA(coef,(a_inF1[i] - a_inF2[i])<<1,a_inF2[i]);
     
	coef = a_inF2[i] - a_inF3[i];
     coef = __USAT(___SMMLA(coef,coef,0x00000100)<<8,23)<<8;
     a_inF3[i] = ___SMMLA(coef,(a_inF2[i] - a_inF3[i])<<1,a_inF3[i]);
	
	/*
	if(abs(a_inF0[i] - a_inF1[i]) > (1<<21)){ //jump
		 a_inF1[i] =  a_inF0[i];
	} else { //smooth 0.5
		a_inF1[i] = (a_inF0[i] + a_inF1[i])>>1;
	}

	int32_t dist = abs(a_inF1[i] - a_inF2[i]);
	if( dist > (1<<20)){ //jump
		a_inF2[i] = a_inF1[i];
	} else {
		//the closer, the smoother		
		int32_t coef;
		if(dist>(1<<19)) coef = 0x40000000;
		else coef = (dist<<11) +0x14000000;
		
		a_inF2[i] = ___SMMLA(coef, a_inF1[i] - a_inF2[i], a_inF2[i]);			 			 
	}
	
	dist = abs(a_inF2[i] - a_inF3[i]);
	if( dist > (1<<18)){ //jump
		a_inF3[i] = a_inF2[i];
	} else {
		//the closer, the smoother	 
		int32_t coef;
		if(dist>(1<<19)) coef = 0x10600000;
		else coef = (dist<<10) +0x00600000;
		a_inF3[i] = ___SMMLA(coef, a_inF2[i] - a_inF3[i], a_inF3[i]);			 			 
	}
	*/

	
}]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="50d65984-1f67-40ef-a11e-8e5f7e8c6a33" name="Ctrl3_4067_mv_2" x="112" y="42">
      <params/>
      <attribs>
         <combo attributeName="Z0" selection="PA0 (ADC1_IN0)"/>
         <combo attributeName="Z1" selection="PA1 (ADC1_IN1)"/>
         <combo attributeName="Z2" selection="PA2 (ADC1_IN2)"/>
         <combo attributeName="S0" selection="PA5"/>
         <combo attributeName="S1" selection="PA4"/>
         <combo attributeName="S2" selection="PA3"/>
         <combo attributeName="S3" selection="PC5"/>
      </attribs>
      <object id="patch/object" uuid="50d65984-1f67-40ef-a11e-8e5f7e8c6a33">
         <sDescription>control object for 3 4067
	  include &apos;smart&apos; filter
	  
		select GPIOs
		S0 low
		S1
		S2
        S3		high
		
		Input GPIOs
		Z0 from first 4067
		Z1
		Z2 from last 4067</sDescription>
         <author>Smashed Transistors</author>
         <license>LGPL</license>
         <helpPatch>Ctrl3_4067_mv.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="o1"/>
            <bool32 name="o2"/>
            <bool32 name="o3"/>
            <bool32 name="o4"/>
            <bool32 name="o5"/>
            <bool32 name="o6"/>
            <bool32 name="o7"/>
            <bool32 name="o8"/>
            <bool32 name="o9"/>
            <bool32 name="o10"/>
            <bool32 name="o11"/>
            <bool32 name="o12"/>
            <bool32 name="o13"/>
            <bool32 name="o14"/>
            <bool32 name="o15"/>
            <bool32 name="o16"/>
            <bool32 name="o17"/>
            <bool32 name="o18"/>
            <bool32 name="o19"/>
            <bool32 name="o20"/>
            <bool32 name="o21"/>
            <bool32 name="o22"/>
            <bool32 name="o23"/>
            <bool32 name="o24"/>
            <bool32 name="o25"/>
            <bool32 name="o26"/>
            <bool32 name="o27"/>
            <bool32 name="o28"/>
            <bool32 name="o29"/>
            <bool32 name="o30"/>
            <bool32 name="o31"/>
            <bool32 name="o32"/>
            <bool32 name="o33"/>
            <bool32 name="o34"/>
            <bool32 name="o35"/>
            <bool32 name="o36"/>
            <bool32 name="o37"/>
            <bool32 name="o38"/>
            <bool32 name="o39"/>
            <bool32 name="o40"/>
            <bool32 name="o41"/>
            <bool32 name="o42"/>
            <bool32 name="o43"/>
            <bool32 name="o44"/>
            <bool32 name="o45"/>
            <bool32 name="o46"/>
            <bool32 name="o47"/>
            <bool32 name="o48"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <combo name="Z0">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="Z1">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="Z2">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="S0">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S1">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S2">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S3">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int32_t get(int h){
		return a_inF3[h];
	  }
	  int32_t a_inF0[48], a_inF1[48], a_inF2[48], a_inF3[48];

uint8_t multiplex_cpt;
uint8_t kcycle2_cpt, kcycle48_cpt;]]></code.declaration>
         <code.init><![CDATA[multiplex_cpt = kcycle2_cpt = kcycle48_cpt = 0;

for(int i = 0; i < 48; i++) {
	a_inF3[i] = a_inF2[i] = a_inF1[i] = a_inF0[i] = 0;
}

//init gpios  
//outputs for the 4067 select lines S0 S1 S2 S3  
palSetPadMode(attr_S0, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S1, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S2, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S3, PAL_MODE_OUTPUT_PUSHPULL);]]></code.init>
         <code.krate><![CDATA[//the inputs are sampled 1/2 kcycle so that the multiplexed signals (4067) are stable 
kcycle2_cpt++;
if(kcycle2_cpt == 2){
	kcycle2_cpt = 0;

	int32_t* a_in = a_inF0 + multiplex_cpt;
	//LP with 0.25 coefficient
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z0]<<15) - *a_in, *a_in);
	a_in += 16; 
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z1]<<15) - *a_in, *a_in);
	a_in += 16; 
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z2]<<15) - *a_in, *a_in);

	// prepare next
	multiplex_cpt++;
	multiplex_cpt &= 15;
}
//set gpio outputs
palWritePad(attr_S0, (multiplex_cpt & 1) != 0);
palWritePad(attr_S1, (multiplex_cpt & 2) != 0);
palWritePad(attr_S2, (multiplex_cpt & 4) != 0);
palWritePad(attr_S3, (multiplex_cpt & 8) != 0);
//Repartition des filtrages 'intelligent' des 48 entrees analogiques
{
	kcycle48_cpt++;
	if(kcycle48_cpt == 48){
		kcycle48_cpt = 0;
	}
	int i = kcycle48_cpt;

	//extends to  [0 64[ even if there is some noise
	a_inF0[i]=__USAT(___SMMLA(a_inF0[i],0x40800000,-1<<17)<<2,27);

     int32_t coef = a_inF0[i] - a_inF1[i];
     coef = __USAT(___SMMLA(coef,coef,0x00008000)<<8,25)<<6;
     a_inF1[i] = ___SMMLA(coef,(a_inF0[i] - a_inF1[i])<<1,a_inF1[i]);

	coef = a_inF1[i] - a_inF2[i];
     coef = __USAT(___SMMLA(coef,coef,0x00000800)<<8,24)<<7;
     a_inF2[i] = ___SMMLA(coef,(a_inF1[i] - a_inF2[i])<<1,a_inF2[i]);
     
	coef = a_inF2[i] - a_inF3[i];
     coef = __USAT(___SMMLA(coef,coef,0x00000100)<<8,23)<<8;
     a_inF3[i] = ___SMMLA(coef,(a_inF2[i] - a_inF3[i])<<1,a_inF3[i]);
	
	/*
	if(abs(a_inF0[i] - a_inF1[i]) > (1<<21)){ //jump
		 a_inF1[i] =  a_inF0[i];
	} else { //smooth 0.5
		a_inF1[i] = (a_inF0[i] + a_inF1[i])>>1;
	}

	int32_t dist = abs(a_inF1[i] - a_inF2[i]);
	if( dist > (1<<20)){ //jump
		a_inF2[i] = a_inF1[i];
	} else {
		//the closer, the smoother		
		int32_t coef;
		if(dist>(1<<19)) coef = 0x40000000;
		else coef = (dist<<11) +0x14000000;
		
		a_inF2[i] = ___SMMLA(coef, a_inF1[i] - a_inF2[i], a_inF2[i]);			 			 
	}
	
	dist = abs(a_inF2[i] - a_inF3[i]);
	if( dist > (1<<18)){ //jump
		a_inF3[i] = a_inF2[i];
	} else {
		//the closer, the smoother	 
		int32_t coef;
		if(dist>(1<<19)) coef = 0x10600000;
		else coef = (dist<<10) +0x00600000;
		a_inF3[i] = ___SMMLA(coef, a_inF2[i] - a_inF3[i], a_inF3[i]);			 			 
	}
	*/

	
}]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="50d65984-1f67-40ef-a11e-8e5f7e8c6a33" name="Ctrl3_4067_mv_1" x="224" y="42">
      <params/>
      <attribs>
         <combo attributeName="Z0" selection="PA0 (ADC1_IN0)"/>
         <combo attributeName="Z1" selection="PA1 (ADC1_IN1)"/>
         <combo attributeName="Z2" selection="PA2 (ADC1_IN2)"/>
         <combo attributeName="S0" selection="PB1"/>
         <combo attributeName="S1" selection="PB0"/>
         <combo attributeName="S2" selection="PA6"/>
         <combo attributeName="S3" selection="PA7"/>
      </attribs>
      <object id="patch/object" uuid="50d65984-1f67-40ef-a11e-8e5f7e8c6a33">
         <sDescription>control object for 3 4067
	  include &apos;smart&apos; filter
	  
		select GPIOs
		S0 low
		S1
		S2
        S3		high
		
		Input GPIOs
		Z0 from first 4067
		Z1
		Z2 from last 4067</sDescription>
         <author>Smashed Transistors</author>
         <license>LGPL</license>
         <helpPatch>Ctrl3_4067_mv.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="o1"/>
            <bool32 name="o2"/>
            <bool32 name="o3"/>
            <bool32 name="o4"/>
            <bool32 name="o5"/>
            <bool32 name="o6"/>
            <bool32 name="o7"/>
            <bool32 name="o8"/>
            <bool32 name="o9"/>
            <bool32 name="o10"/>
            <bool32 name="o11"/>
            <bool32 name="o12"/>
            <bool32 name="o13"/>
            <bool32 name="o14"/>
            <bool32 name="o15"/>
            <bool32 name="o16"/>
            <bool32 name="o17"/>
            <bool32 name="o18"/>
            <bool32 name="o19"/>
            <bool32 name="o20"/>
            <bool32 name="o21"/>
            <bool32 name="o22"/>
            <bool32 name="o23"/>
            <bool32 name="o24"/>
            <bool32 name="o25"/>
            <bool32 name="o26"/>
            <bool32 name="o27"/>
            <bool32 name="o28"/>
            <bool32 name="o29"/>
            <bool32 name="o30"/>
            <bool32 name="o31"/>
            <bool32 name="o32"/>
            <bool32 name="o33"/>
            <bool32 name="o34"/>
            <bool32 name="o35"/>
            <bool32 name="o36"/>
            <bool32 name="o37"/>
            <bool32 name="o38"/>
            <bool32 name="o39"/>
            <bool32 name="o40"/>
            <bool32 name="o41"/>
            <bool32 name="o42"/>
            <bool32 name="o43"/>
            <bool32 name="o44"/>
            <bool32 name="o45"/>
            <bool32 name="o46"/>
            <bool32 name="o47"/>
            <bool32 name="o48"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <combo name="Z0">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="Z1">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="Z2">
               <MenuEntries>
                  <string>PA0 (ADC1_IN0)</string>
                  <string>PA1 (ADC1_IN1)</string>
                  <string>PA2 (ADC1_IN2)</string>
                  <string>PA3 (ADC1_IN3)</string>
                  <string>PA4 (ADC1_IN4)</string>
                  <string>PA5 (ADC1_IN5)</string>
                  <string>PA6 (ADC1_IN6)</string>
                  <string>PA7 (ADC1_IN7)</string>
                  <string>PB0 (ADC1_IN8)</string>
                  <string>PB1 (ADC1_IN9)</string>
                  <string>PC0 (ADC1_IN10)</string>
                  <string>PC1 (ADC1_IN11)</string>
                  <string>PC2 (ADC1_IN12)</string>
                  <string>PC3 (ADC1_IN13)</string>
                  <string>PC4 (ADC1_IN14)</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
               </CEntries>
            </combo>
            <combo name="S0">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S1">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S2">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
            <combo name="S3">
               <MenuEntries>
                  <string>PA0</string>
                  <string>PA1</string>
                  <string>PA2</string>
                  <string>PA3</string>
                  <string>PA4</string>
                  <string>PA5</string>
                  <string>PA6</string>
                  <string>PA7</string>
                  <string>PB0</string>
                  <string>PB1</string>
                  <string>PB6</string>
                  <string>PB7</string>
                  <string>PB8</string>
                  <string>PB9</string>
                  <string>PC0</string>
                  <string>PC1</string>
                  <string>PC2</string>
                  <string>PC3</string>
                  <string>PC4</string>
                  <string>PC5</string>
               </MenuEntries>
               <CEntries>
                  <string>GPIOA,0</string>
                  <string>GPIOA,1</string>
                  <string>GPIOA,2</string>
                  <string>GPIOA,3</string>
                  <string>GPIOA,4</string>
                  <string>GPIOA,5</string>
                  <string>GPIOA,6</string>
                  <string>GPIOA,7</string>
                  <string>GPIOB,0</string>
                  <string>GPIOB,1</string>
                  <string>GPIOB,6</string>
                  <string>GPIOB,7</string>
                  <string>GPIOB,8</string>
                  <string>GPIOB,9</string>
                  <string>GPIOC,0</string>
                  <string>GPIOC,1</string>
                  <string>GPIOC,2</string>
                  <string>GPIOC,3</string>
                  <string>GPIOC,4</string>
                  <string>GPIOC,5</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int32_t get(int h){
		return a_inF3[h];
	  }
	  int32_t a_inF0[48], a_inF1[48], a_inF2[48], a_inF3[48];

uint8_t multiplex_cpt;
uint8_t kcycle2_cpt, kcycle48_cpt;]]></code.declaration>
         <code.init><![CDATA[multiplex_cpt = kcycle2_cpt = kcycle48_cpt = 0;

for(int i = 0; i < 48; i++) {
	a_inF3[i] = a_inF2[i] = a_inF1[i] = a_inF0[i] = 0;
}

//init gpios  
//outputs for the 4067 select lines S0 S1 S2 S3  
palSetPadMode(attr_S0, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S1, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S2, PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(attr_S3, PAL_MODE_OUTPUT_PUSHPULL);]]></code.init>
         <code.krate><![CDATA[//the inputs are sampled 1/2 kcycle so that the multiplexed signals (4067) are stable 
kcycle2_cpt++;
if(kcycle2_cpt == 2){
	kcycle2_cpt = 0;

	int32_t* a_in = a_inF0 + multiplex_cpt;
	//LP with 0.25 coefficient
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z0]<<15) - *a_in, *a_in);
	a_in += 16; 
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z1]<<15) - *a_in, *a_in);
	a_in += 16; 
	*a_in = ___SMMLA(0x40000000, (adcvalues[attr_Z2]<<15) - *a_in, *a_in);

	// prepare next
	multiplex_cpt++;
	multiplex_cpt &= 15;
}
//set gpio outputs
palWritePad(attr_S0, (multiplex_cpt & 1) != 0);
palWritePad(attr_S1, (multiplex_cpt & 2) != 0);
palWritePad(attr_S2, (multiplex_cpt & 4) != 0);
palWritePad(attr_S3, (multiplex_cpt & 8) != 0);
//Repartition des filtrages 'intelligent' des 48 entrees analogiques
{
	kcycle48_cpt++;
	if(kcycle48_cpt == 48){
		kcycle48_cpt = 0;
	}
	int i = kcycle48_cpt;

	//extends to  [0 64[ even if there is some noise
	a_inF0[i]=__USAT(___SMMLA(a_inF0[i],0x40800000,-1<<17)<<2,27);

     int32_t coef = a_inF0[i] - a_inF1[i];
     coef = __USAT(___SMMLA(coef,coef,0x00008000)<<8,25)<<6;
     a_inF1[i] = ___SMMLA(coef,(a_inF0[i] - a_inF1[i])<<1,a_inF1[i]);

	coef = a_inF1[i] - a_inF2[i];
     coef = __USAT(___SMMLA(coef,coef,0x00000800)<<8,24)<<7;
     a_inF2[i] = ___SMMLA(coef,(a_inF1[i] - a_inF2[i])<<1,a_inF2[i]);
     
	coef = a_inF2[i] - a_inF3[i];
     coef = __USAT(___SMMLA(coef,coef,0x00000100)<<8,23)<<8;
     a_inF3[i] = ___SMMLA(coef,(a_inF2[i] - a_inF3[i])<<1,a_inF3[i]);
	
	/*
	if(abs(a_inF0[i] - a_inF1[i]) > (1<<21)){ //jump
		 a_inF1[i] =  a_inF0[i];
	} else { //smooth 0.5
		a_inF1[i] = (a_inF0[i] + a_inF1[i])>>1;
	}

	int32_t dist = abs(a_inF1[i] - a_inF2[i]);
	if( dist > (1<<20)){ //jump
		a_inF2[i] = a_inF1[i];
	} else {
		//the closer, the smoother		
		int32_t coef;
		if(dist>(1<<19)) coef = 0x40000000;
		else coef = (dist<<11) +0x14000000;
		
		a_inF2[i] = ___SMMLA(coef, a_inF1[i] - a_inF2[i], a_inF2[i]);			 			 
	}
	
	dist = abs(a_inF2[i] - a_inF3[i]);
	if( dist > (1<<18)){ //jump
		a_inF3[i] = a_inF2[i];
	} else {
		//the closer, the smoother	 
		int32_t coef;
		if(dist>(1<<19)) coef = 0x10600000;
		else coef = (dist<<10) +0x00600000;
		a_inF3[i] = ___SMMLA(coef, a_inF2[i] - a_inF3[i], a_inF3[i]);			 			 
	}
	*/

	
}]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="448" y="42" text="to designate desired midi note / chord per button from the left side"/>
   <patchobj type="patch/object" uuid="c5a036de-8bca-4198-8350-0e21897bf992" name="btn to MIDInote" x="532" y="70">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="c5a036de-8bca-4198-8350-0e21897bf992">
         <sDescription></sDescription>
         <inlets>
            <bool32 name="i1"/>
         </inlets>
         <outlets>
            <frac32 name="o1"/>
            <frac32 name="o2"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <depends/>
         <code.declaration><![CDATA[static const uint32_t NPEXCH = 0;
    ParameterExchange_t PExch[NPEXCH];
    int32_t displayVector[3];
    static const uint32_t NPRESETS = 8;
    static const uint32_t NPRESET_ENTRIES = 32;
    static const uint32_t NMODULATIONSOURCES = 8;
    static const uint32_t NMODULATIONTARGETS = 8;
    int32_t PExModulationPrevVal[1][NMODULATIONSOURCES];
/* modsource defines */
/* parameter instance indices */
/* controller classes */
/* object classes */
/* controller instances */
/* object instances */
/* net latches */
static const int polyIndex = 0;
   static int32_t * GetInitParams(void){
      static const int32_t p[0]= {
      };
      return (int32_t *)&p[0];
   }   static const int32_t * GetPresets(void){
      static const int32_t p[NPRESETS][NPRESET_ENTRIES][2] = {
         {
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0}
         },
         {
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0}
         },
         {
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0}
         },
         {
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0}
         },
         {
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0}
         },
         {
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0}
         },
         {
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0}
         },
         {
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0},
           {-1,0}
         }
      };
   return &p[0][0][0];
   };
void ApplyPreset(int index){
   if (!index) {
     int i;
     int32_t *p = GetInitParams();
     for(i=0;i<NPEXCH;i++){
        PExParameterChange(&PExch[i],p[i],0xFFEF);
     }
   }
   index--;
   if (index < NPRESETS) {
     PresetParamChange_t *pa = (PresetParamChange_t *)(GetPresets());
     PresetParamChange_t *p = &pa[index*NPRESET_ENTRIES];
       int i;
       for(i=0;i<NPRESET_ENTRIES;i++){
         PresetParamChange_t *pp = &p[i];
         if ((pp->pexIndex>=0)&&(pp->pexIndex<NPEXCH)) {
           PExParameterChange(&PExch[pp->pexIndex],pp->value,0xFFEF);         }
         else break;
       }
   }
}
   static PExModulationTarget_t * GetModulationTable(void){
    static const PExModulationTarget_t PExModulationSources[NMODULATIONSOURCES][NMODULATIONTARGETS] = 
{{{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0}},
{{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0}},
{{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0}},
{{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0}},
{{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0}},
{{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0}},
{{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0}},
{{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0},{-1,0}}};
   return (PExModulationTarget_t *)&PExModulationSources[0][0];
   };]]></code.declaration>
         <code.init><![CDATA[int i;
   int j;
   const int32_t *p;
   p = GetInitParams();
   for(j=0;j<0;j++){
      PExch[j].value = p[j];
      PExch[j].modvalue = p[j];
      PExch[j].signals = 0;
      PExch[j].pfunction = 0;
   }
   int32_t *pp = &PExModulationPrevVal[0][0];
   for(j=0;j<attr_poly*NMODULATIONSOURCES;j++){
      *pp = 0; pp++;
   }
     displayVector[0] = 0x446F7841;
     displayVector[1] = 0;
     displayVector[2] = 0;
      int k;
      for (k = 0; k < NPEXCH; k++) {
        if (PExch[k].pfunction){
          (PExch[k].pfunction)(&PExch[k]);
        } else {
          PExch[k].finalvalue = PExch[k].value;
        }
      }]]></code.init>
         <code.dispose><![CDATA[]]></code.dispose>
         <code.krate><![CDATA[int i; /*...*/
//--------- <nets> -----------//
//--------- </nets> ----------//
//--------- <zero> ----------//
  int32_t UNCONNECTED_OUTPUT;
  static const int32_t UNCONNECTED_INPUT=0;
  static const int32buffer zerobuffer = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  int32buffer UNCONNECTED_OUTPUT_BUFFER;
//--------- </zero> ----------//
//--------- <controller calls> ----------//
//--------- <object calls> ----------//
//--------- </object calls> ----------//
//--------- <net latch copy> ----------//
//--------- </net latch copy> ----------//]]></code.krate>
         <code.midihandler><![CDATA[if ( attr_mididevice > 0 && dev > 0 && attr_mididevice != dev) return;
if ( attr_midiport > 0 && port > 0 && attr_midiport != port) return;]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="midi/out/note" uuid="a76ae870da278cbbce5501a57ce7bd0e0ea4215c" name="note_1" x="784" y="70">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb device port 1"/>
         <spinner attributeName="channel" value="1"/>
      </attribs>
   </obj>
   <comment type="patch/comment" x="588" y="504" text=" making sure i have signal.. I do! yay!"/>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analogRead_1" x="560" y="532">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA0 (ADC1_IN0)"/>
      </attribs>
   </obj>
   <obj type="disp/chart p" uuid="58f42040a894006a5f73ed8cb8d0bd45481b28cd" name="scopeU_1" x="714" y="532">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analogRead_2" x="574" y="644">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA1 (ADC1_IN1)"/>
      </attribs>
   </obj>
   <obj type="disp/chart p" uuid="58f42040a894006a5f73ed8cb8d0bd45481b28cd" name="scopeU_2" x="714" y="644">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="Ctrl3_4067_mv_1" outlet="o1"/>
         <dest obj="btn to MIDInote" inlet="i1"/>
      </net>
      <net>
         <source obj="analogRead_1" outlet="out"/>
         <dest obj="scopeU_1" inlet="in"/>
      </net>
      <net>
         <source obj="analogRead_2" outlet="out"/>
         <dest obj="scopeU_2" inlet="in"/>
      </net>
      <net>
         <source obj="btn to MIDInote" outlet="o1"/>
         <dest obj="note_1" inlet="note"/>
      </net>
      <net>
         <source obj="btn to MIDInote" outlet="o2"/>
         <dest obj="note_1" inlet="velo"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>264</x>
      <y>25</y>
      <width>998</width>
      <height>979</height>
   </windowPos>
</patch-1.0>