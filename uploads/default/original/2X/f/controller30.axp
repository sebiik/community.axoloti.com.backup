<patch-1.0 appVersion="1.0.12">
   <patchobj type="patch/object" uuid="afa129c1-e89d-44dd-a7a3-f10ca9955456" name="globals" x="0" y="14">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="afa129c1-e89d-44dd-a7a3-f10ca9955456">
         <inlets/>
         <outlets/>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[struct parameter { // this struct must also be defined in the object which reads the parameters struct which is defined below
	uint8_t cc;
	uint8_t tIndex; // table index -> stores the index of the value in the synthControlTable 
	uint8_t type; 
	// 0 = direct value editing 
	// 1 = button combination a message from this cc is a button press -> press = value 127 leave = value 0, 
	// 2 = shiftMode (same as 1 when shift is pressed) button Combination 
	// 3 = these parameters only are available in affectMode 1 -> example: the influence of velocity on different parameters is selected
	// 4 = these parameters only are available in affectMode 2 -> example: the influence of the lfo on different parameters is selected
	// 5 = these parameters only are available in affectMode 3 -> example: the influence of the envelope on different parameters is selected
	// 6 = these parameters only are available in affectMode 4 -> example: the influence of aftertouch on different parameters is selected
};
struct parameters {
	struct parameter MEMORY_STARTMARK = {0,0,0}; // this is only to get the first memory adress later param iteration
	/* define all parameters here
	---------------------------------------------------------------------------------------------------------------------*/

	// global parameters                   // cc, idx, type
	struct parameter attack   	 	= 	{   1,  41, 0};
	struct parameter decay    		= 	{   8,  42, 0};
	struct parameter sustain   		= 	{  15,  43, 0};
	struct parameter release   		= 	{  22,  44, 0};
	struct parameter filterAttack      = 	{  29,  46, 0}; 
	struct parameter filterDecay       = 	{  36,  47, 0}; 
	struct parameter filterSustain	= 	{  43,  48, 0}; 
	struct parameter lfoCoarseFreq	= 	{  31,  49, 0}; 
	struct parameter lfoFreq1		= 	{  38,  50, 0}; // when multiple keys are pressed every first has this freq
	struct parameter lfoFreq2		= 	{  45,  51, 0}; // every second key gets this lfo freq
	struct parameter lfoFreq3		= 	{  52,  52, 0}; // and every third key this one
	struct parameter lfoDelay		= 	{  56,  90, 0}; 
	
 									// idx 53 is used by datafader/masterfader)
	struct parameter filterCutoff      =    {  42, 54, 0 };
	struct parameter filterCutoffKeyfollow =    {  0, 55, 0 }; 
	struct parameter filterResonance	=    {  49, 82, 0 };
	struct parameter filterResonanceKeyfollow = {  0, 83, 0 }; 
	struct parameter pwm               =    {  30, 56, 0 };
	struct parameter pwmMod            =    {  37, 81, 0 };
	
	// velocity impact on parameters
	struct parameter velVolume         =    {  39, 57, 3 };
	struct parameter velFilter         =    {  46, 58, 3 };
	struct parameter velRes         	=    {  53, 59, 3 };
	struct parameter velPwm        	=    {  41, 60, 3 };
	struct parameter velPitch         	=    {  48, 61, 3 };
	struct parameter velLfo         	=    {  55, 62, 3 };
	// lfo impact on parameters
	struct parameter lfoVolume         =    {  39, 63, 4 };
	struct parameter lfoFilter         =    {  46, 64, 4 };
	struct parameter lfoRes         	=    {  53, 65, 4 };
	struct parameter lfoPwm        	=    {  41, 66, 4 };
	struct parameter lfoPitch         	=    {  48, 67, 4 };
	struct parameter lfoLfo         	=    {  55, 68, 4 };
	// envelope impact on parameters
	struct parameter envVolume         =    {  39, 69, 5 };
	struct parameter envFilter         =    {  46, 70, 5 };
	struct parameter envRes         	=    {  53, 71, 5 };
	struct parameter envPwm        	=    {  41, 72, 5 };
	struct parameter envPitch         	=    {  48, 73, 5 };
	struct parameter envLfo         	=    {  55, 74, 5 };
	// aftertouch impact on parameters
	struct parameter touchVolume       =    {  39, 75, 6 };
	struct parameter touchFilter       =    {  46, 76, 6 };
	struct parameter touchRes         	=    {  53, 77, 6 };
	struct parameter touchPwm        	=    {  41, 78, 6 };
	struct parameter touchPitch        =    {  48, 79, 6 };
	struct parameter touchLfo         	=    {  55, 80, 6 };
	// key impact on  parameters
	struct parameter keyVolume       	=    {  39, 84, 6 };
	struct parameter keyFilter       	=    {  46, 85, 6 };
	struct parameter keyRes         	=    {  53, 86, 6 };
	struct parameter keyPwm        	=    {  41, 87, 6 };
	struct parameter keyPitch        	=    {  48, 88, 6 };
	struct parameter keyLfo         	=    {  55, 89, 6 };
	
	// source mix parameters 
	// sin
	struct parameter source1Level = {7,1,0}; struct parameter source1Octave  = {2,2,0}; struct parameter source1Tune      = {3,3,0}; struct parameter source1Attack      = {4,4,1}; 
	struct parameter source1Decay = {6,5,1}; struct parameter source1Sustain = {5,6,1}; struct parameter source1GlideTime = {4,7,2}; struct parameter source1GlideOffset = {6,8,2};
	// tri
	struct parameter source2Level = {14,9,0};  struct parameter source2Octave  = {9,10,0};  struct parameter source2Tune      = {10,11,0}; struct parameter source2Attack      = {11,12,1}; 
	struct parameter source2Decay = {13,13,1}; struct parameter source2Sustain = {12,14,1}; struct parameter source2GlideTime = {11,15,2}; struct parameter source2GlideOffset = {13,16,2};
	//saw
	struct parameter source3Level = {21,17,0}; struct parameter source3Octave  = {16,18,0}; struct parameter source3Tune      = {17,19,0}; struct parameter source3Attack      = {18,20,1}; 
	struct parameter source3Decay = {20,21,1}; struct parameter source3Sustain = {19,22,1}; struct parameter source3GlideTime = {18,23,2}; struct parameter source3GlideOffset = {20,24,2};
	//sqr
	struct parameter source4Level = {28,25,0}; struct parameter source4Octave  = {23,26,0}; struct parameter source4Tune      = {24,27,0}; struct parameter source4Attack      = {25,28,1}; 
	struct parameter source4Decay = {27,29,1}; struct parameter source4Sustain = {26,30,1}; struct parameter source4GlideTime = {25,31,2}; struct parameter source4GlideOffset = {27,32,2};
	// noise
	struct parameter source5Level = {35,33,0}; /*no octave and tune for the noise source */ struct parameter source5Attack      = {32,36,1}; 
	struct parameter source5Decay = {34,37,1}; struct parameter source5Sustain = {33,38,1}; struct parameter source5GlideTime = {32,39,2}; struct parameter source5GlideOffset = {34,40,2};
	
	/* end
	---------------------------------------------------------------------------------------------------------------------*/
	struct parameter MEMORY_STOPMARK = {0,0,0}; // this is only to get the last memory adress later param iteration
};
// Declare a pointer to array of struct
const parameters *PARAMS = NULL;]]></code.declaration>
         <code.init><![CDATA[// init all parameters
static const parameters _PARAMS;
// Set pointer to struct instance
PARAMS = &_PARAMS;]]></code.init>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="26c8dfb7-b26e-4e9f-95ff-4787bf7fa718" name="MidiControl Processor" x="84" y="14">
      <params/>
      <attribs>
         <objref attributeName="interfaceControlTable" obj="interfaceControl"/>
         <objref attributeName="synthControlTable" obj="synthControl"/>
         <objref attributeName="midiBufferTable" obj="midiBuffer"/>
         <objref attributeName="ref" obj="globals"/>
      </attribs>
      <object id="patch/object" uuid="26c8dfb7-b26e-4e9f-95ff-4787bf7fa718">
         <inlets/>
         <outlets/>
         <displays>
            <int32.label name="ccCount"/>
         </displays>
         <params/>
         <attribs>
            <objref name="interfaceControlTable"/>
            <objref name="synthControlTable"/>
            <objref name="midiBufferTable"/>
            <objref name="ref"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int8_t ntrig;
int8_t ccCount;
int8_t lastCC;
int8_t midiChannelCC = 15;

// save to sd card wait
uint8_t saveToggle = 0;

// interface control vars
uint8_t mode;
bool shiftMode = 0; //  source buttons function changes when shift mode is active
bool lastShiftMode = 0;
uint8_t paramBank = 0; // 0 = velocity impact on params, 1 = lfo impact on ..., 2 = env impact ..., 3 = touch impact ..., 4 = key impact
uint8_t lastParamBank = 0;
uint8_t copyIndex; 

int16_t waiting;
int8_t editIndex;
int8_t lastEditIndex;
int8_t editFaderValue;
int8_t lastEditFaderValue;
int8_t editDisplayState;
int8_t lastEditDisplayState;
int8_t buttonCombo;
int8_t lastButtonCombo;

// cc noteBankSelection
int8_t noteBankSelectButton[2] = {25,26};

int8_t ccMasterFader = 57;
int8_t indexMasterFader = 53;

// global Parameters are stored in an external object 
// it's name is defined in attr_ref of this object
// to iterate all the globally defined parameters we need to know the data structure 
// which is used in the external object 
// this is the structure it must bet the same the one defined in the globals object
struct parameter {
	uint8_t cc;
	uint8_t tIndex; // table index -> stores the index of the value in the synthControlTable 
	uint8_t type; // 0 = direct value editing, 1 = a message from this cc is a button press -> press = value 127 leave = value 0
};
struct parameter* paramPtr = NULL;]]></code.declaration>
         <code.init><![CDATA[ntrig = 0;
ccCount = 0; 
lastCC = 0;

// interfaceControl vars
mode = buttonCombo = lastButtonCombo = waiting = editIndex = editFaderValue = editDisplayState = lastEditIndex = lastEditFaderValue = lastEditDisplayState = 0;]]></code.init>
         <code.krate><![CDATA[mode = attr_interfaceControlTable.array[3];

// interface Control led on time
if (waiting > 0) { waiting--; if (waiting == 1) { editDisplayState = 0; } }
if (saveToggle) { saveToggle = 0; attr_synthControlTable.array[0] = 0; }
/* BOOT MODE 
-------------------------------------------------------------------------------------------------------- */
if (attr_interfaceControlTable.array[3] == 0) { // BOOT MODE
	attr_interfaceControlTable.array[3] = 1;
	LogTextMessage("WAIT MODE -> press 'send all' button. Axoloti needs to know the Fader positions...");
}

/* WAIT MODE 
-------------------------------------------------------------------------------------------------------- */
if (mode == 1) { // WAIT MODE
	// device is in WAIT MODE -> axoloti needs to know the all fader positions first it waits 
	// user must press send all button
	// all leds are blinking
	
	if (ntrig) {
		// check if send all button has been pressed
		if (ccCount >= 8) { 
			// as the whole bunch of cc mesages from send all button come in several packets depending on how many fit in one k-rate cycle
			// set a delay before changing MODE to DIFF MODE
			waiting = 500; // 100/3000 seconds
		} 
		ntrig = 0;
	}
	ccCount = 0;
	if (waiting == 1) {
		LogTextMessage("sendall cc message received");
		attr_interfaceControlTable.array[3] = 2; 
		LogTextMessage("DIFF MODE");
		attr_interfaceControlTable.array[2] = 1;
		ccCount = 0;	
	}
	
} else
/* DIFF MODE 
-------------------------------------------------------------------------------------------------------- */
if (mode == 2) {
	if (ntrig) {
		// check if send all button has been pressed
		if (ccCount >= 8) { 
			// as the whole bunch of cc mesages from send all button come in several packets depending on how many fit in one k-rate cycle
			// set a delay before changing MODE to DIFF MODE
			waiting = 3000; // 100/3000 seconds
			ccCount = 0;
		}  else if (waiting == 0) {
			editDisplayState = 1; 
		}
		ntrig = 0;
	}
	if (waiting == 1) {
		LogTextMessage("sendall cc message received");
		// save all direct control knobs/faders
		paramPtr = (parameter*)(&attr_ref.PARAMS->MEMORY_STARTMARK); paramPtr++; // set paramPtr to first param
		while (paramPtr < (parameter*)&attr_ref.PARAMS->MEMORY_STOPMARK) {
			if (paramPtr->type == 0) {
				attr_synthControlTable.array[paramPtr->tIndex] = attr_midiBufferTable.array[paramPtr->tIndex];
			}
			paramPtr++;
		}
		LogTextMessage("Copied all fader positions to synthControlTable");
		attr_interfaceControlTable.array[3] = 3; // set NORMAL MODE
		LogTextMessage("NORMAL MODE");
		editDisplayState = 1;
		ccCount = 0;	
	}
	
	// set midiBufferTable with values
	if (editIndex != lastEditIndex)  { attr_interfaceControlTable.array[0] = lastEditIndex = editIndex;}
	if (editFaderValue != lastEditFaderValue)  { attr_interfaceControlTable.array[1] = lastEditFaderValue = editFaderValue; }
	if (editDisplayState != lastEditDisplayState)  { attr_interfaceControlTable.array[2] = lastEditDisplayState = editDisplayState; editDisplayState = 0; }
} else
/* NORMAL MODE 
-------------------------------------------------------------------------------------------------------- */
if (mode == 3) {
	if (ntrig) {
		// check if send all button has been pressed
		if (ccCount >= 8) {
			waiting = 500;
			ccCount = 0;
		} else if (waiting == 0) { // other midi input
			// a fader move directly sets the corresponding value in synthControlTable 
			attr_synthControlTable.array[editIndex] = attr_midiBufferTable.array[editIndex];
			//attr_synthControlTable.array[0] = 127; // save gate on -> sd card
			//saveToggle = 1; // saving while playback creates noise... 
			//waiting = 2;
		}
		ntrig = 0;
	}
	if (waiting == 1) {
		LogTextMessage("Normal mode received sendall cc -> save to sd card");
		attr_synthControlTable.array[0] = 127; // save gate on -> sd cards
		saveToggle = 1;
	}
	if (editIndex != lastEditIndex)  { attr_interfaceControlTable.array[0] = lastEditIndex = editIndex;}
	if (editFaderValue != lastEditFaderValue)  { attr_interfaceControlTable.array[1] = lastEditFaderValue = editFaderValue; }
	if (editDisplayState != lastEditDisplayState)  { attr_interfaceControlTable.array[2] = lastEditDisplayState = editDisplayState;}
	if (buttonCombo != lastButtonCombo) { attr_interfaceControlTable.array[4] = lastButtonCombo = buttonCombo; }
	if (shiftMode != lastShiftMode) { attr_interfaceControlTable.array[5] = lastShiftMode = shiftMode; }
	if (paramBank != lastParamBank) { attr_interfaceControlTable.array[6] = lastParamBank = paramBank; }
}]]></code.krate>
         <code.midihandler><![CDATA[// Process BankSelect Button Input
if ((status == attr_midichannel + MIDI_NOTE_ON)&&(data1 == noteBankSelectButton[0])) { shiftMode = !shiftMode; }
if ((status == attr_midichannel + MIDI_NOTE_ON)&&(data1 == noteBankSelectButton[1])) { paramBank++; if (paramBank > 4) { paramBank = 0; } }

// Process midi CC messages
if (status == midiChannelCC + MIDI_CONTROL_CHANGE) { 
	if (data1 == lastCC) { ccCount = 0; } else { lastCC = data1; ccCount++; } // count Number of ccMessages

	// midi all notes off messsage
	if (data1 == MIDI_C_ALL_NOTES_OFF) {
   		lastEditIndex = lastEditFaderValue = lastEditDisplayState = editIndex = editFaderValue = editDisplayState = 0;
   	// master fader cc
	} else if (data1 == ccMasterFader) { 
		if (buttonCombo) {
			editFaderValue = attr_midiBufferTable.array[indexMasterFader] = data2; 
		} else {
			editIndex = indexMasterFader; editFaderValue = attr_midiBufferTable.array[editIndex] = data2; ntrig = 1;
		}
	// any other cc messages
	} else {
		// send them thru to the din output
		 //MidiSend2((midi_device_t) MIDI_DEVICE_DIN,status,data1);
		 // if received from midi channel 1
		 if (status == 0) { MidiSend3(MIDI_DEVICE_DIN,0,status,data1,data2); } // MidiSend3 needs 3 bytes }
		// check which parameter is changed iterate through the parameters
		paramPtr = (parameter*)(&attr_ref.PARAMS->MEMORY_STARTMARK); paramPtr++; // set paramPtr to first param
		while (paramPtr < (parameter*)&attr_ref.PARAMS->MEMORY_STOPMARK) {
			if (paramPtr->cc == data1) {
				// direct parameters
				//if (shiftMode) { LogTextMessage("ShiftMode Button Input cc:%3D,index:%3D,type:%3D", paramPtr->cc, paramPtr->tIndex, paramPtr->type); }// else { LogTextMessage("Normal Button Input cc:%3D,index:%3D,type:%3D", paramPtr->cc, paramPtr->tIndex, paramPtr->type); }
				if (paramPtr->type == 0) { editIndex = paramPtr->tIndex; editFaderValue = attr_midiBufferTable.array[editIndex] = data2; ntrig = 1;} 
				// button combo
				//else if (paramPtr->type == 1 || paramPtr->type == 2) { // buttoncombos 
				else if (paramPtr->type > 0) { // buttoncombos 
					if (
						(shiftMode && paramPtr->type == 2) || // shiftMode button combo
						(!shiftMode && paramPtr->type == 1) || // normal button combo
						(!shiftMode && paramPtr->type > 2 && attr_interfaceControlTable.array[6] == (paramPtr->type - 3)) // example paramPtr->type 3 is executed only when paramBank == 0 // paramBank is stored in interfaceC...Table[6]
						) { // switch between normal or shiftMode function depending on shiftMode status
						// button down
						if (data2>0) { 
							if (buttonCombo) { // another button is pressed already
								// copy the data from the first button to the second 	
								attr_synthControlTable.array[paramPtr->tIndex] = attr_synthControlTable.array[copyIndex];
								buttonCombo = editIndex = editFaderValue = 0; 
								editDisplayState = 0;// waiting = 1;
							} else { 
								buttonCombo = 1;
								editIndex = paramPtr->tIndex;
								copyIndex = editIndex;
								// value stored for this parameter 
								editFaderValue = attr_midiBufferTable.array[indexMasterFader];
								editDisplayState = 1;
							}
						// button up
						} else { buttonCombo = editIndex = editFaderValue = editDisplayState = 0; }
						break;
					}
				}
				
			}
			paramPtr++; 
		}
	}
}]]></code.midihandler>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="ad1fa006-87d4-4d64-8ef1-49dbe7205c1b" name="MidiMix Display Controller" x="322" y="14">
      <params/>
      <attribs>
         <combo attributeName="device" selection="usb host port 1"/>
         <spinner attributeName="channel" value="15"/>
         <spinner attributeName="ccControlFader" value="57"/>
         <objref attributeName="interfaceControlTable" obj="interfaceControl"/>
         <objref attributeName="synthControlTable" obj="synthControl"/>
         <objref attributeName="midiBufferTable" obj="midiBuffer"/>
         <objref attributeName="ref" obj="globals"/>
      </attribs>
      <object id="patch/object" uuid="ad1fa006-87d4-4d64-8ef1-49dbe7205c1b">
         <sDescription>Midi note output</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>midi_out.axh</helpPatch>
         <inlets/>
         <outlets/>
         <displays>
            <int32.label name="d1"/>
         </displays>
         <params/>
         <attribs>
            <combo name="device">
               <MenuEntries>
                  <string>din</string>
                  <string>usb host port 1</string>
                  <string>usb host port 2</string>
                  <string>usb host port 3</string>
                  <string>usb host port 4</string>
                  <string>internal port 1</string>
                  <string>internal port 2</string>
                  <string>usb device port 1</string>
               </MenuEntries>
               <CEntries>
                  <string>MIDI_DEVICE_DIN, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 1</string>
                  <string>MIDI_DEVICE_USB_HOST, 2</string>
                  <string>MIDI_DEVICE_USB_HOST, 3</string>
                  <string>MIDI_DEVICE_USB_HOST, 4</string>
                  <string>MIDI_DEVICE_INTERNAL, 1</string>
                  <string>MIDI_DEVICE_INTERNAL, 2</string>
                  <string>MIDI_DEVICE_USB_DEVICE, 1</string>
               </CEntries>
            </combo>
            <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
            <spinner name="ccControlFader" MinValue="0" MaxValue="127" DefaultValue="0"/>
            <objref name="interfaceControlTable"/>
            <objref name="synthControlTable"/>
            <objref name="midiBufferTable"/>
            <objref name="ref"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[// The following code is used to control the led display of an Akai Midimix midi controller.
// The display depends on 4 values stored in a table called interfaceControlTable 
// interfaceControlTable[0] contains the index the value currently edited has in the synthControlTable which stores all user controlled Data.
// interfaceControlTable[1] contains the value of the fader used to edit the value 
// interfaceControlTable[2] contains the displayFlag which defines wether display data should be processed or not
// interfaceControlTable[3] contains the general mode (you could also say STATE) of the program 
// interfaceControlTable[4] contains 1 if in buttonCombo mode to match master fader with stored value
// interfaceControlTable[5] contains if Program is in shiftMode 

uint8_t ntrig;
uint16_t waiting;
int8_t midiChannelCC = 1;
uint8_t saveToggle;

// input from interface table
uint8_t index;
uint8_t faderValue;
uint8_t displayState;
uint8_t lastDisplayState;
uint8_t buttonCombo;
uint8_t lastButtonCombo;
bool shiftMode;
bool lastShiftMode;
int8_t paramBank;
int8_t lastParamBank;

uint8_t mode = 0;
uint8_t lastMode = 0;


// MODES -> DiFF MODE // temporary variables
uint8_t diffCC[4];
uint8_t diff[4];

// Button Combinations
uint8_t targetValue;
uint8_t lastAdjustValue;
uint8_t lastTargetValue;
uint8_t rasteredAdjustValue;
uint8_t rasteredTargetValue;
uint8_t lastRasteredTop;
uint8_t lastRasteredBottom;
uint8_t matchedPos;

// the midi controllers leds can be controlled by sending full velocity midi note on messages to the controller.
// these are the midi notes for the akai midimix controller
uint8_t leds[2][8] = {{1, 4, 7, 10, 13, 16, 19, 22}, {3,6,9,12,15,18,21,24}};
uint8_t ledsBankSelect[2] = {25,26};
// save led states

bool ledState[2][8] = {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}}; // State of all mute and rec button leds of the Akai midimix // value 1 = on, value 2 = blink
bool lastLedState[2][8] = {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}};
bool ledStateBankSelect[2] = {0,0}; // State of the Bank Left and Bank Right button leds
bool lastLedStateBankSelect[2] = {0,0};
bool ledBlinkState[2][8] = {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}};
bool ledBlinkStateBankSelect[2] = {0,0};
int16_t blinkWait; 
bool ledUpdateFlag = false;

int8_t mapCCtoIndex[64]; //map SynthControl indexes (mapCCtoIndex[cc] => synthControlIndex)

/* FUNCTIONS
-------------------------------------------------------------------------------------------------------- */
// Scale input to range out_min > out_max
// Input range hard-coded to 0 > 134217727 (27 bits) for frac32.pos inlets / frac32.u.map params
// WONT'T Work with bipolar input!
__attribute__ ( ( always_inline ) ) __STATIC_INLINE int32_t range_pos(int32_t val, int32_t out_max) {
	return (int32_t)(float)val * (float)out_max / 0x07FFFFFF;
};

__attribute__ ( ( always_inline ) ) __INLINE void showParamBank(void) {
	// turn last paramBank led off
	if (lastParamBank < 3) { ledState[0][5+lastParamBank] = 0;	} else { ledState[1][2+lastParamBank] = 0; }
	// turn paramBank led on 
	if (paramBank < 3) { ledState[0][5+paramBank] = 1; } else { ledState[1][2+paramBank] = 1; }
	ledUpdateFlag = true;
}
__attribute__ ( ( always_inline ) ) __INLINE void ledUpdate(void) {
	if (ledUpdateFlag) {
		ledUpdateFlag = false;
		for (int i = 0; i < 8; i++) {
			// Setup the bank select button states
			if (i < 2) {
				if (ledStateBankSelect[i] != lastLedStateBankSelect[i]) {
					//LogTextMessage("Send Midi for BankSelectled[%3D]", i);
					lastLedStateBankSelect[i] = ledStateBankSelect[i];
					if (ledStateBankSelect[i]) {
						MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (midiChannelCC-1),ledsBankSelect[i],127); MidiSend3((midi_device_t) attr_device, MIDI_NOTE_OFF + (midiChannelCC-1),ledsBankSelect[i],0);		
					} else {
						MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (midiChannelCC-1),ledsBankSelect[i],0); MidiSend3((midi_device_t) attr_device, MIDI_NOTE_OFF + (midiChannelCC-1),ledsBankSelect[i],0);		
					}
				}
			}
			// Setup the Mute/Solo Button Leds
			if (ledState[0][i] != lastLedState[0][i]) {
				//LogTextMessage("Send Midi for led [0][%3D]", i);
				lastLedState[0][i] = ledState[0][i];
				if (ledState[0][i]) {
					MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (midiChannelCC-1),leds[0][i],127); MidiSend3((midi_device_t) attr_device, MIDI_NOTE_OFF + (midiChannelCC-1),leds[0][i],0);
				} else {
					MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (midiChannelCC-1),leds[0][i],0); MidiSend3((midi_device_t) attr_device, MIDI_NOTE_OFF + (midiChannelCC-1),leds[0][i],0);
				}
			}
			// Setup the Rec Leds
			if (ledState[1][i] != lastLedState[1][i]) {
				//LogTextMessage("Send Midi for led [1][%3D]", i);
				lastLedState[1][i] = ledState[1][i];
				if (ledState[1][i]) {
					MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (midiChannelCC-1),leds[1][i],127); MidiSend3((midi_device_t) attr_device, MIDI_NOTE_OFF + (midiChannelCC-1),leds[1][i],0);
				} else {
					MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (midiChannelCC-1),leds[1][i],0); MidiSend3((midi_device_t) attr_device, MIDI_NOTE_OFF + (midiChannelCC-1),leds[1][i],0);
				}
			}
		}
	}
}
__attribute__ ( ( always_inline ) ) __INLINE void ledsTurnAllOff(void) {
	// turn all leds off
	for (int i = 0; i < 8; i++) {
		ledBlinkState[0][i] = ledBlinkState[1][i] = ledState[0][i] = ledState[1][i] = 0;
	}	
	ledUpdateFlag = true;
};
__attribute__ ( ( always_inline ) ) __INLINE void ledsTurnAllOn(void) {
	for (int i = 0; i < 8; i++) {
		ledState[0][i] = ledState[1][i] = 127;
	}
	ledUpdateFlag = true;
};

// globals
// this is the structure it must bet the same the one defined in the globals object
struct parameter {
	uint8_t cc;
	uint8_t tIndex; // table index -> stores the index of the value in the synthControlTable 
	uint8_t type; // 0 = direct value editing, 1 = a message from this cc is a button press -> press = value 127 leave = value 0
};
struct parameter* paramPtr = NULL;]]></code.declaration>
         <code.init><![CDATA[ntrig=0;
waiting = 0;
saveToggle = 0;

// table communication
mode = buttonCombo = lastMode = index = faderValue = displayState = lastDisplayState= 0;

lastAdjustValue = 0;
lastTargetValue = 0;
rasteredAdjustValue = 0;
rasteredTargetValue = 0;
matchedPos = 0; // stores if the fader position matched the value position already
// display value
lastRasteredTop = lastRasteredBottom = 0;

// turn all leds off
ledsTurnAllOff();

// map synthControlTable indexes to coressponding midi cc number [cc] => synthControlIndex
// iterate through the global parameters and create the array
paramPtr = (parameter*)(&attr_ref.PARAMS->MEMORY_STARTMARK); paramPtr++; // set paramPtr to first param
while (paramPtr < (parameter*)&attr_ref.PARAMS->MEMORY_STOPMARK) {
	mapCCtoIndex[paramPtr->cc] = paramPtr->tIndex;
	paramPtr++;
}]]></code.init>
         <code.krate><![CDATA[ledUpdate(); // updates leds if flag is set

index = attr_interfaceControlTable.array[0];
faderValue = attr_interfaceControlTable.array[1];
displayState = attr_interfaceControlTable.array[2];
mode = attr_interfaceControlTable.array[3];
buttonCombo = attr_interfaceControlTable.array[4];
shiftMode = attr_interfaceControlTable.array[5];
paramBank = attr_interfaceControlTable.array[6];

if (shiftMode != lastShiftMode) { 
	ledStateBankSelect[0] = lastShiftMode = shiftMode;
	ledUpdateFlag = true;
}
// show which paramBank is selected ( 0 = vel, 1 = lfo, 2 = env, 3 = touch, 4 = key )
if (paramBank != lastParamBank) { 
	showParamBank();
	lastParamBank = paramBank;
}


if (waiting > 0) { waiting--; }
if (blinkWait > 0) { 
	blinkWait--; 
} else { 
	/*for (int i = 0; i < 8; i++) {
		if (ledBlinkState[0][i]) { ledState[0][i] = !ledState[0][i]; ledUpdateFlag = true; }
		if (ledBlinkState[1][i]) { ledState[1][i] = !ledState[1][i]; ledUpdateFlag = true; }
	}*/
	if (ledBlinkStateBankSelect[0]) { ledStateBankSelect[0] = !ledStateBankSelect[0]; ledUpdateFlag = true; }
	if (ledBlinkStateBankSelect[1]) { ledStateBankSelect[1] = !ledStateBankSelect[1]; ledUpdateFlag = true; }
	blinkWait = 200; 
}
if (saveToggle) { saveToggle = 0; attr_synthControlTable.array[0] = 0; LogTextMessage("save to sdcard"); }

if (mode != lastMode) {
	lastMode = mode;
	ledsTurnAllOff();
	ledStateBankSelect[0] = ledStateBankSelect[1] = 0;
	if (mode == 2) { // when entering diff mode
		ledStateBankSelect[0] = 1;
	} else if (mode == 3) {
		ledStateBankSelect[0] = 0;
		
	}
	ledUpdateFlag = true;

	if (mode == 3) { showParamBank(); }
}

/* WAIT MODE 
-------------------------------------------------------------------------------------------------------- */
if (mode == 1 ) { // blink leds
	// after boot up 
	// wait for send all message from midimix 
	// flash all leds until this mode is changed
	if (waiting == 0) {
		waiting = 1000;
		ledsTurnAllOn();
	} else if (waiting == 500) {
		ledsTurnAllOff();
	}
} else 
/* DIFF MODE 
-------------------------------------------------------------------------------------------------------- */
if (mode == 2 ) { 
	// show which fader positions have not changed in the power off time of the controller
	// show Mute led of a column to show either the first or/and the second fader in that column have changed their value since last power on state 
	int8_t diff1; // difference between midiBuffer and synthControl for first knob
	int8_t diff2; // for second knob

	if (displayState != lastDisplayState) { // if display changed 
		lastDisplayState = displayState;
		if (displayState == 1) { // rising edge of displayState when it was set the first time
			displayState = 0;
			for (uint8_t i = 0; i < 8; i++) {	
				diffCC[0] = 1+(i*7); // topmost knob
				diffCC[1] = 2+(i*7); // second knob
				diffCC[2] = 3+(i*7); // third knob
				diffCC[3] = 7+(i*7); // slider on bottom
				
				for (uint8_t x = 0; x < 4; x++) {
					diff[x] = abs(attr_midiBufferTable.array[mapCCtoIndex[diffCC[x]]] - attr_synthControlTable.array[mapCCtoIndex[diffCC[x]]]);
					if (index == mapCCtoIndex[diffCC[x]]) {
						if (diff[x] < 3) { //  fader value matches the stored value
							if (waiting == 0) {
								ledStateBankSelect[1] = 1; ledUpdateFlag = true; 
							}
							waiting = 3000;
						} else {
							waiting = 1;
						}
					}
				}
				if (diff[0] < 3 && diff[1] < 3) { // if both faders match the stored Values -> turn off diff status led (mute for the two top faders, rec for the two bottom faders)
					if (ledState[0][i] != 0) {
						ledState[0][i] = 0; ledUpdateFlag = true;
					}
						
				} else {
					if (ledState[0][i] != 127) {
						ledState[0][i] = 1; ledUpdateFlag = true;
					}
				}
				if (diff[2] < 3 && diff[3] < 3) { // if both faders match the stored Values -> turn off diff status led (mute for the two top faders, rec for the two bottom faders)
					if (ledState[1][i] != 0) {
						ledState[1][i] = 0; ledUpdateFlag = true;
					}
				} else {
					if (ledState[1][i] != 127) {
						ledState[1][i] = 127; ledUpdateFlag = true;
					}
				}
			}
		}
	}
	if (waiting == 1) { // turn match highlight led off (ledBankLeft)
		ledStateBankSelect[1] = 0; ledUpdateFlag = true; 
	}
} else 
/* NORMAL MODE 
-------------------------------------------------------------------------------------------------------- */
if (mode == 3) { 
	if (buttonCombo > 0 || lastButtonCombo > 0) {
		lastButtonCombo = buttonCombo;
		
		targetValue = attr_synthControlTable.array[index];
		// show stored value of this 
		if (displayState>0) {
			lastDisplayState = displayState;
			
			// BOTTOM ROW -> display target value
			if (targetValue != lastTargetValue) {
				lastTargetValue = targetValue;
				rasteredTargetValue = range_pos(__USAT((lastTargetValue << (27 - 7))+4, 27), 9); // lastTargetValue << (27 - 7) convert 8bit to 32bit
				// only display data if rasteredValue changed 
				if (rasteredTargetValue != lastRasteredBottom) { 
					lastRasteredBottom = rasteredTargetValue;					
					//LogTextMessage("display bottom row");
					for (int i = 0; i < 8; i++) {
						if (i >= rasteredTargetValue) { // turn led off
							ledState[1][i] = 0; 
						} else { // turn led on
							ledState[1][i] = 1;
						}
						ledUpdateFlag = true;
					}
					
				}
			}
			
			// TOP ROW -> display fader Value 
			if (faderValue != lastAdjustValue) {
	  			lastAdjustValue = faderValue;
				if (abs(faderValue - targetValue) == 0) { 
					if (matchedPos == 0) { // first hit of the target value
						ledStateBankSelect[1] = 1; ledUpdateFlag = true; 
						waiting = 1000;	
						
					}
					matchedPos = 1; 
				}
				if (matchedPos) {
					if (faderValue == 64) {
						//LogTextMessage("The MasterFader hits center position.");
						ledBlinkStateBankSelect[1] = 1; // blink state
					} else {
						if (ledBlinkStateBankSelect[1]) { ledStateBankSelect[1] = ledBlinkStateBankSelect[1] = 0; ledUpdateFlag = true; } // unset blinking
						if (faderValue % 16 == 0) {
							ledStateBankSelect[1] = 1;  // led on 
							ledUpdateFlag = true; 
						} else {
							waiting = 1; 
						}
					}
					attr_synthControlTable.array[index] = attr_midiBufferTable.array[index] = faderValue;
					//attr_synthControlTable.array[0] = 1; // save to sd
					//saveToggle = 1;
				}
			  	rasteredAdjustValue = range_pos(__USAT((lastAdjustValue << (27 - 7))+8, 27), 9); // lastAdjustValue << (27 - 7) convert 8bit to 32bit
			  	disp_d1 = rasteredAdjustValue;
			  	// only display data if rasteredValue changed 
				if (rasteredAdjustValue != lastRasteredTop) { 
					lastRasteredTop = rasteredAdjustValue;
					//LogTextMessage("display top row");
					for (int i = 0; i < 8; i++) {
						if (i >= rasteredAdjustValue) { // turn led off
							ledState[0][i] = 0;
						} else { // turn led on
							ledState[0][i] = 1;							
						}
						ledUpdateFlag = true;						
					}
				}
			}
			
		} else if (displayState == 0 && lastDisplayState>0) { // after a button combo
			lastDisplayState = displayState;
			ledBlinkStateBankSelect[1] = 0; waiting = 1; // stop blinking, turn off led that was blinking
			LogTextMessage("stop blinking");
			ledsTurnAllOff();
			showParamBank();
			// reset lastAdjustValue so it reloads in the future
			lastRasteredTop = lastRasteredBottom = lastAdjustValue = lastTargetValue = matchedPos = 0;
		}
	}
	if (waiting == 1) {
		ledStateBankSelect[1] = 0; ledUpdateFlag = true; 
	}
}]]></code.krate>
      </object>
   </patchobj>
   <obj type="table/alloc 8b" uuid="9a8785a40e0aebb9cc22af09b0a7cf5f91ad2c64" name="interfaceControl" x="784" y="14">
      <params/>
      <attribs>
         <combo attributeName="size" selection="8"/>
         <text attributeName="init">
            <sText><![CDATA[int i;
/*for(i=0;i<LENGTH;i++)
	array[i]=0;*/
//array[3] = 1;]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="table/alloc 8b" uuid="9a8785a40e0aebb9cc22af09b0a7cf5f91ad2c64" name="midiBuffer" x="868" y="14">
      <params/>
      <attribs>
         <combo attributeName="size" selection="128"/>
         <text attributeName="init">
            <sText><![CDATA[/*int i;
for(i=0;i<=LENGTH;i++) {
	//array[i] = 127;
}
*/]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="table/alloc 8b" uuid="9a8785a40e0aebb9cc22af09b0a7cf5f91ad2c64" name="synthControl" x="952" y="14">
      <params/>
      <attribs>
         <combo attributeName="size" selection="128"/>
         <text attributeName="init">
            <sText><![CDATA[/*int i;
for(i=100;i<=LENGTH;i++) {
	array[i]=0;
	//array[i] = 127;
}
*/]]></sText>
         </text>
      </attribs>
   </obj>
   <comment type="patch/comment" x="1036" y="28" text="[0] =&gt;  save synthControlTable"/>
   <obj type="tb/midi/utils/midithru" uuid="b3868bd5-625c-4482-9948-a34e59fe2a21" name="midithru_1" x="644" y="84">
      <params/>
      <attribs>
         <combo attributeName="input" selection="usb device port 1"/>
         <combo attributeName="output" selection="din"/>
         <combo attributeName="led" selection="on"/>
      </attribs>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_1" x="1120" y="84">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="f52f9bd8-803e-4712-875a-d2d5a01e0368" name="SyncPulse_1" x="1400" y="84">
      <params>
         <frac32.u.map name="length" value="27.5"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="f52f9bd8-803e-4712-875a-d2d5a01e0368">
         <sDescription>Generates a single pulse after a rising edge on trigger input.
The pulse-length depends on the time in-between triggers.
The length-control sets the amount of the time in-between triggers that the pulse will be high.</sDescription>
         <author>Remco van der Most</author>
         <license>BSD</license>
         <helpPatch>pulselength.axh</helpPatch>
         <inlets>
            <bool32.rising name="trig" description="trigger"/>
         </inlets>
         <outlets>
            <bool32 name="out" description="pulse output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map name="length" noLabel="true"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[uint32_t val;
int ntrig;
uint32_t timer;]]></code.declaration>
         <code.init><![CDATA[val = 0;
ntrig = 0;]]></code.init>
         <code.krate><![CDATA[val+=1;
if ((inlet_trig > 0) && !ntrig) {
	ntrig = 1;
timer=val;
val=0;
}
else if (!(inlet_trig > 0)){ntrig = 0;}
outlet_out=(val<(___SMMUL(param_length<<3,timer<<2)))||(val<1);]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="8d87292c-1f5a-44d2-8ab4-dd59bc2fc1b5" name="voicevariant" x="756" y="98">
      <params/>
      <attribs>
         <spinner attributeName="MIDIchannel" value="1"/>
      </attribs>
      <object id="patch/object" uuid="8d87292c-1f5a-44d2-8ab4-dd59bc2fc1b5">
         <sDescription>Allocate a Midi nots to voice variant</sDescription>
         <author>Flub</author>
         <inlets/>
         <outlets>
            <int32 name="allocatedVoice"/>
            <int32 name="midichannel"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <spinner name="MIDIchannel" MinValue="1" MaxValue="16" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int8_t channels[8];
int8_t voiceVariant;]]></code.declaration>
         <code.init><![CDATA[voiceVariant = 0;
for (int8_t i=0;i<8;i++) {
	channels[i] = 0;
}]]></code.init>
         <code.krate><![CDATA[outlet_allocatedVoice = voiceVariant;]]></code.krate>
         <code.midihandler><![CDATA[int channel = (status & 0xf) + 1;
int cmd = (status & 0x70) >> 4;

if ((channel!=attr_MIDIchannel && attr_MIDIchannel>0)) {
	return;	
}

// some midi devices send note on with velocity 0 instead of note off
if (cmd==1 && data2==0) {
	cmd = 0;
}

if (cmd==1 ) { // note on
	//LogTextMessage("note on");
	for (int8_t i=0;i<8;i++) {
		if (channels[i] == 0) {
			channels[i] = data1;
			voiceVariant = i;
			if (voiceVariant >= 3 && voiceVariant < 6) {
				voiceVariant = voiceVariant - 3;
			} else if (voiceVariant >= 6) {
				voiceVariant = voiceVariant - 6;
			}
			//LogTextMessage("voiceVariant = %3D", voiceVariant);
			break;
		}
	}
}
else if (cmd==0) { // note off
	//LogTextMessage("note off");
	for (int8_t i=0;i<8;i++) {
		if (channels[i] == data1) {
			channels[i] = 0;
			break;
		}
	}
}
if ((cmd == 3)&&(data1 == 123)) { // all notes off message
	for (int8_t i=0;i<8;i++) {
		channels[i] = 0;
	}
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_1" x="896" y="98">
      <params/>
      <attribs/>
   </obj>
   <patcher type="patch/patcher" uuid="013b0240-695c-4e16-b8bd-141944f1a09e" name="patcher_1" x="952" y="98">
      <params>
         <frac32.u.map name="PITCH LFO" value="0.0"/>
         <frac32.u.map name="VOLUME" value="63.0"/>
         <frac32.s.map name="TREMOLO FREQ" value="-40.0"/>
         <frac32.u.map name="TREMOLO LEVEL" value="0.0"/>
         <frac32.u.map name="VOLUME TOUCH" value="3.5"/>
         <frac32.u.map name="VEL ATTACK" value="0.0"/>
         <frac32.u.map name="VEL RELEASE" value="17.5"/>
         <frac32.u.map name="FILTER LOGIC:postFilterGain" value="10.0"/>
         <frac32.u.map name="FILTER LOGIC:preFilterGain" value="10.0"/>
         <frac32.u.map name="FILTER LOGIC:obj_1:Formant" value="0.0"/>
         <frac32.u.map name="FILTER LOGIC:obj_1:Master gain" value="64.0"/>
         <frac32.u.map name="CUTOFF VEL" value="46.0"/>
         <frac32.u.map name="CUTOFF LFO AMOUNT" value="0.0"/>
         <frac32.u.map name="LFO LEVEL" value="64.0"/>
         <frac32.s.map name="ahd_1:a" value="38.0"/>
         <frac32.s.map name="ahd_1:d" value="64.0"/>
         <frac32.u.map name="LFO LEVEL TOUCH" value="0.0"/>
      </params>
      <attribs>
         <combo attributeName="poly" selection="3"/>
      </attribs>
      <subpatch appVersion="1.0.12">
         <obj type="patch/inlet i" uuid="f11927f00c59219df0c50f73056aa19f125540b7" name="inlet_1" x="224" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send i" uuid="452e1d7a88de691f954015e6fec2f6994e1b35fc" name="S_VOICE_SELECT" x="406" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="PITCH LFO" x="546" y="0">
            <params>
               <frac32.u.map name="value" onParent="true" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_PITCH_LFO" x="616" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="LFO1 FREQ" x="840" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="mux/mux 3" uuid="9340a203d87e774443faa0d744b56e0967b23125" name="mux_1" x="924" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="TSG/math/map b" uuid="163aec3a-73a6-450a-86ff-2ae605359700" name="map_1" x="994" y="0">
            <params>
               <frac32.s.map name="a" value="-64.0"/>
               <frac32.s.map name="b" value="36.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_LFO_FREQ" x="1092" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv b" uuid="6ce86e0c667a0168b53a910eb891366e96b944d1" name="recv_3" x="1246" y="0">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_GATE"/>
            </attribs>
         </obj>
         <obj type="demux/demux 3" uuid="1d56896bf04a3aa5148abc88ac741df1d1b3e6f8" name="demux_1" x="1372" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="GATE 1" x="1470" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="logic/latch" uuid="2a50e4657301542464c6a97931847b5e8e0e6d2b" name="latch_1" x="322" y="14">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="LFO2 FREQ" x="840" y="42">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="GATE 2" x="1470" y="42">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv i" uuid="c57c3fb0d08bcb566403f4fb43426338bd37ce1f" name="recv_27" x="1106" y="56">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VOICE_SELECT"/>
            </attribs>
         </obj>
         <obj type="patch/recv b" uuid="6ce86e0c667a0168b53a910eb891366e96b944d1" name="recv_8" x="224" y="70">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_GATE"/>
            </attribs>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="VOLUME" x="546" y="84">
            <params>
               <frac32.u.map name="value" onParent="true" value="64.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VOLUME" x="616" y="84">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="LFO3 FREQ" x="840" y="84">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="GATE 3" x="1470" y="84">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_41" x="1148" y="154">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_LFO"/>
            </attribs>
         </obj>
         <obj type="math/div 64" uuid="da82c8ea54e956811f1d7264d921628e3301971e" name="div_1" x="1288" y="154">
            <params/>
            <attribs/>
         </obj>
         <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="TREMOLO FREQ" x="546" y="168">
            <params>
               <frac32.s.map name="value" onParent="true" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_TREMOLO_FREQ" x="630" y="168">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_25" x="994" y="182">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_NOTE"/>
            </attribs>
         </obj>
         <obj type="drj/math/sum3" uuid="93cb11244907aed86ae7d7f2274d118a23d46692" name="sum3_1" x="1372" y="182">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_PITCH" x="1484" y="210">
            <params/>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="d7b4704e-fc3d-440c-b661-492113285c93" name="velocity impact on params" x="14" y="224">
            <params/>
            <attribs>
               <objref attributeName="synthControlTable" obj="../synthControl"/>
               <objref attributeName="ref" obj="../globals"/>
            </attribs>
            <object id="patch/object" uuid="d7b4704e-fc3d-440c-b661-492113285c93">
               <inlets/>
               <outlets>
                  <frac32 name="velVolume"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <objref name="synthControlTable"/>
                  <objref name="ref"/>
               </attribs>
               <includes/>
               <code.krate><![CDATA[outlet_velVolume = attr_synthControlTable.array[attr_ref.PARAMS->velVolume.tIndex] << (27-7); // - (1<<26)<<1;;]]></code.krate>
            </object>
         </patchobj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VEL_VOLUME" x="210" y="224">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="LFO FREQ" x="322" y="224">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_LFO_FREQ_COARSE" x="406" y="224">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_42" x="1148" y="224">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_PITCH_LFO"/>
            </attribs>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_4" x="1302" y="224">
            <params/>
            <attribs/>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="TREMOLO LEVEL" x="546" y="252">
            <params>
               <frac32.u.map name="value" onParent="true" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_TREMOLO_LEVEL" x="630" y="252">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="attack" x="322" y="280">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_ATTACK" x="406" y="280">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_26" x="854" y="294">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_PULSEWIDTH"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_45" x="1148" y="308">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_TREMOLO"/>
            </attribs>
         </obj>
         <obj type="patch/recv b" uuid="6ce86e0c667a0168b53a910eb891366e96b944d1" name="recv_49" x="1708" y="308">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_GATE"/>
            </attribs>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="decay" x="322" y="322">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_DECAY" x="406" y="322">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/div 16" uuid="19cf8d3358046cb69c1139e51a3e1555742492e0" name="div_3" x="1344" y="336">
            <params/>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="d7b4704e-fc3d-440c-b661-492113285c93" name="envelope impact on params" x="14" y="350">
            <params/>
            <attribs>
               <objref attributeName="synthControlTable" obj="../synthControl"/>
               <objref attributeName="ref" obj="../globals"/>
            </attribs>
            <object id="patch/object" uuid="d7b4704e-fc3d-440c-b661-492113285c93">
               <inlets/>
               <outlets>
                  <frac32 name="envFilter"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <objref name="synthControlTable"/>
                  <objref name="ref"/>
               </attribs>
               <includes/>
               <code.krate><![CDATA[outlet_envFilter = attr_synthControlTable.array[attr_ref.PARAMS->envFilter.tIndex] << (27-7); // - (1<<26)<<1;;]]></code.krate>
            </object>
         </patchobj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="sustain" x="322" y="364">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_SUSTAIN" x="406" y="364">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_33" x="854" y="378">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_LFO"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_50" x="1708" y="378">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_VELOCITY"/>
            </attribs>
         </obj>
         <patcher type="patch/patcher" uuid="3670f7cd-85e5-49b9-b8a6-636c680b8d29" name="ADSR LOGIC_" x="1862" y="378">
            <params/>
            <attribs/>
            <subpatch appVersion="1.0.12">
               <obj type="patch/inlet b" uuid="3b0d3eacb5bb978cb05d1372aa2714d5a4790844" name="GATE" x="280" y="42">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send b" uuid="b428934ee3ee80efb18736216fd871d264e9b695" name="S_INT_GATE" x="364" y="42">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VELOCITY" x="280" y="84">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_VELOCITY" x="364" y="84">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_16" x="602" y="84">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_ATTACK"/>
                  </attribs>
               </obj>
               <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_2" x="728" y="84">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="A" x="280" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_ATTACK" x="364" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_4" x="728" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_1" x="854" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_2" x="924" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_20" x="602" y="154">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_VEL_ATTACK"/>
                  </attribs>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VEL A" x="280" y="168">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VEL_ATTACK" x="364" y="168">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_10" x="728" y="168">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_9" x="854" y="182">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="D" x="280" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_DECAY" x="364" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_21" x="602" y="224">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_INT_VELOCITY"/>
                  </attribs>
               </obj>
               <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_3" x="728" y="224">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="S" x="280" y="252">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_SUSTAIN" x="364" y="252">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="R" x="280" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_RELEASE" x="364" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv b" uuid="6ce86e0c667a0168b53a910eb891366e96b944d1" name="recv_1" x="602" y="294">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_INT_GATE"/>
                  </attribs>
               </obj>
               <obj type="patch/outlet f" uuid="d18a9a550bcaaebac94e25983bd0e27dbfd7233c" name="ENVELOPE" x="826" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="env/adsr m" uuid="98bd39fb828c392b28126d259cb5175e6f6ea34b" name="adsr_3" x="742" y="322">
                  <params>
                     <frac32.s.map name="a" value="0.0"/>
                     <frac32.s.map name="d" value="0.0"/>
                     <frac32.u.map name="s" value="0.0"/>
                     <frac32.s.map name="r" value="0.0"/>
                  </params>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VEL R" x="280" y="336">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VEL_RELEASE" x="364" y="336">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="DISP_ATTACK" x="840" y="350">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_4" x="602" y="364">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_DECAY"/>
                  </attribs>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_5" x="602" y="434">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_SUSTAIN"/>
                  </attribs>
               </obj>
               <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="DISP_RELASE" x="840" y="476">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_6" x="602" y="504">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_RELEASE"/>
                  </attribs>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_15" x="602" y="574">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_VEL_RELEASE"/>
                  </attribs>
               </obj>
               <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_1" x="882" y="574">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_1" x="742" y="588">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_8" x="868" y="630">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_13" x="602" y="644">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_INT_VELOCITY"/>
                  </attribs>
               </obj>
               <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_2" x="728" y="644">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/-" uuid="3280bb759e9fc189e134300e48dda7e903c9a110" name="-_1" x="938" y="658">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_6" x="812" y="700">
                  <params/>
                  <attribs/>
               </obj>
               <nets>
                  <net>
                     <source obj="recv_4" outlet="v"/>
                     <dest obj="adsr_3" inlet="d"/>
                  </net>
                  <net>
                     <source obj="recv_5" outlet="v"/>
                     <dest obj="adsr_3" inlet="s"/>
                  </net>
                  <net>
                     <source obj="recv_15" outlet="v"/>
                     <dest obj="*_6" inlet="a"/>
                  </net>
                  <net>
                     <source obj="recv_13" outlet="v"/>
                     <dest obj="inv_pos_2" inlet="in"/>
                  </net>
                  <net>
                     <source obj="recv_6" outlet="v"/>
                     <dest obj="bipolar2unipolar_1" inlet="i"/>
                  </net>
                  <net>
                     <source obj="bipolar2unipolar_1" outlet="o"/>
                     <dest obj="-_1" inlet="in1"/>
                     <dest obj="*_8" inlet="a"/>
                  </net>
                  <net>
                     <source obj="*_6" outlet="result"/>
                     <dest obj="*_8" inlet="b"/>
                  </net>
                  <net>
                     <source obj="inv_pos_2" outlet="out"/>
                     <dest obj="*_6" inlet="b"/>
                  </net>
                  <net>
                     <source obj="*_8" outlet="result"/>
                     <dest obj="-_1" inlet="in2"/>
                  </net>
                  <net>
                     <source obj="-_1" outlet="out"/>
                     <dest obj="unipolar2bipolar_1" inlet="i"/>
                  </net>
                  <net>
                     <source obj="unipolar2bipolar_1" outlet="o"/>
                     <dest obj="DISP_RELASE" inlet="in"/>
                     <dest obj="adsr_3" inlet="r"/>
                  </net>
                  <net>
                     <source obj="recv_20" outlet="v"/>
                     <dest obj="*_10" inlet="a"/>
                  </net>
                  <net>
                     <source obj="recv_21" outlet="v"/>
                     <dest obj="inv_pos_3" inlet="in"/>
                  </net>
                  <net>
                     <source obj="recv_16" outlet="v"/>
                     <dest obj="bipolar2unipolar_2" inlet="i"/>
                  </net>
                  <net>
                     <source obj="bipolar2unipolar_2" outlet="o"/>
                     <dest obj="+_1" inlet="in1"/>
                     <dest obj="inv_pos_4" inlet="in"/>
                  </net>
                  <net>
                     <source obj="+_1" outlet="out"/>
                     <dest obj="unipolar2bipolar_2" inlet="i"/>
                  </net>
                  <net>
                     <source obj="unipolar2bipolar_2" outlet="o"/>
                     <dest obj="adsr_3" inlet="a"/>
                     <dest obj="DISP_ATTACK" inlet="in"/>
                  </net>
                  <net>
                     <source obj="inv_pos_3" outlet="out"/>
                     <dest obj="*_10" inlet="b"/>
                  </net>
                  <net>
                     <source obj="*_10" outlet="result"/>
                     <dest obj="*_9" inlet="b"/>
                  </net>
                  <net>
                     <source obj="inv_pos_4" outlet="out"/>
                     <dest obj="*_9" inlet="a"/>
                  </net>
                  <net>
                     <source obj="*_9" outlet="result"/>
                     <dest obj="+_1" inlet="in2"/>
                  </net>
                  <net>
                     <source obj="recv_1" outlet="v"/>
                     <dest obj="adsr_3" inlet="gate"/>
                  </net>
                  <net>
                     <source obj="adsr_3" outlet="env"/>
                     <dest obj="ENVELOPE" inlet="outlet"/>
                  </net>
                  <net>
                     <source obj="VELOCITY" outlet="inlet"/>
                     <dest obj="S_INT_VELOCITY" inlet="v"/>
                  </net>
                  <net>
                     <source obj="GATE" outlet="inlet"/>
                     <dest obj="S_INT_GATE" inlet="v"/>
                  </net>
                  <net>
                     <source obj="A" outlet="inlet"/>
                     <dest obj="S_ATTACK" inlet="v"/>
                  </net>
                  <net>
                     <source obj="D" outlet="inlet"/>
                     <dest obj="S_DECAY" inlet="v"/>
                  </net>
                  <net>
                     <source obj="S" outlet="inlet"/>
                     <dest obj="S_SUSTAIN" inlet="v"/>
                  </net>
                  <net>
                     <source obj="R" outlet="inlet"/>
                     <dest obj="S_RELEASE" inlet="v"/>
                  </net>
                  <net>
                     <source obj="VEL R" outlet="inlet"/>
                     <dest obj="S_VEL_RELEASE" inlet="v"/>
                  </net>
                  <net>
                     <source obj="VEL A" outlet="inlet"/>
                     <dest obj="S_VEL_ATTACK" inlet="v"/>
                  </net>
               </nets>
               <settings>
                  <subpatchmode>no</subpatchmode>
               </settings>
               <notes><![CDATA[]]></notes>
               <windowPos>
                  <x>92</x>
                  <y>122</y>
                  <width>1538</width>
                  <height>922</height>
               </windowPos>
            </subpatch>
         </patcher>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_ENVELOPE2" x="1974" y="378">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_1" x="1064" y="392">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="release" x="322" y="406">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_RELEASE" x="406" y="406">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_ENV_CUTOFF" x="224" y="434">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_1" x="994" y="434">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_PWM" x="1134" y="434">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_51" x="1708" y="448">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_ATTACK2"/>
            </attribs>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="cutoff" x="322" y="462">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_CUTOFF" x="406" y="462">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_34" x="854" y="462">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_LFO_PWM"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_14" x="1274" y="476">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_VELOCITY"/>
            </attribs>
         </obj>
         <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="outlet_1" x="1568" y="490">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="resonance" x="322" y="518">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_RESONANCE" x="406" y="518">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_52" x="1708" y="518">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VEL_ATTACK"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_37" x="1274" y="546">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_TOUCH"/>
            </attribs>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="pwm" x="322" y="574">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_PULSEWIDTH" x="406" y="574">
            <params/>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="159b6323-d34c-426f-975d-d02ce136bb5c" name="keyb_2" x="756" y="588">
            <params/>
            <attribs/>
            <object id="patch/object" uuid="159b6323-d34c-426f-975d-d02ce136bb5c">
               <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity. Polyphonic touch output.</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>midi_in.axh</helpPatch>
               <inlets/>
               <outlets>
                  <frac32.bipolar name="note" description="midi note number (-64..63)"/>
                  <bool32 name="gate" description="key pressed, no retrigger legato"/>
                  <bool32 name="gate2" description="key pressed, retrigger on legato"/>
                  <frac32.positive name="velocity" description="note-on velocity"/>
                  <frac32.positive name="releaseVelocity" description="note-off velocity"/>
                  <frac32.positive name="touch" description="polyphonic aftertouch"/>
               </outlets>
               <displays/>
               <params/>
               <attribs/>
               <includes/>
               <code.declaration><![CDATA[int8_t _note;
int32_t _gate;
int32_t _gate2;
uint8_t _velo;
uint8_t _rvelo;
uint8_t _touch;
]]></code.declaration>
               <code.init><![CDATA[_gate = 0;
_note = 0;
_touch = 0;
]]></code.init>
               <code.krate><![CDATA[outlet_note= _note<<21;
outlet_gate= _gate;
outlet_gate2= _gate2;
_gate2 = _gate;
outlet_velocity= _velo<<20;
outlet_touch = _touch<<20;
outlet_releaseVelocity= _rvelo<<20;
]]></code.krate>
               <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
	//LogTextMessage(device);
  _velo = data2;
  _note = data1-64;
  _gate = 1<<27;
  _gate2 = 0;
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||
          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_note == data1-64) {
    _rvelo = data2;
    _gate = 0;
  }
} else if ((status == attr_midichannel + MIDI_POLY_PRESSURE)&&(data1-64 == _note)) {
  _touch = data2;
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
            </object>
         </patchobj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_NOTE" x="910" y="588">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_53" x="1708" y="588">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_DECAY2"/>
            </attribs>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="VOLUME TOUCH" x="532" y="602">
            <params>
               <frac32.u.map name="value" onParent="true" MidiCC="2" value="36.5"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VOLUME_TOUCH" x="616" y="602">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="pwmMod" x="322" y="616">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_LFO_PWM" x="406" y="616">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_12" x="1274" y="616">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_ENVELOPE"/>
            </attribs>
         </obj>
         <obj type="patch/send b" uuid="b428934ee3ee80efb18736216fd871d264e9b695" name="S_INT_GATE" x="910" y="630">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_54" x="1708" y="658">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_SUSTAIN2"/>
            </attribs>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="fAttack" x="322" y="672">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_ATTACK2" x="406" y="672">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_VELOCITY" x="910" y="672">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_2" x="1274" y="686">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VOLUME"/>
            </attribs>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="VEL ATTACK" x="546" y="700">
            <params>
               <frac32.u.map name="value" onParent="true" value="17.5"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VEL_ATTACK" x="616" y="700">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="fDecay" x="322" y="714">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_DECAY2" x="406" y="714">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_TOUCH" x="910" y="714">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_55" x="1708" y="728">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_RELEASE2"/>
            </attribs>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="fSustain" x="322" y="756">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_SUSTAIN2" x="406" y="756">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_19" x="1274" y="756">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VEL_VOLUME"/>
            </attribs>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="VEL RELEASE" x="546" y="784">
            <params>
               <frac32.u.map name="value" onParent="true" value="22.5"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VEL_RELEASE" x="616" y="784">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="fRelease" x="322" y="798">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_RELEASE2" x="406" y="798">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_56" x="1708" y="798">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VEL_RELEASE"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_38" x="1274" y="826">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VOLUME_TOUCH"/>
            </attribs>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_KEYFOLLOW" x="406" y="854">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv b" uuid="6ce86e0c667a0168b53a910eb891366e96b944d1" name="recv_1" x="756" y="854">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_GATE"/>
            </attribs>
         </obj>
         <patcher type="patch/patcher" uuid="104751bc-28e0-4b3c-a6b6-10b797f69885" name="VCA _LOGIC" x="1456" y="896">
            <params/>
            <attribs/>
            <subpatch appVersion="1.0.12">
               <obj type="tiar/gain/DCA" uuid="37123bac-a14b-430b-901f-cdecf31d394c" name="DCA_1" x="532" y="14">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet a" uuid="b577fe41e0a6bc7b5502ce33cb8a3129e2e28ee5" name="AUDIO" x="28" y="42">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VELOCITY" x="28" y="84">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="OUT" x="658" y="84">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="mix/xfade" uuid="bb87360199938d53d1183cdc80947ed0a39e3c9a" name="xfade_1" x="448" y="98">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_1" x="378" y="112">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="TOUCH" x="28" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="ENVELOPE" x="28" y="168">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/-" uuid="3280bb759e9fc189e134300e48dda7e903c9a110" name="-_3" x="308" y="196">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VOLUME" x="28" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="rbrt/math/* &lt;&lt;" uuid="064dcc12-a5c7-4758-b582-5c9cf106db81" name="*_3" x="588" y="224">
                  <params/>
                  <attribs>
                     <spinner attributeName="shift" value="0"/>
                  </attribs>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VOLUME VEL" x="28" y="252">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_2" x="252" y="266">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_1" x="364" y="266">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VOLUME TOUCH" x="28" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_4" x="462" y="322">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="DISP VOLUME" x="532" y="336">
                  <params/>
                  <attribs/>
               </obj>
               <nets>
                  <net>
                     <source obj="*_2" outlet="result"/>
                     <dest obj="inv_pos_1" inlet="in"/>
                  </net>
                  <net>
                     <source obj="*_4" outlet="result"/>
                     <dest obj="-_3" inlet="in2"/>
                     <dest obj="DISP VOLUME" inlet="in"/>
                  </net>
                  <net>
                     <source obj="inv_pos_1" outlet="out"/>
                     <dest obj="*_4" inlet="a"/>
                  </net>
                  <net>
                     <source obj="-_3" outlet="out"/>
                     <dest obj="*_1" inlet="b"/>
                  </net>
                  <net>
                     <source obj="ENVELOPE" outlet="inlet"/>
                     <dest obj="*_1" inlet="a"/>
                  </net>
                  <net>
                     <source obj="VOLUME" outlet="inlet"/>
                     <dest obj="-_3" inlet="in1"/>
                     <dest obj="*_2" inlet="a"/>
                  </net>
                  <net>
                     <source obj="VELOCITY" outlet="inlet"/>
                     <dest obj="*_2" inlet="b"/>
                  </net>
                  <net>
                     <source obj="VOLUME VEL" outlet="inlet"/>
                     <dest obj="*_4" inlet="b"/>
                  </net>
                  <net>
                     <source obj="AUDIO" outlet="inlet"/>
                     <dest obj="DCA_1" inlet="in"/>
                  </net>
                  <net>
                     <source obj="*_1" outlet="result"/>
                     <dest obj="*_3" inlet="b"/>
                     <dest obj="xfade_1" inlet="i1"/>
                  </net>
                  <net>
                     <source obj="DCA_1" outlet="out"/>
                     <dest obj="OUT" inlet="outlet"/>
                  </net>
                  <net>
                     <source obj="TOUCH" outlet="inlet"/>
                     <dest obj="*_3" inlet="a"/>
                  </net>
                  <net>
                     <source obj="*_3" outlet="result"/>
                     <dest obj="xfade_1" inlet="i2"/>
                  </net>
                  <net>
                     <source obj="xfade_1" outlet="o"/>
                     <dest obj="DCA_1" inlet="gain"/>
                  </net>
                  <net>
                     <source obj="VOLUME TOUCH" outlet="inlet"/>
                     <dest obj="xfade_1" inlet="c"/>
                  </net>
               </nets>
               <settings>
                  <subpatchmode>no</subpatchmode>
               </settings>
               <notes><![CDATA[]]></notes>
               <windowPos>
                  <x>539</x>
                  <y>332</y>
                  <width>1096</width>
                  <height>881</height>
               </windowPos>
            </subpatch>
         </patcher>
         <patcher type="patch/patcher" uuid="476758a2-5e36-4293-9d2e-13e525f11da9" name="FILTER LOGIC" x="1288" y="910">
            <params>
               <frac32.u.map name="postFilterGain" onParent="true" value="12.0"/>
               <frac32.u.map name="preFilterGain" onParent="true" value="12.0"/>
               <frac32.u.map name="obj_2:Formant" onParent="true" value="0.0"/>
               <frac32.u.map name="obj_2:Master gain" onParent="true" value="20.5"/>
            </params>
            <attribs/>
            <subpatch appVersion="1.0.12">
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_RESONANCE" x="238" y="112">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet a" uuid="b577fe41e0a6bc7b5502ce33cb8a3129e2e28ee5" name="AUDIO" x="112" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_4" x="392" y="140">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_3" x="588" y="140">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/-" uuid="3280bb759e9fc189e134300e48dda7e903c9a110" name="-_2" x="518" y="154">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="NOTE" x="112" y="168">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VELOCITY" x="112" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_12" x="434" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_11" x="504" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="DISP_VEL_CUTOFF" x="616" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="TOUCH" x="112" y="252">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="postFilterGain" x="1022" y="266">
                  <params>
                     <frac32.u.map name="amp" onParent="true" value="12.0"/>
                  </params>
                  <attribs/>
               </obj>
               <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_6" x="406" y="280">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="CUTOFF" x="112" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="FILTER OUTPUT" x="1162" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="preFilterGain" x="756" y="308">
                  <params>
                     <frac32.u.map name="amp" onParent="true" value="12.0"/>
                  </params>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VEL CUTOFF" x="112" y="336">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="drj/math/sum6" uuid="26ae7daf2493cd84118a45b123d6acae46124474" name="sum6_1" x="490" y="350">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="RESONANCE" x="112" y="378">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_3" x="420" y="392">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="KEYFOLLOW" x="112" y="420">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="ENVELOPE" x="112" y="462">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_5" x="420" y="490">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="ENV CUTOFF" x="112" y="504">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_8" x="560" y="518">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_RESONANCE"/>
                  </attribs>
               </obj>
               <obj type="sptnk/filter/vowel" uuid="8d99d5e3-c653-44a8-bfc9-248cee8eb47c" name="obj_2" x="1050" y="532">
                  <params>
                     <frac32.u.map name="Formant" onParent="true" value="0.0"/>
                     <frac32.u.map name="Filter 1:reso" value="54.5"/>
                     <frac32.u.map name="Filter 2:reso" value="59.0"/>
                     <frac32.u.map name="Filter 3:reso" value="60.5"/>
                     <frac32.u.map name="Formant Mix:gain1" value="30.5"/>
                     <frac32.u.map name="Formant Mix:gain2" value="29.0"/>
                     <frac32.u.map name="Formant Mix:gain3" value="31.5"/>
                     <frac32.u.map name="Master gain" onParent="true" value="20.5"/>
                  </params>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="LFO" x="112" y="546">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_7" x="210" y="560">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="LFO CUTOFF" x="112" y="588">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="MOD IN" x="112" y="630">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/div 4" uuid="507955275561b256e540f7205386d31545a2828f" name="div_1" x="336" y="644">
                  <params/>
                  <attribs/>
               </obj>
               <nets>
                  <net>
                     <source obj="sum6_1" outlet="out"/>
                     <dest obj="obj_2" inlet="Formant Mod (+/-)"/>
                  </net>
                  <net>
                     <source obj="bipolar2unipolar_4" outlet="o"/>
                     <dest obj="*_11" inlet="a"/>
                     <dest obj="-_2" inlet="in1"/>
                  </net>
                  <net>
                     <source obj="-_2" outlet="out"/>
                     <dest obj="unipolar2bipolar_3" inlet="i"/>
                  </net>
                  <net>
                     <source obj="inv_pos_6" outlet="out"/>
                     <dest obj="*_12" inlet="b"/>
                  </net>
                  <net>
                     <source obj="*_12" outlet="result"/>
                     <dest obj="*_11" inlet="b"/>
                  </net>
                  <net>
                     <source obj="*_11" outlet="result"/>
                     <dest obj="-_2" inlet="in2"/>
                  </net>
                  <net>
                     <source obj="unipolar2bipolar_3" outlet="o"/>
                     <dest obj="DISP_VEL_CUTOFF" inlet="in"/>
                     <dest obj="sum6_1" inlet="in1"/>
                  </net>
                  <net>
                     <source obj="*_3" outlet="result"/>
                     <dest obj="sum6_1" inlet="in2"/>
                  </net>
                  <net>
                     <source obj="*_5" outlet="result"/>
                     <dest obj="sum6_1" inlet="in3"/>
                  </net>
                  <net>
                     <source obj="NOTE" outlet="inlet"/>
                     <dest obj="*_3" inlet="a"/>
                  </net>
                  <net>
                     <source obj="VELOCITY" outlet="inlet"/>
                     <dest obj="inv_pos_6" inlet="in"/>
                  </net>
                  <net>
                     <source obj="CUTOFF" outlet="inlet"/>
                     <dest obj="bipolar2unipolar_4" inlet="i"/>
                  </net>
                  <net>
                     <source obj="RESONANCE" outlet="inlet"/>
                     <dest obj="S_RESONANCE" inlet="v"/>
                  </net>
                  <net>
                     <source obj="VEL CUTOFF" outlet="inlet"/>
                     <dest obj="*_12" inlet="a"/>
                  </net>
                  <net>
                     <source obj="KEYFOLLOW" outlet="inlet"/>
                     <dest obj="*_3" inlet="b"/>
                  </net>
                  <net>
                     <source obj="ENVELOPE" outlet="inlet"/>
                     <dest obj="*_5" inlet="a"/>
                  </net>
                  <net>
                     <source obj="ENV CUTOFF" outlet="inlet"/>
                     <dest obj="*_5" inlet="b"/>
                  </net>
                  <net>
                     <source obj="LFO" outlet="inlet"/>
                     <dest obj="*_7" inlet="a"/>
                  </net>
                  <net>
                     <source obj="*_7" outlet="result"/>
                     <dest obj="div_1" inlet="in"/>
                  </net>
                  <net>
                     <source obj="LFO CUTOFF" outlet="inlet"/>
                     <dest obj="*_7" inlet="b"/>
                  </net>
                  <net>
                     <source obj="MOD IN" outlet="inlet"/>
                     <dest obj="sum6_1" inlet="in5"/>
                  </net>
                  <net>
                     <source obj="div_1" outlet="out"/>
                     <dest obj="sum6_1" inlet="in4"/>
                  </net>
                  <net>
                     <source obj="AUDIO" outlet="inlet"/>
                     <dest obj="preFilterGain" inlet="in"/>
                  </net>
                  <net>
                     <source obj="preFilterGain" outlet="out"/>
                     <dest obj="obj_2" inlet="Audio In"/>
                  </net>
                  <net>
                     <source obj="postFilterGain" outlet="out"/>
                     <dest obj="FILTER OUTPUT" inlet="outlet"/>
                  </net>
                  <net>
                     <source obj="obj_2" outlet="Output"/>
                     <dest obj="postFilterGain" inlet="in"/>
                  </net>
               </nets>
               <settings>
                  <subpatchmode>no</subpatchmode>
               </settings>
               <notes><![CDATA[]]></notes>
               <windowPos>
                  <x>221</x>
                  <y>94</y>
                  <width>1772</width>
                  <height>902</height>
               </windowPos>
            </subpatch>
         </patcher>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="lfoDelay" x="322" y="924">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_LFO_DELAY" x="406" y="924">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_21" x="756" y="924">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_VELOCITY"/>
            </attribs>
         </obj>
         <patcher type="patch/patcher" uuid="b9a40865-3c24-4011-9bfb-f470e65c0d9d" name="ADSR LOGIC" x="910" y="924">
            <params/>
            <attribs/>
            <subpatch appVersion="1.0.12">
               <obj type="patch/inlet b" uuid="3b0d3eacb5bb978cb05d1372aa2714d5a4790844" name="GATE" x="280" y="42">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send b" uuid="b428934ee3ee80efb18736216fd871d264e9b695" name="S_INT_GATE" x="364" y="42">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VELOCITY" x="280" y="84">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_VELOCITY" x="364" y="84">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_16" x="602" y="84">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_ATTACK"/>
                  </attribs>
               </obj>
               <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_2" x="728" y="84">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="A" x="280" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_ATTACK" x="364" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_4" x="728" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_1" x="854" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_2" x="924" y="126">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_20" x="602" y="154">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_VEL_ATTACK"/>
                  </attribs>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VEL A" x="280" y="168">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VEL_ATTACK" x="364" y="168">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_10" x="728" y="168">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_9" x="854" y="182">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="D" x="280" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_DECAY" x="364" y="210">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_21" x="602" y="224">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_INT_VELOCITY"/>
                  </attribs>
               </obj>
               <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_3" x="728" y="224">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="S" x="280" y="252">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_SUSTAIN" x="364" y="252">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="R" x="280" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_RELEASE" x="364" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv b" uuid="6ce86e0c667a0168b53a910eb891366e96b944d1" name="recv_1" x="602" y="294">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_INT_GATE"/>
                  </attribs>
               </obj>
               <obj type="patch/outlet f" uuid="d18a9a550bcaaebac94e25983bd0e27dbfd7233c" name="ENVELOPE" x="826" y="294">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="env/adsr m" uuid="98bd39fb828c392b28126d259cb5175e6f6ea34b" name="adsr_3" x="742" y="322">
                  <params>
                     <frac32.s.map name="a" value="0.0"/>
                     <frac32.s.map name="d" value="0.0"/>
                     <frac32.u.map name="s" value="0.0"/>
                     <frac32.s.map name="r" value="0.0"/>
                  </params>
                  <attribs/>
               </obj>
               <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="VEL R" x="280" y="336">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VEL_RELEASE" x="364" y="336">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="DISP_ATTACK" x="840" y="350">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_4" x="602" y="364">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_DECAY"/>
                  </attribs>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_5" x="602" y="434">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_SUSTAIN"/>
                  </attribs>
               </obj>
               <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="DISP_RELASE" x="840" y="476">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_6" x="602" y="504">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_RELEASE"/>
                  </attribs>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_15" x="602" y="574">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_VEL_RELEASE"/>
                  </attribs>
               </obj>
               <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_1" x="882" y="574">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_1" x="742" y="588">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_8" x="868" y="630">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_13" x="602" y="644">
                  <params/>
                  <attribs>
                     <objref attributeName="sender" obj="S_INT_VELOCITY"/>
                  </attribs>
               </obj>
               <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_2" x="728" y="644">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/-" uuid="3280bb759e9fc189e134300e48dda7e903c9a110" name="-_1" x="938" y="658">
                  <params/>
                  <attribs/>
               </obj>
               <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_6" x="812" y="700">
                  <params/>
                  <attribs/>
               </obj>
               <nets>
                  <net>
                     <source obj="recv_4" outlet="v"/>
                     <dest obj="adsr_3" inlet="d"/>
                  </net>
                  <net>
                     <source obj="recv_5" outlet="v"/>
                     <dest obj="adsr_3" inlet="s"/>
                  </net>
                  <net>
                     <source obj="recv_15" outlet="v"/>
                     <dest obj="*_6" inlet="a"/>
                  </net>
                  <net>
                     <source obj="recv_13" outlet="v"/>
                     <dest obj="inv_pos_2" inlet="in"/>
                  </net>
                  <net>
                     <source obj="recv_6" outlet="v"/>
                     <dest obj="bipolar2unipolar_1" inlet="i"/>
                  </net>
                  <net>
                     <source obj="bipolar2unipolar_1" outlet="o"/>
                     <dest obj="-_1" inlet="in1"/>
                     <dest obj="*_8" inlet="a"/>
                  </net>
                  <net>
                     <source obj="*_6" outlet="result"/>
                     <dest obj="*_8" inlet="b"/>
                  </net>
                  <net>
                     <source obj="inv_pos_2" outlet="out"/>
                     <dest obj="*_6" inlet="b"/>
                  </net>
                  <net>
                     <source obj="*_8" outlet="result"/>
                     <dest obj="-_1" inlet="in2"/>
                  </net>
                  <net>
                     <source obj="-_1" outlet="out"/>
                     <dest obj="unipolar2bipolar_1" inlet="i"/>
                  </net>
                  <net>
                     <source obj="unipolar2bipolar_1" outlet="o"/>
                     <dest obj="DISP_RELASE" inlet="in"/>
                     <dest obj="adsr_3" inlet="r"/>
                  </net>
                  <net>
                     <source obj="recv_20" outlet="v"/>
                     <dest obj="*_10" inlet="a"/>
                  </net>
                  <net>
                     <source obj="recv_21" outlet="v"/>
                     <dest obj="inv_pos_3" inlet="in"/>
                  </net>
                  <net>
                     <source obj="recv_16" outlet="v"/>
                     <dest obj="bipolar2unipolar_2" inlet="i"/>
                  </net>
                  <net>
                     <source obj="bipolar2unipolar_2" outlet="o"/>
                     <dest obj="+_1" inlet="in1"/>
                     <dest obj="inv_pos_4" inlet="in"/>
                  </net>
                  <net>
                     <source obj="+_1" outlet="out"/>
                     <dest obj="unipolar2bipolar_2" inlet="i"/>
                  </net>
                  <net>
                     <source obj="unipolar2bipolar_2" outlet="o"/>
                     <dest obj="adsr_3" inlet="a"/>
                     <dest obj="DISP_ATTACK" inlet="in"/>
                  </net>
                  <net>
                     <source obj="inv_pos_3" outlet="out"/>
                     <dest obj="*_10" inlet="b"/>
                  </net>
                  <net>
                     <source obj="*_10" outlet="result"/>
                     <dest obj="*_9" inlet="b"/>
                  </net>
                  <net>
                     <source obj="inv_pos_4" outlet="out"/>
                     <dest obj="*_9" inlet="a"/>
                  </net>
                  <net>
                     <source obj="*_9" outlet="result"/>
                     <dest obj="+_1" inlet="in2"/>
                  </net>
                  <net>
                     <source obj="recv_1" outlet="v"/>
                     <dest obj="adsr_3" inlet="gate"/>
                  </net>
                  <net>
                     <source obj="adsr_3" outlet="env"/>
                     <dest obj="ENVELOPE" inlet="outlet"/>
                  </net>
                  <net>
                     <source obj="VELOCITY" outlet="inlet"/>
                     <dest obj="S_INT_VELOCITY" inlet="v"/>
                  </net>
                  <net>
                     <source obj="GATE" outlet="inlet"/>
                     <dest obj="S_INT_GATE" inlet="v"/>
                  </net>
                  <net>
                     <source obj="A" outlet="inlet"/>
                     <dest obj="S_ATTACK" inlet="v"/>
                  </net>
                  <net>
                     <source obj="D" outlet="inlet"/>
                     <dest obj="S_DECAY" inlet="v"/>
                  </net>
                  <net>
                     <source obj="S" outlet="inlet"/>
                     <dest obj="S_SUSTAIN" inlet="v"/>
                  </net>
                  <net>
                     <source obj="R" outlet="inlet"/>
                     <dest obj="S_RELEASE" inlet="v"/>
                  </net>
                  <net>
                     <source obj="VEL R" outlet="inlet"/>
                     <dest obj="S_VEL_RELEASE" inlet="v"/>
                  </net>
                  <net>
                     <source obj="VEL A" outlet="inlet"/>
                     <dest obj="S_VEL_ATTACK" inlet="v"/>
                  </net>
               </nets>
               <settings>
                  <subpatchmode>no</subpatchmode>
               </settings>
               <notes><![CDATA[]]></notes>
               <windowPos>
                  <x>92</x>
                  <y>122</y>
                  <width>1538</width>
                  <height>922</height>
               </windowPos>
            </subpatch>
         </patcher>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_ENVELOPE" x="1022" y="924">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_17" x="1134" y="924">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_NOTE"/>
            </attribs>
         </obj>
         <obj type="math/div 32" uuid="40e43d0d284fded6b6cfadd45a5cb69c8d713691" name="div_2" x="1918" y="980">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_16" x="756" y="994">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_ATTACK"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_23" x="1134" y="994">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_VELOCITY"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_44" x="1680" y="994">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_TREMOLO_LEVEL"/>
            </attribs>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="CUTOFF VEL" x="546" y="1022">
            <params>
               <frac32.u.map name="value" onParent="true" value="42.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_VEL_CUTOFF" x="616" y="1022">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_5" x="1848" y="1022">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_TREMOLO" x="1960" y="1022">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_20" x="756" y="1064">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VEL_ATTACK"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_35" x="1134" y="1064">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_TOUCH"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_43" x="1652" y="1078">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_TREMOLO_FREQ"/>
            </attribs>
         </obj>
         <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="TREMOLO LFO" x="1792" y="1078">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="CUTOFF LFO AMOUNT" x="546" y="1106">
            <params>
               <frac32.u.map name="value" onParent="true" value="12.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_LFO_CUTOFF" x="658" y="1106">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_4" x="756" y="1134">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_DECAY"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_18" x="1134" y="1134">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_CUTOFF"/>
            </attribs>
         </obj>
         <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_2" x="1582" y="1176">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_39" x="1680" y="1190">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_LFO_LEVEL_TOUCH"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_5" x="756" y="1204">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_SUSTAIN"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_22" x="1134" y="1204">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VEL_CUTOFF"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_9" x="1442" y="1246">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_LFO_FREQ"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_36" x="1680" y="1260">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_TOUCH"/>
            </attribs>
         </obj>
         <obj type="mix/xfade" uuid="bb87360199938d53d1183cdc80947ed0a39e3c9a" name="xfade_1" x="1918" y="1260">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_6" x="756" y="1274">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_RELEASE"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_30" x="1134" y="1274">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_RESONANCE"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_13" x="1442" y="1316">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_LFO_FREQ_COARSE"/>
            </attribs>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_2" x="1820" y="1330">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_46" x="238" y="1344">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_PITCH"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_15" x="756" y="1344">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_VEL_RELEASE"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_7" x="1134" y="1344">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_KEYFOLLOW"/>
            </attribs>
         </obj>
         <obj type="phi/lfo/slowsine" uuid="8a84c6d2-875f-4d19-bceb-701220bc6e28" name="slowsine_1" x="1596" y="1372">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
               <int32.hradio name="div" value="0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_INT_LFO" x="1974" y="1372">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_11" x="1134" y="1414">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_ENVELOPE2"/>
            </attribs>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_3" x="1918" y="1414">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv b" uuid="6ce86e0c667a0168b53a910eb891366e96b944d1" name="recv_61" x="84" y="1428">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_GATE"/>
            </attribs>
         </obj>
         <patchobj type="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f" name="adsr_13" x="210" y="1428">
            <params/>
            <attribs>
               <spinner attributeName="sourceIndex" value="1"/>
               <objref attributeName="synthControlTable" obj="../synthControl"/>
               <objref attributeName="ref" obj="../globals"/>
            </attribs>
            <object id="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f">
               <sDescription>Attack/decay/sustain/release envelope</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>adsr.axh</helpPatch>
               <inlets>
                  <bool32.risingfalling name="gate" description="gate"/>
               </inlets>
               <outlets>
                  <frac32.positive name="env"/>
                  <frac32.bipolar name="pitch"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="sourceIndex" MinValue="1" MaxValue="5" DefaultValue="0"/>
                  <objref name="synthControlTable"/>
                  <objref name="ref"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[// Adsr
int8_t stage;
int ntrig;
int32_t val;

// Glide
int8_t glideStage = 0;
int32_t glideVal;
int32_t glideTime;
int32_t glideOffset;
bool glideInvert = false;

// Octave Switch
uint8_t octaveFaderValue;
int8_t lastOctaveFaderValue = -1; // init in the beginning
int8_t octaveOffset;
int8_t octaveThresholds[7] = { 6, 29, 52, 76, 99, 121, 127};

// source parameters
int32_t level;
int32_t tune;
int32_t attack;
int32_t decay;
int32_t sustain;

// global parameters
int32_t globalRelease;]]></code.declaration>
               <code.init><![CDATA[glideStage = stage = 0;
ntrig = 0;
val = 0;]]></code.init>
               <code.krate><![CDATA[// unipolar to bipoloar conversion => unipolar - (1<<26)<<1;
// int to frac32 conversion => int << (27-7) 

// load input data
switch (attr_sourceIndex) {
	case 1:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source1Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source1Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source1Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source1Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 2:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source2Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source2Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source2Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source2Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source2Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source2Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source2GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source2GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 3:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source3Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source3Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source3Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source3Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source3Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source3Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source3GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source3GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 4: 
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source4Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source4Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source4Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source4Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source4Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source4Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source4GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source4GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);	
		break;
	case 5:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source5Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source5Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source5Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source5Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
}
globalRelease = (attr_synthControlTable.array[attr_ref.PARAMS->release.tIndex] << (27-7)) - (1<<26)<<1;

// process octave switch
if (octaveFaderValue != lastOctaveFaderValue) {
	lastOctaveFaderValue = octaveFaderValue; 
	for (octaveOffset = 0; octaveOffset < 8; octaveOffset++) {
		if (octaveFaderValue <= octaveThresholds[octaveOffset]) break;
	}
	//LogTextMessage("octaveOffset %3D", octaveOffset);
}

// Gate
if ((inlet_gate>0) && !ntrig) {
   glideStage = stage = 1; 
   ntrig = 1;
}
if (!(inlet_gate>0) && ntrig) {
   stage = 0;
   ntrig=0;
}

// Glide
if (glideStage == 0) {
	int32_t r1;
	MTOF(- glideTime, r1);
	r1 = 0x7FFFFFFF - (r1 >> 2);
	glideVal = ___SMMUL(glideVal,r1)<<1;
} else 
if (glideStage == 1) {
   if (glideOffset < 0) {
   	glideVal = abs(glideOffset+1) >> 2;
   	glideInvert = true;
   } else {
   	glideInvert = false;
   	glideVal = (glideOffset) >> 2;
   }
   glideStage = 0;
}
if (glideInvert) {
	outlet_pitch = -(glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} else {
	outlet_pitch = (glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} 

// Adsr Envelope
if (stage == 0){
   int32_t r1;
   MTOF(- globalRelease, r1);
   r1 = 0x7FFFFFFF - (r1 >> 2);
   val = ___SMMUL(val,r1)<<1;
} else if (stage == 1){
   int32_t a;
   MTOF(- attack,a);
   a = a >> 2;
   val = val + a;
   if (val<0) {
      val =0x7FFFFFFF;
      stage = 2;
   }
} else if (stage == 2) {
   int32_t s = __USAT(sustain, 27);
   int32_t d;
   MTOF(- decay, d);
   d = 0x7FFFFFFF - (d >> 2);
   val = (s<<4) + (___SMMUL(val - (s<<4),d)<<1);
}
outlet_env = ___SMMUL(val>>1,level<<2);]]></code.krate>
            </object>
         </patchobj>
         <obj type="patch/recv b" uuid="6ce86e0c667a0168b53a910eb891366e96b944d1" name="recv_62" x="1442" y="1428">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_GATE"/>
            </attribs>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_6" x="1722" y="1428">
            <params/>
            <attribs/>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="LFO LEVEL" x="546" y="1442">
            <params>
               <frac32.u.map name="value" onParent="true" value="18.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_LFO_LEVEL" x="616" y="1442">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_10" x="1134" y="1484">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_ENV_CUTOFF"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_47" x="938" y="1498">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_PWM"/>
            </attribs>
         </obj>
         <patchobj type="patch/object" uuid="e2b2d595-25e0-46f3-bdaf-d4f95352a481" name="ahd_1" x="1596" y="1498">
            <params>
               <frac32.s.map name="delay" value="9.0"/>
               <frac32.s.map name="a" onParent="true" value="21.0"/>
               <frac32.s.map name="d" onParent="true" value="31.0"/>
            </params>
            <attribs/>
            <object id="patch/object" uuid="e2b2d595-25e0-46f3-bdaf-d4f95352a481">
               <sDescription>delayed attack hold decay envelope. Delay parameter determins a time of delay after rising gate until the envelope starts.</sDescription>
               <author>Johannes Taelman (additions by Peter Witzel)</author>
               <license>BSD</license>
               <inlets>
                  <bool32.risingfalling name="gate" description="gate"/>
                  <frac32 name="delay"/>
               </inlets>
               <outlets>
                  <frac32.positive name="env"/>
               </outlets>
               <displays/>
               <params>
                  <frac32.s.map.klineartime.exp name="delay"/>
                  <frac32.s.map.kdecaytime.exp name="a"/>
                  <frac32.s.map.kdecaytime.exp name="d"/>
               </params>
               <attribs/>
               <includes/>
               <code.declaration><![CDATA[int32_t val;
int32_t delay;
int32_t ntrig;]]></code.declaration>
               <code.init><![CDATA[val = 0;
delay = 0;
ntrig = 0;]]></code.init>
               <code.krate><![CDATA[if (inlet_gate>0) {
	if (ntrig==0) {
		ntrig = 1;
	}
	else {
		if (delay<(1<<27)) {
			int32_t t;
		     MTOF(-inlet_delay,t);
		     delay += t>>6;
			val = ___SMMUL(val, param_d)<<1;
		}
		else {
			val = (1<<27) - (___SMMUL((1<<27)-val, param_a)<<1);
		}
	}
}
else {
	ntrig = 0;
	val = ___SMMUL(val, param_d)<<1;
	delay = 0;
}
outlet_env= val;]]></code.krate>
            </object>
         </patchobj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_28" x="1442" y="1512">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_LFO_DELAY"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_40" x="1806" y="1526">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_LFO_LEVEL"/>
            </attribs>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_31" x="1134" y="1554">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_LFO"/>
            </attribs>
         </obj>
         <patchobj type="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f" name="adsr_14" x="210" y="1568">
            <params/>
            <attribs>
               <spinner attributeName="sourceIndex" value="2"/>
               <objref attributeName="synthControlTable" obj="../synthControl"/>
               <objref attributeName="ref" obj="../globals"/>
            </attribs>
            <object id="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f">
               <sDescription>Attack/decay/sustain/release envelope</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>adsr.axh</helpPatch>
               <inlets>
                  <bool32.risingfalling name="gate" description="gate"/>
               </inlets>
               <outlets>
                  <frac32.positive name="env"/>
                  <frac32.bipolar name="pitch"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="sourceIndex" MinValue="1" MaxValue="5" DefaultValue="0"/>
                  <objref name="synthControlTable"/>
                  <objref name="ref"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[// Adsr
int8_t stage;
int ntrig;
int32_t val;

// Glide
int8_t glideStage = 0;
int32_t glideVal;
int32_t glideTime;
int32_t glideOffset;
bool glideInvert = false;

// Octave Switch
uint8_t octaveFaderValue;
int8_t lastOctaveFaderValue = -1; // init in the beginning
int8_t octaveOffset;
int8_t octaveThresholds[7] = { 6, 29, 52, 76, 99, 121, 127};

// source parameters
int32_t level;
int32_t tune;
int32_t attack;
int32_t decay;
int32_t sustain;

// global parameters
int32_t globalRelease;]]></code.declaration>
               <code.init><![CDATA[glideStage = stage = 0;
ntrig = 0;
val = 0;]]></code.init>
               <code.krate><![CDATA[// unipolar to bipoloar conversion => unipolar - (1<<26)<<1;
// int to frac32 conversion => int << (27-7) 

// load input data
switch (attr_sourceIndex) {
	case 1:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source1Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source1Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source1Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source1Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 2:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source2Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source2Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source2Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source2Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source2Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source2Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source2GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source2GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 3:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source3Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source3Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source3Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source3Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source3Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source3Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source3GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source3GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 4: 
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source4Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source4Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source4Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source4Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source4Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source4Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source4GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source4GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);	
		break;
	case 5:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source5Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source5Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source5Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source5Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
}
globalRelease = (attr_synthControlTable.array[attr_ref.PARAMS->release.tIndex] << (27-7)) - (1<<26)<<1;

// process octave switch
if (octaveFaderValue != lastOctaveFaderValue) {
	lastOctaveFaderValue = octaveFaderValue; 
	for (octaveOffset = 0; octaveOffset < 8; octaveOffset++) {
		if (octaveFaderValue <= octaveThresholds[octaveOffset]) break;
	}
	//LogTextMessage("octaveOffset %3D", octaveOffset);
}

// Gate
if ((inlet_gate>0) && !ntrig) {
   glideStage = stage = 1; 
   ntrig = 1;
}
if (!(inlet_gate>0) && ntrig) {
   stage = 0;
   ntrig=0;
}

// Glide
if (glideStage == 0) {
	int32_t r1;
	MTOF(- glideTime, r1);
	r1 = 0x7FFFFFFF - (r1 >> 2);
	glideVal = ___SMMUL(glideVal,r1)<<1;
} else 
if (glideStage == 1) {
   if (glideOffset < 0) {
   	glideVal = abs(glideOffset+1) >> 2;
   	glideInvert = true;
   } else {
   	glideInvert = false;
   	glideVal = (glideOffset) >> 2;
   }
   glideStage = 0;
}
if (glideInvert) {
	outlet_pitch = -(glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} else {
	outlet_pitch = (glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} 

// Adsr Envelope
if (stage == 0){
   int32_t r1;
   MTOF(- globalRelease, r1);
   r1 = 0x7FFFFFFF - (r1 >> 2);
   val = ___SMMUL(val,r1)<<1;
} else if (stage == 1){
   int32_t a;
   MTOF(- attack,a);
   a = a >> 2;
   val = val + a;
   if (val<0) {
      val =0x7FFFFFFF;
      stage = 2;
   }
} else if (stage == 2) {
   int32_t s = __USAT(sustain, 27);
   int32_t d;
   MTOF(- decay, d);
   d = 0x7FFFFFFF - (d >> 2);
   val = (s<<4) + (___SMMUL(val - (s<<4),d)<<1);
}
outlet_env = ___SMMUL(val>>1,level<<2);]]></code.krate>
            </object>
         </patchobj>
         <patchobj type="patch/object" uuid="edf9dcbb-13da-4142-9b77-bf3cb79eb8a5" name="SOURCE_TUNER" x="448" y="1582">
            <params/>
            <attribs>
               <objref attributeName="synthControlTable" obj="../synthControl"/>
            </attribs>
            <object id="patch/object" uuid="edf9dcbb-13da-4142-9b77-bf3cb79eb8a5">
               <sDescription>table in RAM memory, direct from sliders</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>table.axh</helpPatch>
               <rotatedParams>true</rotatedParams>
               <inlets>
                  <frac32.bipolar name="note"/>
                  <frac32buffer.bipolar name="SIN"/>
                  <frac32buffer.bipolar name="TRI"/>
                  <frac32buffer.bipolar name="SQR"/>
                  <frac32buffer.bipolar name="SAW"/>
                  <frac32buffer.bipolar name="NOISE"/>
                  <frac32 name="envSIN"/>
                  <frac32 name="envTRI"/>
                  <frac32 name="envSQR"/>
                  <frac32 name="envSAW"/>
                  <frac32 name="envNOISE"/>
                  <frac32.bipolar name="pSIN"/>
                  <frac32.bipolar name="pTRI"/>
                  <frac32.bipolar name="pSQR"/>
                  <frac32.bipolar name="pSAW"/>
                  <frac32.positive name="LEVEL"/>
               </inlets>
               <outlets>
                  <frac32 name="pSIN"/>
                  <frac32 name="pTRI"/>
                  <frac32 name="pSQR"/>
                  <frac32 name="pSAW"/>
                  <frac32buffer.bipolar name="mix"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <objref name="synthControlTable"/>
               </attribs>
               <includes/>
               <code.krate><![CDATA[outlet_pSIN = inlet_note + inlet_pSIN;
outlet_pTRI = inlet_note + inlet_pTRI;
outlet_pSQR = inlet_note + inlet_pSQR;
outlet_pSAW = inlet_note + inlet_pSAW;]]></code.krate>
               <code.srate><![CDATA[int32_t accum = ___SMMUL(inlet_SIN,(inlet_envSIN<<4-1));
accum = ___SMMLA(inlet_TRI,(inlet_envTRI<<4-1),accum);
;   accum = ___SMMLA(inlet_SQR,(inlet_envSQR<<4-1),accum);
;   accum =  ___SMMLA(inlet_SAW,(inlet_envSAW<<4-1),accum);
;   accum =  ___SMMLA(inlet_NOISE,(inlet_envNOISE<<4-1),accum);
;   outlet_mix = __SSAT((accum<<1),28);
//;   outlet_mix = ___SMMUL(__SSAT((accum<<1),28), inlet_LEVEL); // with sum level]]></code.srate>
            </object>
         </patchobj>
         <obj type="drj/osc/sin_pm_s_b" uuid="6e0087345c122da9dbf7ebfa72e44e4700d2b3ba" name="sin_pm_s_b_1" x="630" y="1582">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="osc/brds/triangle" uuid="d3f45352-557a-4f95-9bc8-5f16f35553c5" name="triangle_1" x="742" y="1582">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="osc/brds/vsaw" uuid="40fa615c-6c61-44e9-a75c-9d19ec85475a" name="vsaw_1" x="854" y="1582">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
               <frac32.u.map name="timbre" value="2.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="osc/pwm" uuid="a6b40ff63f161d8bac8ea2eba5b0dbffcf49b472" name="pwm_2" x="966" y="1582">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="LFO LEVEL TOUCH" x="1316" y="1596">
            <params>
               <frac32.u.map name="value" onParent="true" value="18.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/send f" uuid="8a7799ea1c3b8582991e669a4f70e2f663841f2d" name="S_LFO_LEVEL_TOUCH" x="1414" y="1596">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_24" x="1134" y="1624">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_LFO_CUTOFF"/>
            </attribs>
         </obj>
         <patchobj type="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f" name="adsr_15" x="210" y="1708">
            <params/>
            <attribs>
               <spinner attributeName="sourceIndex" value="3"/>
               <objref attributeName="synthControlTable" obj="../synthControl"/>
               <objref attributeName="ref" obj="../globals"/>
            </attribs>
            <object id="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f">
               <sDescription>Attack/decay/sustain/release envelope</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>adsr.axh</helpPatch>
               <inlets>
                  <bool32.risingfalling name="gate" description="gate"/>
               </inlets>
               <outlets>
                  <frac32.positive name="env"/>
                  <frac32.bipolar name="pitch"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="sourceIndex" MinValue="1" MaxValue="5" DefaultValue="0"/>
                  <objref name="synthControlTable"/>
                  <objref name="ref"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[// Adsr
int8_t stage;
int ntrig;
int32_t val;

// Glide
int8_t glideStage = 0;
int32_t glideVal;
int32_t glideTime;
int32_t glideOffset;
bool glideInvert = false;

// Octave Switch
uint8_t octaveFaderValue;
int8_t lastOctaveFaderValue = -1; // init in the beginning
int8_t octaveOffset;
int8_t octaveThresholds[7] = { 6, 29, 52, 76, 99, 121, 127};

// source parameters
int32_t level;
int32_t tune;
int32_t attack;
int32_t decay;
int32_t sustain;

// global parameters
int32_t globalRelease;]]></code.declaration>
               <code.init><![CDATA[glideStage = stage = 0;
ntrig = 0;
val = 0;]]></code.init>
               <code.krate><![CDATA[// unipolar to bipoloar conversion => unipolar - (1<<26)<<1;
// int to frac32 conversion => int << (27-7) 

// load input data
switch (attr_sourceIndex) {
	case 1:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source1Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source1Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source1Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source1Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 2:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source2Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source2Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source2Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source2Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source2Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source2Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source2GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source2GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 3:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source3Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source3Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source3Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source3Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source3Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source3Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source3GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source3GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 4: 
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source4Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source4Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source4Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source4Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source4Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source4Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source4GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source4GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);	
		break;
	case 5:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source5Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source5Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source5Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source5Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
}
globalRelease = (attr_synthControlTable.array[attr_ref.PARAMS->release.tIndex] << (27-7)) - (1<<26)<<1;

// process octave switch
if (octaveFaderValue != lastOctaveFaderValue) {
	lastOctaveFaderValue = octaveFaderValue; 
	for (octaveOffset = 0; octaveOffset < 8; octaveOffset++) {
		if (octaveFaderValue <= octaveThresholds[octaveOffset]) break;
	}
	//LogTextMessage("octaveOffset %3D", octaveOffset);
}

// Gate
if ((inlet_gate>0) && !ntrig) {
   glideStage = stage = 1; 
   ntrig = 1;
}
if (!(inlet_gate>0) && ntrig) {
   stage = 0;
   ntrig=0;
}

// Glide
if (glideStage == 0) {
	int32_t r1;
	MTOF(- glideTime, r1);
	r1 = 0x7FFFFFFF - (r1 >> 2);
	glideVal = ___SMMUL(glideVal,r1)<<1;
} else 
if (glideStage == 1) {
   if (glideOffset < 0) {
   	glideVal = abs(glideOffset+1) >> 2;
   	glideInvert = true;
   } else {
   	glideInvert = false;
   	glideVal = (glideOffset) >> 2;
   }
   glideStage = 0;
}
if (glideInvert) {
	outlet_pitch = -(glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} else {
	outlet_pitch = (glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} 

// Adsr Envelope
if (stage == 0){
   int32_t r1;
   MTOF(- globalRelease, r1);
   r1 = 0x7FFFFFFF - (r1 >> 2);
   val = ___SMMUL(val,r1)<<1;
} else if (stage == 1){
   int32_t a;
   MTOF(- attack,a);
   a = a >> 2;
   val = val + a;
   if (val<0) {
      val =0x7FFFFFFF;
      stage = 2;
   }
} else if (stage == 2) {
   int32_t s = __USAT(sustain, 27);
   int32_t d;
   MTOF(- decay, d);
   d = 0x7FFFFFFF - (d >> 2);
   val = (s<<4) + (___SMMUL(val - (s<<4),d)<<1);
}
outlet_env = ___SMMUL(val>>1,level<<2);]]></code.krate>
            </object>
         </patchobj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="742" y="1722">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/recv f" uuid="d36a51b111e0f72d0012e207d467e1f1052116ef" name="recv_48" x="826" y="1750">
            <params/>
            <attribs>
               <objref attributeName="sender" obj="S_INT_TOUCH"/>
            </attribs>
         </obj>
         <obj type="noise/uniform" uuid="a3926ef22ae9ac217cd09933d90101848796eb78" name="uniform_1" x="672" y="1834">
            <params/>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f" name="adsr_16" x="210" y="1848">
            <params/>
            <attribs>
               <spinner attributeName="sourceIndex" value="4"/>
               <objref attributeName="synthControlTable" obj="../synthControl"/>
               <objref attributeName="ref" obj="../globals"/>
            </attribs>
            <object id="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f">
               <sDescription>Attack/decay/sustain/release envelope</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>adsr.axh</helpPatch>
               <inlets>
                  <bool32.risingfalling name="gate" description="gate"/>
               </inlets>
               <outlets>
                  <frac32.positive name="env"/>
                  <frac32.bipolar name="pitch"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="sourceIndex" MinValue="1" MaxValue="5" DefaultValue="0"/>
                  <objref name="synthControlTable"/>
                  <objref name="ref"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[// Adsr
int8_t stage;
int ntrig;
int32_t val;

// Glide
int8_t glideStage = 0;
int32_t glideVal;
int32_t glideTime;
int32_t glideOffset;
bool glideInvert = false;

// Octave Switch
uint8_t octaveFaderValue;
int8_t lastOctaveFaderValue = -1; // init in the beginning
int8_t octaveOffset;
int8_t octaveThresholds[7] = { 6, 29, 52, 76, 99, 121, 127};

// source parameters
int32_t level;
int32_t tune;
int32_t attack;
int32_t decay;
int32_t sustain;

// global parameters
int32_t globalRelease;]]></code.declaration>
               <code.init><![CDATA[glideStage = stage = 0;
ntrig = 0;
val = 0;]]></code.init>
               <code.krate><![CDATA[// unipolar to bipoloar conversion => unipolar - (1<<26)<<1;
// int to frac32 conversion => int << (27-7) 

// load input data
switch (attr_sourceIndex) {
	case 1:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source1Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source1Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source1Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source1Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 2:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source2Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source2Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source2Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source2Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source2Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source2Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source2GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source2GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 3:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source3Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source3Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source3Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source3Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source3Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source3Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source3GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source3GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 4: 
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source4Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source4Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source4Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source4Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source4Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source4Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source4GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source4GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);	
		break;
	case 5:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source5Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source5Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source5Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source5Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
}
globalRelease = (attr_synthControlTable.array[attr_ref.PARAMS->release.tIndex] << (27-7)) - (1<<26)<<1;

// process octave switch
if (octaveFaderValue != lastOctaveFaderValue) {
	lastOctaveFaderValue = octaveFaderValue; 
	for (octaveOffset = 0; octaveOffset < 8; octaveOffset++) {
		if (octaveFaderValue <= octaveThresholds[octaveOffset]) break;
	}
	//LogTextMessage("octaveOffset %3D", octaveOffset);
}

// Gate
if ((inlet_gate>0) && !ntrig) {
   glideStage = stage = 1; 
   ntrig = 1;
}
if (!(inlet_gate>0) && ntrig) {
   stage = 0;
   ntrig=0;
}

// Glide
if (glideStage == 0) {
	int32_t r1;
	MTOF(- glideTime, r1);
	r1 = 0x7FFFFFFF - (r1 >> 2);
	glideVal = ___SMMUL(glideVal,r1)<<1;
} else 
if (glideStage == 1) {
   if (glideOffset < 0) {
   	glideVal = abs(glideOffset+1) >> 2;
   	glideInvert = true;
   } else {
   	glideInvert = false;
   	glideVal = (glideOffset) >> 2;
   }
   glideStage = 0;
}
if (glideInvert) {
	outlet_pitch = -(glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} else {
	outlet_pitch = (glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} 

// Adsr Envelope
if (stage == 0){
   int32_t r1;
   MTOF(- globalRelease, r1);
   r1 = 0x7FFFFFFF - (r1 >> 2);
   val = ___SMMUL(val,r1)<<1;
} else if (stage == 1){
   int32_t a;
   MTOF(- attack,a);
   a = a >> 2;
   val = val + a;
   if (val<0) {
      val =0x7FFFFFFF;
      stage = 2;
   }
} else if (stage == 2) {
   int32_t s = __USAT(sustain, 27);
   int32_t d;
   MTOF(- decay, d);
   d = 0x7FFFFFFF - (d >> 2);
   val = (s<<4) + (___SMMUL(val - (s<<4),d)<<1);
}
outlet_env = ___SMMUL(val>>1,level<<2);]]></code.krate>
            </object>
         </patchobj>
         <patchobj type="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f" name="adsr_17" x="210" y="1988">
            <params/>
            <attribs>
               <spinner attributeName="sourceIndex" value="5"/>
               <objref attributeName="synthControlTable" obj="../synthControl"/>
               <objref attributeName="ref" obj="../globals"/>
            </attribs>
            <object id="patch/object" uuid="a043fe1d-cd57-43b5-8d22-d28696a69c3f">
               <sDescription>Attack/decay/sustain/release envelope</sDescription>
               <author>Johannes Taelman</author>
               <license>BSD</license>
               <helpPatch>adsr.axh</helpPatch>
               <inlets>
                  <bool32.risingfalling name="gate" description="gate"/>
               </inlets>
               <outlets>
                  <frac32.positive name="env"/>
                  <frac32.bipolar name="pitch"/>
               </outlets>
               <displays/>
               <params/>
               <attribs>
                  <spinner name="sourceIndex" MinValue="1" MaxValue="5" DefaultValue="0"/>
                  <objref name="synthControlTable"/>
                  <objref name="ref"/>
               </attribs>
               <includes/>
               <code.declaration><![CDATA[// Adsr
int8_t stage;
int ntrig;
int32_t val;

// Glide
int8_t glideStage = 0;
int32_t glideVal;
int32_t glideTime;
int32_t glideOffset;
bool glideInvert = false;

// Octave Switch
uint8_t octaveFaderValue;
int8_t lastOctaveFaderValue = -1; // init in the beginning
int8_t octaveOffset;
int8_t octaveThresholds[7] = { 6, 29, 52, 76, 99, 121, 127};

// source parameters
int32_t level;
int32_t tune;
int32_t attack;
int32_t decay;
int32_t sustain;

// global parameters
int32_t globalRelease;]]></code.declaration>
               <code.init><![CDATA[glideStage = stage = 0;
ntrig = 0;
val = 0;]]></code.init>
               <code.krate><![CDATA[// unipolar to bipoloar conversion => unipolar - (1<<26)<<1;
// int to frac32 conversion => int << (27-7) 

// load input data
switch (attr_sourceIndex) {
	case 1:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source1Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source1Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source1Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source1Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 2:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source2Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source2Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source2Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source2Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source2Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source2Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source2GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source2GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 3:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source3Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source3Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source3Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source3Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source3Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source3Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source3GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source3GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
	case 4: 
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source4Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source4Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source4Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source4Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source4Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source4Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source4GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source4GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);	
		break;
	case 5:
		octaveFaderValue = attr_synthControlTable.array[attr_ref.PARAMS->source1Octave.tIndex]; // 0 - 127
		level = attr_synthControlTable.array[attr_ref.PARAMS->source5Level.tIndex] << (27-7);
		tune = attr_synthControlTable.array[attr_ref.PARAMS->source1Tune.tIndex] << (27-7);
		attack = (attr_synthControlTable.array[attr_ref.PARAMS->source5Attack.tIndex] << (27-7)) - (1<<26)<<1;
		decay = (attr_synthControlTable.array[attr_ref.PARAMS->source5Decay.tIndex] << (27-7)) - (1<<26)<<1;
		sustain = attr_synthControlTable.array[attr_ref.PARAMS->source5Sustain.tIndex] << (27-7);
		glideTime = (attr_synthControlTable.array[attr_ref.PARAMS->source1GlideTime.tIndex] << (27-7)) - (1<<26)<<1;
		glideOffset = ((attr_synthControlTable.array[attr_ref.PARAMS->source1GlideOffset.tIndex] << (27-7)) - (1<<26)<<1);
		break;
}
globalRelease = (attr_synthControlTable.array[attr_ref.PARAMS->release.tIndex] << (27-7)) - (1<<26)<<1;

// process octave switch
if (octaveFaderValue != lastOctaveFaderValue) {
	lastOctaveFaderValue = octaveFaderValue; 
	for (octaveOffset = 0; octaveOffset < 8; octaveOffset++) {
		if (octaveFaderValue <= octaveThresholds[octaveOffset]) break;
	}
	//LogTextMessage("octaveOffset %3D", octaveOffset);
}

// Gate
if ((inlet_gate>0) && !ntrig) {
   glideStage = stage = 1; 
   ntrig = 1;
}
if (!(inlet_gate>0) && ntrig) {
   stage = 0;
   ntrig=0;
}

// Glide
if (glideStage == 0) {
	int32_t r1;
	MTOF(- glideTime, r1);
	r1 = 0x7FFFFFFF - (r1 >> 2);
	glideVal = ___SMMUL(glideVal,r1)<<1;
} else 
if (glideStage == 1) {
   if (glideOffset < 0) {
   	glideVal = abs(glideOffset+1) >> 2;
   	glideInvert = true;
   } else {
   	glideInvert = false;
   	glideVal = (glideOffset) >> 2;
   }
   glideStage = 0;
}
if (glideInvert) {
	outlet_pitch = -(glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} else {
	outlet_pitch = (glideVal>>4)+(((octaveOffset-3) << (27 - 6)))*12 + (((tune-(1<<26))<<1)/64);
} 

// Adsr Envelope
if (stage == 0){
   int32_t r1;
   MTOF(- globalRelease, r1);
   r1 = 0x7FFFFFFF - (r1 >> 2);
   val = ___SMMUL(val,r1)<<1;
} else if (stage == 1){
   int32_t a;
   MTOF(- attack,a);
   a = a >> 2;
   val = val + a;
   if (val<0) {
      val =0x7FFFFFFF;
      stage = 2;
   }
} else if (stage == 2) {
   int32_t s = __USAT(sustain, 27);
   int32_t d;
   MTOF(- decay, d);
   d = 0x7FFFFFFF - (d >> 2);
   val = (s<<4) + (___SMMUL(val - (s<<4),d)<<1);
}
outlet_env = ___SMMUL(val>>1,level<<2);]]></code.krate>
            </object>
         </patchobj>
         <nets>
            <net>
               <source obj="recv_12" outlet="v"/>
               <dest obj="VCA _LOGIC" inlet="ENVELOPE"/>
            </net>
            <net>
               <source obj="VEL RELEASE" outlet="out"/>
               <dest obj="S_VEL_RELEASE" inlet="v"/>
            </net>
            <net>
               <source obj="VEL ATTACK" outlet="out"/>
               <dest obj="S_VEL_ATTACK" inlet="v"/>
            </net>
            <net>
               <source obj="CUTOFF LFO AMOUNT" outlet="out"/>
               <dest obj="S_LFO_CUTOFF" inlet="v"/>
            </net>
            <net>
               <source obj="recv_14" outlet="v"/>
               <dest obj="VCA _LOGIC" inlet="VELOCITY"/>
            </net>
            <net>
               <source obj="recv_19" outlet="v"/>
               <dest obj="VCA _LOGIC" inlet="VOLUME VEL"/>
            </net>
            <net>
               <source obj="LFO2 FREQ" outlet="inlet"/>
               <dest obj="mux_1" inlet="i1"/>
            </net>
            <net>
               <source obj="LFO1 FREQ" outlet="inlet"/>
               <dest obj="mux_1" inlet="i0"/>
            </net>
            <net>
               <source obj="LFO3 FREQ" outlet="inlet"/>
               <dest obj="mux_1" inlet="i2"/>
            </net>
            <net>
               <source obj="recv_3" outlet="v"/>
               <dest obj="demux_1" inlet="i"/>
            </net>
            <net>
               <source obj="mux_1" outlet="o"/>
               <dest obj="map_1" inlet="c"/>
            </net>
            <net>
               <source obj="map_1" outlet="o"/>
               <dest obj="S_LFO_FREQ" inlet="v"/>
            </net>
            <net>
               <source obj="recv_27" outlet="v"/>
               <dest obj="demux_1" inlet="s"/>
               <dest obj="mux_1" inlet="s"/>
            </net>
            <net>
               <source obj="demux_1" outlet="o0"/>
               <dest obj="GATE 1" inlet="outlet"/>
            </net>
            <net>
               <source obj="demux_1" outlet="o1"/>
               <dest obj="GATE 2" inlet="outlet"/>
            </net>
            <net>
               <source obj="demux_1" outlet="o2"/>
               <dest obj="GATE 3" inlet="outlet"/>
            </net>
            <net>
               <source obj="recv_9" outlet="v"/>
               <dest obj="+_2" inlet="in1"/>
            </net>
            <net>
               <source obj="recv_25" outlet="v"/>
               <dest obj="sum3_1" inlet="in1"/>
            </net>
            <net>
               <source obj="ADSR LOGIC" outlet="ENVELOPE"/>
               <dest obj="S_INT_ENVELOPE" inlet="v"/>
            </net>
            <net>
               <source obj="recv_1" outlet="v"/>
               <dest obj="ADSR LOGIC" inlet="GATE"/>
            </net>
            <net>
               <source obj="recv_21" outlet="v"/>
               <dest obj="ADSR LOGIC" inlet="VELOCITY"/>
            </net>
            <net>
               <source obj="recv_20" outlet="v"/>
               <dest obj="ADSR LOGIC" inlet="VEL A"/>
            </net>
            <net>
               <source obj="recv_16" outlet="v"/>
               <dest obj="ADSR LOGIC" inlet="A"/>
            </net>
            <net>
               <source obj="recv_4" outlet="v"/>
               <dest obj="ADSR LOGIC" inlet="D"/>
            </net>
            <net>
               <source obj="recv_5" outlet="v"/>
               <dest obj="ADSR LOGIC" inlet="S"/>
            </net>
            <net>
               <source obj="recv_6" outlet="v"/>
               <dest obj="ADSR LOGIC" inlet="R"/>
            </net>
            <net>
               <source obj="recv_15" outlet="v"/>
               <dest obj="ADSR LOGIC" inlet="VEL R"/>
            </net>
            <net>
               <source obj="VOLUME" outlet="out"/>
               <dest obj="S_VOLUME" inlet="v"/>
            </net>
            <net>
               <source obj="recv_17" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="NOTE"/>
            </net>
            <net>
               <source obj="recv_23" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="VELOCITY"/>
            </net>
            <net>
               <source obj="recv_18" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="CUTOFF"/>
            </net>
            <net>
               <source obj="recv_30" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="RESONANCE"/>
            </net>
            <net>
               <source obj="recv_22" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="VEL CUTOFF"/>
            </net>
            <net>
               <source obj="recv_7" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="KEYFOLLOW"/>
            </net>
            <net>
               <source obj="recv_11" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="ENVELOPE"/>
            </net>
            <net>
               <source obj="recv_10" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="ENV CUTOFF"/>
            </net>
            <net>
               <source obj="recv_24" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="LFO CUTOFF"/>
            </net>
            <net>
               <source obj="recv_31" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="LFO"/>
            </net>
            <net>
               <source obj="recv_26" outlet="v"/>
               <dest obj="+_1" inlet="in1"/>
            </net>
            <net>
               <source obj="+_1" outlet="out"/>
               <dest obj="S_INT_PWM" inlet="v"/>
            </net>
            <net>
               <source obj="recv_34" outlet="v"/>
               <dest obj="*_1" inlet="b"/>
            </net>
            <net>
               <source obj="recv_33" outlet="v"/>
               <dest obj="*_1" inlet="a"/>
            </net>
            <net>
               <source obj="*_1" outlet="result"/>
               <dest obj="+_1" inlet="in2"/>
            </net>
            <net>
               <source obj="recv_13" outlet="v"/>
               <dest obj="+_2" inlet="in2"/>
            </net>
            <net>
               <source obj="+_2" outlet="out"/>
               <dest obj="slowsine_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="latch_1" outlet="o"/>
               <dest obj="S_VOICE_SELECT" inlet="v"/>
            </net>
            <net>
               <source obj="recv_8" outlet="v"/>
               <dest obj="latch_1" inlet="trig"/>
            </net>
            <net>
               <source obj="inlet_1" outlet="inlet"/>
               <dest obj="latch_1" inlet="i"/>
            </net>
            <net>
               <source obj="recv_35" outlet="v"/>
               <dest obj="FILTER LOGIC" inlet="TOUCH"/>
            </net>
            <net>
               <source obj="recv_36" outlet="v"/>
               <dest obj="*_2" inlet="a"/>
            </net>
            <net>
               <source obj="*_2" outlet="result"/>
               <dest obj="xfade_1" inlet="i2"/>
            </net>
            <net>
               <source obj="recv_37" outlet="v"/>
               <dest obj="VCA _LOGIC" inlet="TOUCH"/>
            </net>
            <net>
               <source obj="VOLUME TOUCH" outlet="out"/>
               <dest obj="S_VOLUME_TOUCH" inlet="v"/>
            </net>
            <net>
               <source obj="recv_38" outlet="v"/>
               <dest obj="VCA _LOGIC" inlet="VOLUME TOUCH"/>
            </net>
            <net>
               <source obj="LFO LEVEL TOUCH" outlet="out"/>
               <dest obj="S_LFO_LEVEL_TOUCH" inlet="v"/>
            </net>
            <net>
               <source obj="xfade_1" outlet="o"/>
               <dest obj="*_3" inlet="a"/>
            </net>
            <net>
               <source obj="recv_39" outlet="v"/>
               <dest obj="xfade_1" inlet="c"/>
            </net>
            <net>
               <source obj="LFO LEVEL" outlet="out"/>
               <dest obj="S_LFO_LEVEL" inlet="v"/>
            </net>
            <net>
               <source obj="recv_40" outlet="v"/>
               <dest obj="*_3" inlet="b"/>
            </net>
            <net>
               <source obj="*_3" outlet="result"/>
               <dest obj="S_INT_LFO" inlet="v"/>
            </net>
            <net>
               <source obj="PITCH LFO" outlet="out"/>
               <dest obj="S_PITCH_LFO" inlet="v"/>
            </net>
            <net>
               <source obj="recv_41" outlet="v"/>
               <dest obj="*_4" inlet="a"/>
            </net>
            <net>
               <source obj="recv_42" outlet="v"/>
               <dest obj="*_4" inlet="b"/>
            </net>
            <net>
               <source obj="*_4" outlet="result"/>
               <dest obj="div_1" inlet="in"/>
            </net>
            <net>
               <source obj="TREMOLO FREQ" outlet="out"/>
               <dest obj="S_TREMOLO_FREQ" inlet="v"/>
            </net>
            <net>
               <source obj="TREMOLO LEVEL" outlet="out"/>
               <dest obj="S_TREMOLO_LEVEL" inlet="v"/>
            </net>
            <net>
               <source obj="recv_43" outlet="v"/>
               <dest obj="TREMOLO LFO" inlet="pitch"/>
            </net>
            <net>
               <source obj="TREMOLO LFO" outlet="wave"/>
               <dest obj="*_5" inlet="a"/>
            </net>
            <net>
               <source obj="recv_44" outlet="v"/>
               <dest obj="*_5" inlet="b"/>
            </net>
            <net>
               <source obj="*_5" outlet="result"/>
               <dest obj="div_2" inlet="in"/>
            </net>
            <net>
               <source obj="div_1" outlet="out"/>
               <dest obj="sum3_1" inlet="in2"/>
            </net>
            <net>
               <source obj="recv_45" outlet="v"/>
               <dest obj="sum3_1" inlet="in3"/>
            </net>
            <net>
               <source obj="sum3_1" outlet="out"/>
               <dest obj="S_INT_PITCH" inlet="v"/>
            </net>
            <net>
               <source obj="div_2" outlet="out"/>
               <dest obj="S_INT_TREMOLO" inlet="v"/>
            </net>
            <net>
               <source obj="SOURCE_TUNER" outlet="pSIN"/>
               <dest obj="sin_pm_s_b_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="SOURCE_TUNER" outlet="pTRI"/>
               <dest obj="triangle_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="SOURCE_TUNER" outlet="pSAW"/>
               <dest obj="vsaw_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="sin_pm_s_b_1" outlet="out"/>
               <dest obj="SOURCE_TUNER" inlet="SIN"/>
            </net>
            <net>
               <source obj="triangle_1" outlet="wave"/>
               <dest obj="SOURCE_TUNER" inlet="TRI"/>
            </net>
            <net>
               <source obj="vsaw_1" outlet="wave"/>
               <dest obj="SOURCE_TUNER" inlet="SAW"/>
            </net>
            <net>
               <source obj="recv_46" outlet="v"/>
               <dest obj="SOURCE_TUNER" inlet="note"/>
            </net>
            <net>
               <source obj="recv_47" outlet="v"/>
               <dest obj="pwm_2" inlet="pw"/>
            </net>
            <net>
               <source obj="pwm_2" outlet="wave"/>
               <dest obj="SOURCE_TUNER" inlet="SQR"/>
            </net>
            <net>
               <source obj="SOURCE_TUNER" outlet="pSQR"/>
               <dest obj="pwm_2" inlet="pitch"/>
            </net>
            <net>
               <source obj="VCA _LOGIC" outlet="OUT"/>
               <dest obj="outlet_1" inlet="outlet"/>
            </net>
            <net>
               <source obj="uniform_1" outlet="wave"/>
               <dest obj="SOURCE_TUNER" inlet="NOISE"/>
            </net>
            <net>
               <source obj="recv_48" outlet="v"/>
               <dest obj="vca_1" inlet="v"/>
            </net>
            <net>
               <source obj="recv_2" outlet="v"/>
               <dest obj="VCA _LOGIC" inlet="VOLUME"/>
            </net>
            <net>
               <source obj="ADSR LOGIC_" outlet="ENVELOPE"/>
               <dest obj="S_INT_ENVELOPE2" inlet="v"/>
            </net>
            <net>
               <source obj="recv_49" outlet="v"/>
               <dest obj="ADSR LOGIC_" inlet="GATE"/>
            </net>
            <net>
               <source obj="recv_50" outlet="v"/>
               <dest obj="ADSR LOGIC_" inlet="VELOCITY"/>
            </net>
            <net>
               <source obj="recv_52" outlet="v"/>
               <dest obj="ADSR LOGIC_" inlet="VEL A"/>
            </net>
            <net>
               <source obj="recv_51" outlet="v"/>
               <dest obj="ADSR LOGIC_" inlet="A"/>
            </net>
            <net>
               <source obj="recv_53" outlet="v"/>
               <dest obj="ADSR LOGIC_" inlet="D"/>
            </net>
            <net>
               <source obj="recv_54" outlet="v"/>
               <dest obj="ADSR LOGIC_" inlet="S"/>
            </net>
            <net>
               <source obj="recv_55" outlet="v"/>
               <dest obj="ADSR LOGIC_" inlet="R"/>
            </net>
            <net>
               <source obj="recv_56" outlet="v"/>
               <dest obj="ADSR LOGIC_" inlet="VEL R"/>
            </net>
            <net>
               <source obj="keyb_2" outlet="note"/>
               <dest obj="S_INT_NOTE" inlet="v"/>
            </net>
            <net>
               <source obj="keyb_2" outlet="gate"/>
               <dest obj="S_INT_GATE" inlet="v"/>
            </net>
            <net>
               <source obj="keyb_2" outlet="velocity"/>
               <dest obj="S_INT_VELOCITY" inlet="v"/>
            </net>
            <net>
               <source obj="keyb_2" outlet="touch"/>
               <dest obj="S_INT_TOUCH" inlet="v"/>
            </net>
            <net>
               <source obj="adsr_13" outlet="env"/>
               <dest obj="SOURCE_TUNER" inlet="envSIN"/>
            </net>
            <net>
               <source obj="adsr_13" outlet="pitch"/>
               <dest obj="SOURCE_TUNER" inlet="pSIN"/>
            </net>
            <net>
               <source obj="SOURCE_TUNER" outlet="mix"/>
               <dest obj="FILTER LOGIC" inlet="AUDIO"/>
            </net>
            <net>
               <source obj="LFO FREQ" outlet="inlet"/>
               <dest obj="S_LFO_FREQ_COARSE" inlet="v"/>
            </net>
            <net>
               <source obj="recv_61" outlet="v"/>
               <dest obj="adsr_14" inlet="gate"/>
               <dest obj="adsr_15" inlet="gate"/>
               <dest obj="adsr_16" inlet="gate"/>
               <dest obj="adsr_17" inlet="gate"/>
               <dest obj="adsr_13" inlet="gate"/>
            </net>
            <net>
               <source obj="adsr_14" outlet="env"/>
               <dest obj="SOURCE_TUNER" inlet="envTRI"/>
            </net>
            <net>
               <source obj="adsr_14" outlet="pitch"/>
               <dest obj="SOURCE_TUNER" inlet="pTRI"/>
            </net>
            <net>
               <source obj="adsr_15" outlet="pitch"/>
               <dest obj="SOURCE_TUNER" inlet="pSAW"/>
            </net>
            <net>
               <source obj="adsr_16" outlet="env"/>
               <dest obj="SOURCE_TUNER" inlet="envSQR"/>
            </net>
            <net>
               <source obj="adsr_16" outlet="pitch"/>
               <dest obj="SOURCE_TUNER" inlet="pSQR"/>
            </net>
            <net>
               <source obj="adsr_17" outlet="env"/>
               <dest obj="SOURCE_TUNER" inlet="envNOISE"/>
            </net>
            <net>
               <source obj="adsr_15" outlet="env"/>
               <dest obj="SOURCE_TUNER" inlet="envSAW"/>
            </net>
            <net>
               <source obj="cutoff" outlet="inlet"/>
               <dest obj="S_CUTOFF" inlet="v"/>
            </net>
            <net>
               <source obj="pwm" outlet="inlet"/>
               <dest obj="S_PULSEWIDTH" inlet="v"/>
            </net>
            <net>
               <source obj="pwmMod" outlet="inlet"/>
               <dest obj="S_LFO_PWM" inlet="v"/>
            </net>
            <net>
               <source obj="attack" outlet="inlet"/>
               <dest obj="S_ATTACK" inlet="v"/>
            </net>
            <net>
               <source obj="decay" outlet="inlet"/>
               <dest obj="S_DECAY" inlet="v"/>
            </net>
            <net>
               <source obj="sustain" outlet="inlet"/>
               <dest obj="S_SUSTAIN" inlet="v"/>
            </net>
            <net>
               <source obj="release" outlet="inlet"/>
               <dest obj="S_RELEASE" inlet="v"/>
            </net>
            <net>
               <source obj="fAttack" outlet="inlet"/>
               <dest obj="S_ATTACK2" inlet="v"/>
            </net>
            <net>
               <source obj="fDecay" outlet="inlet"/>
               <dest obj="S_DECAY2" inlet="v"/>
            </net>
            <net>
               <source obj="fSustain" outlet="inlet"/>
               <dest obj="S_SUSTAIN2" inlet="v"/>
            </net>
            <net>
               <source obj="fRelease" outlet="inlet"/>
               <dest obj="S_RELEASE2" inlet="v"/>
            </net>
            <net>
               <source obj="FILTER LOGIC" outlet="FILTER OUTPUT"/>
               <dest obj="VCA _LOGIC" inlet="AUDIO"/>
            </net>
            <net>
               <source obj="resonance" outlet="inlet"/>
               <dest obj="S_RESONANCE" inlet="v"/>
            </net>
            <net>
               <source obj="velocity impact on params" outlet="velVolume"/>
               <dest obj="S_VEL_VOLUME" inlet="v"/>
            </net>
            <net>
               <source obj="envelope impact on params" outlet="envFilter"/>
               <dest obj="S_INT_ENV_CUTOFF" inlet="v"/>
            </net>
            <net>
               <source obj="*_6" outlet="result"/>
               <dest obj="*_2" inlet="b"/>
               <dest obj="xfade_1" inlet="i1"/>
            </net>
            <net>
               <source obj="recv_62" outlet="v"/>
               <dest obj="ahd_1" inlet="gate"/>
            </net>
            <net>
               <source obj="recv_28" outlet="v"/>
               <dest obj="ahd_1" inlet="delay"/>
            </net>
            <net>
               <source obj="lfoDelay" outlet="inlet"/>
               <dest obj="S_LFO_DELAY" inlet="v"/>
            </net>
            <net>
               <source obj="slowsine_1" outlet="wave"/>
               <dest obj="*_6" inlet="a"/>
            </net>
            <net>
               <source obj="ahd_1" outlet="env"/>
               <dest obj="*_6" inlet="b"/>
            </net>
         </nets>
         <settings>
            <subpatchmode>polyphonic</subpatchmode>
            <MidiChannel>1</MidiChannel>
            <NPresets>8</NPresets>
            <NPresetEntries>32</NPresetEntries>
            <NModulationSources>8</NModulationSources>
            <NModulationTargetsPerSource>8</NModulationTargetsPerSource>
         </settings>
         <notes><![CDATA[]]></notes>
         <windowPos>
            <x>-8</x>
            <y>-8</y>
            <width>1936</width>
            <height>1056</height>
         </windowPos>
      </subpatch>
   </patcher>
   <obj type="rbrt/patching/loadbang" uuid="45d1f29d-ac62-4e5b-86f8-2201d2f6c689" name="loadbang_1" x="1260" y="112">
      <params/>
      <attribs/>
   </obj>
   <obj type="sss/table/saveloadPreset" uuid="06ecdc5e-17ed-4720-acb3-d07ba87ae6e2" name="saveloadPreset_1" x="1470" y="112">
      <params/>
      <attribs>
         <objref attributeName="table" obj="synthControl"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="10beb70b-1805-4390-b87b-b4b90148aeaa" name="button_2" x="1610" y="112">
      <params/>
      <attribs>
         <objref attributeName="synthControlTable" obj="synthControl"/>
      </attribs>
      <object id="patch/object" uuid="10beb70b-1805-4390-b87b-b4b90148aeaa">
         <sDescription>constant boolean, momentary control</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>ctrl.axh</helpPatch>
         <inlets/>
         <outlets>
            <bool32 name="o" description="output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <objref name="synthControlTable"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[outlet_o=attr_synthControlTable.array[0];]]></code.krate>
      </object>
   </patchobj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_2" x="1120" y="140">
      <params/>
      <attribs/>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_1" x="1232" y="168">
      <params/>
      <attribs>
         <table attributeName="str" table="/datatime.run"/>
      </attribs>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_3" x="1120" y="196">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="d1f528f4-7e10-4d1a-8ee7-05582e53c0c5" name="object_3" x="1470" y="210">
      <params/>
      <attribs>
         <objref attributeName="synthControlTable" obj="synthControl"/>
      </attribs>
      <object id="patch/object" uuid="d1f528f4-7e10-4d1a-8ee7-05582e53c0c5">
         <inlets>
            <bool32 name="trig"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs>
            <objref name="synthControlTable"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int8_t ntrig;]]></code.declaration>
         <code.init><![CDATA[ntrig = 0;]]></code.init>
         <code.krate><![CDATA[if ((inlet_trig > 0) && !ntrig) {
	for (int i = 100; i<attr_synthControlTable.LENGTH; i++) {
		attr_synthControlTable.array[i] = 0;
	}
}
else if (!(inlet_trig > 0)){ntrig = 0;}]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="d7b4704e-fc3d-440c-b661-492113285c93" name="object" x="532" y="266">
      <params/>
      <attribs>
         <objref attributeName="synthControlTable" obj="synthControl"/>
         <objref attributeName="ref" obj="globals"/>
      </attribs>
      <object id="patch/object" uuid="d7b4704e-fc3d-440c-b661-492113285c93">
         <inlets/>
         <outlets>
            <frac32 name="attack"/>
            <frac32 name="decay"/>
            <frac32 name="sustain"/>
            <frac32 name="release"/>
            <frac32 name="fAttack"/>
            <frac32 name="fDecay"/>
            <frac32 name="fSustain"/>
            <frac32 name="fRelease"/>
            <frac32 name="pwm"/>
            <frac32 name="pwmMod"/>
            <frac32 name="lfo"/>
            <frac32 name="lfoKey1"/>
            <frac32 name="lfoKey2"/>
            <frac32 name="lfoKey3"/>
            <frac32 name="cutoff"/>
            <frac32 name="resonance"/>
            <frac32 name="lfoDelay"/>
         </outlets>
         <displays>
            <frac32.s.dial name="attack"/>
            <frac32.s.dial name="decay"/>
            <frac32.u.dial name="sustain"/>
            <frac32.u.dial name="release"/>
            <frac32.s.dial name="filterAttack"/>
            <frac32.s.dial name="filterDecay"/>
            <frac32.u.dial name="filterSustain"/>
            <frac32.u.dial name="filterRelease"/>
            <frac32.s.dial name="pwm"/>
            <frac32.u.dial name="pwmMod"/>
            <frac32.s.dial name="lfo"/>
            <frac32.s.dial name="lfoKey1"/>
            <frac32.s.dial name="lfoKey2"/>
            <frac32.s.dial name="lfoKey3"/>
            <frac32.s.dial name="cutoff"/>
            <frac32.s.dial name="resonance"/>
            <frac32.u.dial name="lfoDelay"/>
         </displays>
         <params/>
         <attribs>
            <objref name="synthControlTable"/>
            <objref name="ref"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[outlet_attack = disp_attack = (attr_synthControlTable.array[attr_ref.PARAMS->attack.tIndex] << (27-7)) - (1<<26)<<1;;
outlet_decay = disp_decay = (attr_synthControlTable.array[attr_ref.PARAMS->decay.tIndex] << (27-7)) - (1<<26)<<1;;
outlet_sustain = disp_sustain = attr_synthControlTable.array[attr_ref.PARAMS->sustain.tIndex] << (27-7);
outlet_release = disp_release= attr_synthControlTable.array[attr_ref.PARAMS->release.tIndex] << (27-7);

outlet_fAttack = disp_filterAttack = (attr_synthControlTable.array[attr_ref.PARAMS->filterAttack.tIndex] << (27-7)) - (1<<26)<<1;
outlet_fDecay= disp_filterDecay = (attr_synthControlTable.array[attr_ref.PARAMS->filterDecay.tIndex] << (27-7)) - (1<<26)<<1;
outlet_fSustain = disp_filterSustain = attr_synthControlTable.array[attr_ref.PARAMS->filterSustain.tIndex] << (27-7);
outlet_fRelease = disp_filterRelease = attr_synthControlTable.array[attr_ref.PARAMS->release.tIndex] << (27-7);

outlet_pwm = disp_pwm = attr_synthControlTable.array[attr_ref.PARAMS->pwm.tIndex] << (27-7);
outlet_pwmMod = disp_pwmMod = attr_synthControlTable.array[attr_ref.PARAMS->pwmMod.tIndex] << (27-7);

outlet_lfo = disp_lfo = (attr_synthControlTable.array[attr_ref.PARAMS->lfoCoarseFreq.tIndex] << (27-7)) - (1<<26)<<1;
outlet_lfoKey1 = disp_lfoKey1 = attr_synthControlTable.array[attr_ref.PARAMS->lfoFreq1.tIndex] << (27-7);
outlet_lfoKey2 = disp_lfoKey2 = attr_synthControlTable.array[attr_ref.PARAMS->lfoFreq2.tIndex] << (27-7);
outlet_lfoKey3 = disp_lfoKey3 = attr_synthControlTable.array[attr_ref.PARAMS->lfoFreq3.tIndex] << (27-7);

outlet_cutoff = disp_cutoff = (attr_synthControlTable.array[attr_ref.PARAMS->filterCutoff.tIndex] << (27-7)) - (1<<26)<<1;
outlet_resonance = disp_resonance = (attr_synthControlTable.array[attr_ref.PARAMS->filterResonance.tIndex] << (27-7)) - (1<<26)<<1;
outlet_lfoDelay = disp_lfoDelay = attr_synthControlTable.array[attr_ref.PARAMS->lfoDelay.tIndex] << (27-7);//) - (1<<26)<<1;]]></code.krate>
      </object>
   </patchobj>
   <obj type="midi/in/monitor" uuid="b51863ca-6afa-4d29-acfd-c8c2fe06cb16" name="monitor_1" x="350" y="350">
      <params>
         <bool32.tgl name="ControlChange" value="0"/>
         <bool32.tgl name="Note" value="0"/>
         <bool32.tgl name="ProgramChange" value="0"/>
         <bool32.tgl name="Bend" value="0"/>
         <bool32.tgl name="PolyPressure" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="1246" y="392">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="d7b2efb7-760f-4227-9fac-096ff68a357c" name="object_4" x="154" y="476">
      <params>
         <int32 name="p1" value="101"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="midiBuffer"/>
      </attribs>
      <object id="patch/object" uuid="d7b2efb7-760f-4227-9fac-096ff68a357c">
         <inlets/>
         <outlets/>
         <displays>
            <int32.label name="d1"/>
            <int32.label name="d2"/>
            <int32.label name="d3"/>
            <int32.label name="d4"/>
            <int32.label name="d5"/>
            <int32.label name="d6"/>
            <int32.label name="d7"/>
            <int32.label name="d8"/>
         </displays>
         <params>
            <int32 name="p1">
               <MinValue i="0"/>
               <MaxValue i="4096"/>
            </int32>
         </params>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[disp_d1 = attr_table.array[param_p1];
disp_d2 = attr_table.array[param_p1+1];
disp_d3 = attr_table.array[param_p1+2];
disp_d4 = attr_table.array[param_p1+3];
disp_d5 = attr_table.array[param_p1+4];
disp_d6 = attr_table.array[param_p1+5];
disp_d7 = attr_table.array[param_p1+6];
disp_d8 = attr_table.array[param_p1+7];]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="d7b2efb7-760f-4227-9fac-096ff68a357c" name="object_2" x="280" y="476">
      <params>
         <int32 name="p1" value="0"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="interfaceControl"/>
      </attribs>
      <object id="patch/object" uuid="d7b2efb7-760f-4227-9fac-096ff68a357c">
         <inlets/>
         <outlets/>
         <displays>
            <int32.label name="d1"/>
            <int32.label name="d2"/>
            <int32.label name="d3"/>
            <int32.label name="d4"/>
            <int32.label name="d5"/>
            <int32.label name="d6"/>
            <int32.label name="d7"/>
            <int32.label name="d8"/>
         </displays>
         <params>
            <int32 name="p1">
               <MinValue i="0"/>
               <MaxValue i="4096"/>
            </int32>
         </params>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[disp_d1 = attr_table.array[param_p1];
disp_d2 = attr_table.array[param_p1+1];
disp_d3 = attr_table.array[param_p1+2];
disp_d4 = attr_table.array[param_p1+3];
disp_d5 = attr_table.array[param_p1+4];
disp_d6 = attr_table.array[param_p1+5];
disp_d7 = attr_table.array[param_p1+6];
disp_d8 = attr_table.array[param_p1+7];]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="d7b2efb7-760f-4227-9fac-096ff68a357c" name="object_1" x="406" y="476">
      <params>
         <int32 name="p1" value="9"/>
      </params>
      <attribs>
         <objref attributeName="table" obj="synthControl"/>
      </attribs>
      <object id="patch/object" uuid="d7b2efb7-760f-4227-9fac-096ff68a357c">
         <inlets/>
         <outlets/>
         <displays>
            <int32.label name="d1"/>
            <int32.label name="d2"/>
            <int32.label name="d3"/>
            <int32.label name="d4"/>
            <int32.label name="d5"/>
            <int32.label name="d6"/>
            <int32.label name="d7"/>
            <int32.label name="d8"/>
         </displays>
         <params>
            <int32 name="p1">
               <MinValue i="0"/>
               <MaxValue i="4096"/>
            </int32>
         </params>
         <attribs>
            <objref name="table"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[disp_d1 = attr_table.array[param_p1];
disp_d2 = attr_table.array[param_p1+1];
disp_d3 = attr_table.array[param_p1+2];
disp_d4 = attr_table.array[param_p1+3];
disp_d5 = attr_table.array[param_p1+4];
disp_d6 = attr_table.array[param_p1+5];
disp_d7 = attr_table.array[param_p1+6];
disp_d8 = attr_table.array[param_p1+7];]]></code.krate>
      </object>
   </patchobj>
   <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_1" x="798" y="588">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="c_1" outlet="out"/>
         <dest obj="saveloadPreset_1" inlet="filename"/>
      </net>
      <net>
         <source obj="loadbang_1" outlet="pulse"/>
         <dest obj="SyncPulse_1" inlet="trig"/>
      </net>
      <net>
         <source obj="SyncPulse_1" outlet="out"/>
         <dest obj="saveloadPreset_1" inlet="load"/>
         <dest obj="object_3" inlet="trig"/>
      </net>
      <net>
         <source obj="button_2" outlet="o"/>
         <dest obj="saveloadPreset_1" inlet="save"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="outlet_1"/>
         <dest obj="out_1" inlet="left"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="object" outlet="lfo"/>
         <dest obj="patcher_1" inlet="LFO FREQ"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="GATE 1"/>
         <dest obj="bool_1" inlet="in"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="GATE 2"/>
         <dest obj="bool_2" inlet="in"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="GATE 3"/>
         <dest obj="bool_3" inlet="in"/>
      </net>
      <net>
         <source obj="voicevariant" outlet="allocatedVoice"/>
         <dest obj="i_1" inlet="in"/>
         <dest obj="patcher_1" inlet="inlet_1"/>
      </net>
      <net>
         <source obj="object" outlet="cutoff"/>
         <dest obj="bipolar2unipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="object" outlet="pwm"/>
         <dest obj="patcher_1" inlet="pwm"/>
      </net>
      <net>
         <source obj="object" outlet="pwmMod"/>
         <dest obj="patcher_1" inlet="pwmMod"/>
      </net>
      <net>
         <source obj="object" outlet="attack"/>
         <dest obj="patcher_1" inlet="attack"/>
      </net>
      <net>
         <source obj="object" outlet="decay"/>
         <dest obj="patcher_1" inlet="decay"/>
      </net>
      <net>
         <source obj="object" outlet="sustain"/>
         <dest obj="patcher_1" inlet="sustain"/>
      </net>
      <net>
         <source obj="object" outlet="release"/>
         <dest obj="patcher_1" inlet="release"/>
      </net>
      <net>
         <source obj="object" outlet="fAttack"/>
         <dest obj="patcher_1" inlet="fAttack"/>
      </net>
      <net>
         <source obj="object" outlet="fDecay"/>
         <dest obj="patcher_1" inlet="fDecay"/>
      </net>
      <net>
         <source obj="object" outlet="fSustain"/>
         <dest obj="patcher_1" inlet="fSustain"/>
      </net>
      <net>
         <source obj="object" outlet="fRelease"/>
         <dest obj="patcher_1" inlet="fRelease"/>
      </net>
      <net>
         <source obj="object" outlet="lfoKey1"/>
         <dest obj="patcher_1" inlet="LFO1 FREQ"/>
      </net>
      <net>
         <source obj="object" outlet="lfoKey2"/>
         <dest obj="patcher_1" inlet="LFO2 FREQ"/>
      </net>
      <net>
         <source obj="object" outlet="lfoKey3"/>
         <dest obj="patcher_1" inlet="LFO3 FREQ"/>
      </net>
      <net>
         <source obj="object" outlet="resonance"/>
         <dest obj="patcher_1" inlet="resonance"/>
      </net>
      <net>
         <source obj="object" outlet="lfoDelay"/>
         <dest obj="patcher_1" inlet="lfoDelay"/>
      </net>
      <net>
         <source obj="bipolar2unipolar_1" outlet="o"/>
         <dest obj="patcher_1" inlet="cutoff"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
      <MidiChannel>1</MidiChannel>
      <NPresets>8</NPresets>
      <NPresetEntries>32</NPresetEntries>
      <NModulationSources>8</NModulationSources>
      <NModulationTargetsPerSource>8</NModulationTargetsPerSource>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>-8</y>
      <width>1936</width>
      <height>1176</height>
   </windowPos>
</patch-1.0>