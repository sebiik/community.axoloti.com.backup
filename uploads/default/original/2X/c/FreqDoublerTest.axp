<patch-1.0 appVersion="1.0.11">
   <patchobj type="patch/object" uuid="8b03c296-8c05-4a5c-9658-dabae1341efc" name="object_1" x="0" y="0">
      <params>
         <frac32.u.map name="H1" value="64.0"/>
         <frac32.u.map name="H2" value="34.0"/>
         <frac32.u.map name="H3" value="21.5"/>
         <frac32.u.map name="H4" value="18.5"/>
         <frac32.u.map name="H6" value="16.0"/>
         <frac32.u.map name="H8" value="10.5"/>
         <frac32.u.map name="D10" value="14.0"/>
         <frac32.u.map name="H12" value="18.0"/>
         <frac32.u.map name="H16" value="17.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="8b03c296-8c05-4a5c-9658-dabae1341efc">
         <sDescription>String</sDescription>
         <license>BSD</license>
         <inlets/>
         <outlets>
            <frac32buffer.bipolar name="out"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map name="H1"/>
            <frac32.u.map name="H2"/>
            <frac32.u.map name="H3"/>
            <frac32.u.map name="H4"/>
            <frac32.u.map name="H6"/>
            <frac32.u.map name="H8"/>
            <frac32.u.map name="D10"/>
            <frac32.u.map name="H12"/>
            <frac32.u.map name="H16"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[// dp midi [24 35]
int32_t dp[12]={2926232, 3100235, 3284585, 3479896,
3686822, 3906052, 4138318, 4384395, 
              4645104, 4921317, 5213953, 5523991};

uint32_t p[12];
int32_t target[91];
int32_t env[91];

int32_t gates[128];
int32_t rnd=137137137;]]></code.declaration>
         <code.init><![CDATA[for(int i = 0; i < 91; i++){ env[i] = 0; }

for (int i=0;i<128;i++)
	gates[i]=0;]]></code.init>
         <code.krate><![CDATA[int i,j;
for(i=0;i<91;i++) target[i]=0;  // target amplitudes for the AR enveloppes
int32_t H1 = param_H1>>2;int32_t H2 = param_H2>>2;int32_t H3 = param_H3>>2;int32_t H4 = param_H4>>2;
int32_t H6 = param_H6>>3;int32_t H8 = param_H8>>3;int32_t D10 = param_D10>>3;int32_t H12 = param_H12>>4;
int32_t H16 = param_H16>>4;
for(i=0; i < 12; i++)if (gates[i+24] != 0) {target[i] += H1;target[i+12] += H2;target[i+19] += H3;target[i+24] += H4;target[i+31] += H6;target[i+36] += H8;target[i+40] += D10;target[i+43] += H12;target[i+48] += H16;}
for(i=12; i < 43; i++)if (gates[i+24] != 0) {target[i] += H1;target[i+12] += H2;target[i+19] += H3;target[i+24] += H4;target[i+31] += H6;target[i+36] += H8;target[i+40] += D10;target[i+43] += H12;target[i+48] += H16;}
for(i=43;i<48;i++)if (gates[i+24] != 0) {target[i] += H1;target[i+19] += H3;target[i+12] += H2;target[i+24] += H4;target[i+31] += H6;target[i+36] += H8;target[i+40] += D10;target[i+43] += H12;}
for(i=48;i<51;i++)if (gates[i+24] != 0) {target[i] += H1;target[i+19] += H3;target[i+12] += H2;target[i+24] += H4;target[i+31] += H6;target[i+36] += H8;target[i+40] += D10;}
for(i=51;i<55;i++)if (gates[i+24] != 0) {target[i] += H1;target[i+12] += H2;target[i+19] += H3;target[i+24] += H4;target[i+31] += H6;target[i+36] += H8;}
for(i=55;i<60;i++)if (gates[i+24] != 0) {target[i] += H1;target[i+19] += H3;target[i+12] += H2;target[i+24] += H4;target[i+31] += H6;}
for(i=60;i<67;i++)if (gates[i+24] != 0) {target[i] += H1;target[i+12] += H2;target[i+19] += H3;target[i+24] += H4;}
for(i=67;i<72;i++)if (gates[i+24] != 0) {target[i] += H1;target[i+12] += H2;target[i+19] += H3;}
for(i=72;i<79;i++)if (gates[i+24] != 0) {target[i] += H1;target[i+12] += H2;}
for(i=79;i<91;i++)if (gates[i+24] != 0) {target[i] += H1;}
// _____________________________________________________________
// simple anti click AR enveloppes
for(i=0;i<91;i++){  env[i] = __SMMLA(env[i]<target[i]?0x20000000:0x0200000, target[i] - env[i], env[i]); }

for(j = 0; j < BUFSIZE; j++){
  int32_t s[12];
  // base oscs calc
  for(int note = 0; note < 12; note++){
    p[note] += dp[note];
    SINE2TINTERP(p[note], s[note]);
  }
  //
  int32_t out = 0;
  for(int note = 0; note < 12; note++){
    // y: q30 value of sine wave
    // note: q31 caused overflow 
    int32_t y = s[note]>>1;  
    out = __SMMLA(y, env[note], out);
    for(int ind = note + 12; ind < 91; ind += 12){
      // frequency doubler:
      // cos(2*x) = 2 * (cos(x)^2 - 0.5)
      
      // fixed point arithmetics notes:
      // __SMMUL(q30, q30) is q28
      // 0xF8000000 = -0.5_q28
      
      // y  <-  (y^2 - 0.5) * 2
      //          q30 q30 - 0.5_q28       * 2   q28->q30
      y = __SMMLA(y,  y, 0xF8000000 ) << ( 1   +   2 );
     
      // output accumulation
      out = __SMMLA(y, env[ind], out);
    }
  }
  outlet_out[j] = out;
}]]></code.krate>
         <code.midihandler><![CDATA[if(status == MIDI_NOTE_ON + attr_midichannel) {
  gates[data1 & 0x7F] = data2<<23UL;
} else if(status == MIDI_NOTE_OFF + attr_midichannel) {
  gates[data1 & 0x7F] = 0;
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  for(int i=0;i<128;i++) gates[data1 & 0x7F] = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="84" y="0">
      <params/>
      <attribs/>
   </obj>
   <obj type="scope" uuid="0991142e-58fa-47e6-9f89-32da05f9fe41" name="scope_1" x="70" y="98">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="object_1" outlet="out"/>
         <dest obj="out_1" inlet="left"/>
         <dest obj="out_1" inlet="right"/>
         <dest obj="scope_1" inlet="in"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
      <MidiChannel>1</MidiChannel>
      <NPresets>0</NPresets>
      <NPresetEntries>0</NPresetEntries>
      <NModulationSources>0</NModulationSources>
      <NModulationTargetsPerSource>0</NModulationTargetsPerSource>
      <Author>SmashedTransistors (T.Rochebois)</Author>
      <License>LGPL</License>
   </settings>
   <notes><![CDATA[Freq doubling tone generator Patch by T.Rochebois (aka Smashed Transistors/TiaR)
]]></notes>
   <windowPos>
      <x>1142</x>
      <y>82</y>
      <width>491</width>
      <height>601</height>
   </windowPos>
</patch-1.0>