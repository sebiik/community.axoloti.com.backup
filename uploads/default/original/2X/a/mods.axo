<objdefs appVersion="1.0.11">
   <obj.normal id="mods" uuid="39c20c9e-45e3-4c04-9df0-ca34a8ea04d6">
      <license>GPL</license>
      <ModulationSources>
         <string>i1</string>
         <string>i2</string>
      </ModulationSources>
      <inlets>
         <bool32 name="i1t"/>
         <frac32.bipolar name="i1"/>
         <bool32 name="i2t"/>
         <frac32.bipolar name="i2"/>
      </inlets>
      <outlets>
         <frac32.bipolar name="o1"/>
         <frac32.bipolar name="o2"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[bool t1,t2;]]></code.declaration>
      <code.init><![CDATA[t1=t2=false;]]></code.init>
      <code.krate><![CDATA[outlet_o1 = inlet_i1;
outlet_o2 = inlet_i2;
if(inlet_i1t && !t1) {
	t1 = true;
    	PExModulationSourceChange(
 		&parent->GetModulationTable()[parent->MODULATOR_attr_name_i1*NMODULATIONTARGETS],
    		NMODULATIONTARGETS,
    		&parent->PExch[0],
    		&parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_i1],
    		inlet_i1);	
}
if(!inlet_i1t) t1 = false;


if(inlet_i2t && !t2) {
	t2 = true;
    	PExModulationSourceChange(
 		&parent->GetModulationTable()[parent->MODULATOR_attr_name_i2*NMODULATIONTARGETS],
    		NMODULATIONTARGETS,
    		&parent->PExch[0],
    		&parent->PExModulationPrevVal[parent->polyIndex][parent->MODULATOR_attr_name_i2],
    		inlet_i2);	
}
if(!inlet_i2t) t2 = false;]]></code.krate>
   </obj.normal>
</objdefs>