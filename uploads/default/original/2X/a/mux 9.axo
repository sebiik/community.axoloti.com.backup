<objdefs>
   <obj.normal id="mux 9" uuid="dbmux9" sha="8235eae55c039d753de98e786521870a1302ce53">
      <upgradeSha>86863079e7321e24cc459b915df254f38201e6e</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>db</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <frac32 name="i0" description="input 0"/>
         <frac32 name="i1" description="input 1"/>
         <frac32 name="i2" description="input 2"/>
         <frac32 name="i3" description="input 3"/>
         <frac32 name="i4" description="input 4"/>
         <frac32 name="i5" description="input 5"/>
         <frac32 name="i6" description="input 6"/>
         <frac32 name="i7" description="input 7"/>
         <frac32 name="i8" description="input 8"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      case 5: outlet_o= inlet_i5;break;
      case 6: outlet_o= inlet_i6;break;
      case 7: outlet_o= inlet_i7;break;
      case 8: outlet_o= inlet_i8;break;
      default: outlet_o= inlet_i8;break;
}
]]></code.krate>
</obj.normal>
</objdefs>
