<patch-1.0 appVersion="1.0.12">
   <obj type="ctrl/button" uuid="ef3d13774349df85aa9bfecf30dbc91ab8488b3f" name="button_1" x="252" y="14">
      <params>
         <bool32.mom name="b" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="reset" x="532" y="14">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="4b375127-47f1-4b94-9cfd-2a4d5834efc8" name="square_1" x="70" y="70">
      <params>
         <frac32.s.map name="pitch" value="5.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="4b375127-47f1-4b94-9cfd-2a4d5834efc8">
         <sDescription>square wave LFO, boolean output, frequency input</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>lfo.axh</helpPatch>
         <inlets>
            <frac32.bipolar name="pitch" description="pitch"/>
            <bool32.rising name="reset" description="reset phase"/>
         </inlets>
         <outlets>
            <bool32 name="wave" description="square wave"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.lfopitch name="pitch" noLabel="true"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t Phase;
uint32_t r;
]]></code.declaration>
         <code.init><![CDATA[   Phase = 0;
   r = 1;
]]></code.init>
         <code.krate><![CDATA[   {
      if (inlet_reset && r) {
         Phase = 0;
         r = 0;
      } else {
         if (!inlet_reset) r = 1;
         int32_t freq;
         MTOFEXTENDED(param_pitch + inlet_pitch,freq);
         Phase += freq>>2;
      }
      outlet_wave= (Phase>0)?1:0;
   }]]></code.krate>
      </object>
   </patchobj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_1" x="168" y="70">
      <params>
         <int32 name="maximum" value="12"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sel/sel b 16 2t pulse" uuid="973e7030204ae3f80968263d37625c6672f91cb1" name="sel_1" x="252" y="70">
      <params>
         <bin16 name="p1" value="28083"/>
         <bin16 name="p2" value="37449"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_6" x="448" y="70">
      <params>
         <int32 name="maximum" value="4"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_3" x="532" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_4" x="630" y="70">
      <params>
         <int32 name="maximum" value="2"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_5" x="714" y="70">
      <params>
         <int32 name="maximum" value="12"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_3" x="798" y="70">
      <params>
         <int32 name="maximum" value="6"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_2" x="882" y="70">
      <params>
         <int32 name="maximum" value="8"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/latch" uuid="2a50e4657301542464c6a97931847b5e8e0e6d2b" name="latch_1" x="966" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/latch" uuid="2a50e4657301542464c6a97931847b5e8e0e6d2b" name="latch_2" x="1036" y="70">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="1871c4dc-c217-48a8-9946-feb70a269ef2" name="alloc_1" x="1106" y="70">
      <params>
         <bool32.tgl name="evolve" value="1"/>
         <frac32.u.map name="randomstart" value="9.5"/>
         <frac32.u.map name="update" value="64.0"/>
         <frac32.u.map name="differents" value="64.0"/>
         <frac32.u.map name="movefollow" value="39.5"/>
         <frac32.u.map name="copyformer" value="0.0"/>
         <frac32.u.map name="turn" value="16.5"/>
         <frac32.u.map name="asOffset" value="7.0"/>
         <frac32.u.map name="invert" value="6.5"/>
         <bool32.tgl name="pendulum" value="1"/>
         <frac32.u.map name="maxchange" value="23.0"/>
         <frac32.u.map name="glide" value="10.0"/>
         <frac32.s.map name="rate" value="-16.0"/>
         <int2x16 name="modes" value="1"/>
      </params>
      <attribs>
         <combo attributeName="size" selection="16"/>
      </attribs>
      <object id="patch/object" uuid="1871c4dc-c217-48a8-9946-feb70a269ef2">
         <sDescription>allocate 16bit table in SDRAM memory, -128.00 .. 127.99</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>table.axh</helpPatch>
         <inlets>
            <int32 name="count1"/>
            <int32 name="count2"/>
            <bool32 name="rnd"/>
         </inlets>
         <outlets>
            <frac32 name="o1"/>
            <frac32 name="o2"/>
            <frac32 name="o3"/>
            <frac32 name="o4"/>
            <frac32 name="o5"/>
            <frac32 name="o6"/>
            <frac32 name="o7"/>
            <frac32 name="o8"/>
            <frac32 name="o9"/>
            <frac32 name="o10"/>
            <frac32 name="o11"/>
            <frac32 name="o12"/>
            <frac32 name="o13"/>
            <frac32 name="o14"/>
            <frac32 name="o15"/>
            <frac32 name="o16"/>
         </outlets>
         <displays/>
         <params>
            <bool32.tgl name="evolve"/>
            <frac32.u.map name="randomstart" description="chance that the sequence offset doesn&apos;t start at zero but any other random value"/>
            <frac32.u.map name="update" description="chance that at the change of the counter, the current step is being randomised using the settings below"/>
            <frac32.u.map name="differents" description="amount of steps that may be used to hold different random values, after this the step-values are re-used."/>
            <frac32.u.map name="movefollow" description="chance that the difference between two former steps is re-used to generate the new value from the one before."/>
            <frac32.u.map name="copyformer" description="chance of re-using a formerly generated value"/>
            <frac32.u.map name="turn" description="chance that the move-follow value is inverted (repeating random)"/>
            <frac32.u.map name="asOffset" description="chance that the current step offsets the entire sequence (non-repeating random)"/>
            <frac32.u.map name="invert" description="chance that the sequence swaps low/high (non-repeating random)"/>
            <bool32.tgl name="pendulum" description="wraps the generated sequence as a pendulum instead of a hard high-&gt;low wrap"/>
            <frac32.u.map name="maxchange" description="attenuates the difference with the former step"/>
            <frac32.u.map name="glide" description="chance of gliding the output (dependent on whether mode of the channel is either 1 or 3)"/>
            <frac32.s.map name="rate" description="glide rate"/>
            <int2x16 name="modes" description="0=stepped count1, 1=glided count 1, 2=stepped count2, 3=glided count2"/>
         </params>
         <attribs>
            <combo name="size">
               <MenuEntries>
                  <string>2</string>
                  <string>4</string>
                  <string>8</string>
                  <string>16</string>
                  <string>32</string>
                  <string>64</string>
                  <string>128</string>
                  <string>256</string>
                  <string>512</string>
                  <string>1024</string>
                  <string>2048</string>
                  <string>4096</string>
                  <string>8192</string>
                  <string>16384</string>
                  <string>32768</string>
                  <string>65536</string>
                  <string>131072</string>
                  <string>262144</string>
                  <string>524288</string>
                  <string>1048576</string>
                  <string>2097152</string>
                  <string>4194304</string>
               </MenuEntries>
               <CEntries>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
                  <string>6</string>
                  <string>7</string>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
                  <string>15</string>
                  <string>16</string>
                  <string>17</string>
                  <string>18</string>
                  <string>19</string>
                  <string>20</string>
                  <string>21</string>
                  <string>22</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[static const uint32_t LENGTHPOW = (attr_size);
static const uint32_t LENGTH = (1<<attr_size);
static const uint32_t LENGTHMASK = ((1<<attr_size)-1);
static const uint32_t BITS = 16;
static const uint32_t GAIN = 12;
uint16_t *array,ofs[16];
int rnd,prv,INV[16];
int32_t O[16],P[16];//,goal,former;]]></code.declaration>
         <code.init><![CDATA[static uint16_t _array[attr_poly][LENGTH*16] __attribute__ ((section (".sdram")));
array = &_array[parent->polyIndex][0];
{ 
  int i;
  for(i=0;i<LENGTH*16;i++) array[i]=(uint16_t)(GenerateRandomNumber()>>16);
}]]></code.init>
         <code.krate><![CDATA[int cnt=inlet_count1&LENGTHMASK;
int c2=inlet_count2&LENGTHMASK;
int32_t rate;
MTOF(param_rate,rate)
rate=rate>>2;
int diff=___SMMUL(param_differents,LENGTH<<5)+1;
if(inlet_rnd&&!rnd){
	rnd=1;
	for(int j=0;j<16;j++)
	{
		int k=j<<LENGTHPOW;
		int CNT=0,stmp,ctmp;
		for(int i=0;i<LENGTH;i++)
		{
			if(i<diff)
			{
			if((((int32_t)(GenerateRandomNumber()>>5)<param_movefollow)&&(i>1))||(CNT>0))
			{
				if(CNT==0){
				stmp=GenerateRandomNumber()%i;
				ctmp=GenerateRandomNumber()%i;
				CNT=(int32_t)(GenerateRandomNumber());
				CNT=___SMMUL(CNT,CNT)>>27;
				//CNT=CNT>4?4:CNT;
				}
				else{CNT-=1;}
				if((int32_t)(GenerateRandomNumber()>>5)<param_copyformer)
				{
					array[i+k]=array[i-1-ctmp+k]+(array[i-stmp+k]-array[i-stmp-1+k])*((int32_t)(GenerateRandomNumber()>>5)<param_turn?-1:1);	
				}
				else
				{
					
					array[i+k]=array[i-1+k]+(array[i-stmp+k]-array[i-stmp-1+k])*((int32_t)(GenerateRandomNumber()>>5)<param_turn?-1:1);
				}
			}
			else
			{
				if(((int32_t)(GenerateRandomNumber()>>5)<param_copyformer)&&(i>1))
				{
					int ctmp=GenerateRandomNumber()%i;
					array[i+k]=array[i-1-ctmp+k];
				}
				else{
				array[i+k]=(uint16_t)(GenerateRandomNumber()>>16);
				}
			}
			}
			else{
				array[i+k]=array[k+(GenerateRandomNumber()%diff)];
			}
		}
	}
}
else if(!inlet_rnd){rnd=0;}

if(!(cnt==prv)){
	
		
	for(int j=0;j<16;j++)
	{
	int i=((param_modes>>1+(j*2))&1)>0?c2:cnt;
	int k=j<<LENGTHPOW;
	int CNT=0,stmp,ctmp;
	if((int32_t)(GenerateRandomNumber()>>5)<param_asOffset){
		ofs[j]=array[i]-array[(i-1)&LENGTHPOW];
		
	}
	if((int32_t)(GenerateRandomNumber()>>5)<param_invert){
		INV[j]=INV[j]>0?0:1;
		
	}
	if(cnt==0){
		ofs[j]=(int32_t)(GenerateRandomNumber()>>5)<param_randomstart?GenerateRandomNumber():(param_evolve>0?ofs[j]:0);
	}
		if((int32_t)(GenerateRandomNumber()>>5)<param_update){
		
		{
			if(i<diff)
			{
			if((((int32_t)(GenerateRandomNumber()>>5)<param_movefollow)&&(i>1))||(CNT>0))
			{
				if(CNT==0){
				stmp=GenerateRandomNumber()%i;
				ctmp=GenerateRandomNumber()%i;
				CNT=(int32_t)(GenerateRandomNumber());
				CNT=___SMMUL(CNT,CNT)>>27;
				//CNT=CNT>4?4:CNT;
				}
				else{CNT-=1;}
				if((int32_t)(GenerateRandomNumber()>>5)<param_copyformer)
				{
					array[i+k]=array[i-1-ctmp+k]+(array[i-stmp+k]-array[i-stmp-1+k])*((int32_t)(GenerateRandomNumber()>>5)<param_turn?-1:1);	
				}
				else
				{
					
					array[i+k]=array[i-1+k]+(array[i-stmp+k]-array[i-stmp-1+k])*((int32_t)(GenerateRandomNumber()>>5)<param_turn?-1:1);
				}
			}
			else
			{
				if(((int32_t)(GenerateRandomNumber()>>5)<param_copyformer)&&(i>1))
				{
					int ctmp=GenerateRandomNumber()%i;
					array[i+k]=array[i-1-ctmp+k];
				}
				else{
				array[i+k]=(uint16_t)(GenerateRandomNumber()>>16);
				}
			}
			}
			else{
				array[i+k]=array[k+(GenerateRandomNumber()%diff)];
			}
		}
	}
	}
}

if(!(cnt==prv)){
for(int i=0;i<16;i++){
int pos=((param_modes>>1+(i*2))&1)>0?c2:cnt;
int32_t former=O[i];
int32_t goal=((array[pos+(i<<LENGTHPOW)]+ofs[i])&((1<<16)-1))<<11+param_pendulum;

if(param_pendulum){
goal=(__USAT(goal,27)<<1)-goal;
}
if(INV[i]){
goal=(1<<27)-goal;
}
if(cnt>0){
int32_t df=goal-former;
df=___SMMUL(df<<2,param_maxchange<<3);
goal=former+df;
}
O[i]=goal;

	if(!(((int32_t)(GenerateRandomNumber()>>5)<param_glide)&&((param_modes>>(i*2))&1))){
		P[i]=O[i];
	}
	
	}
}
for(int i=0;i<16;i++){
P[i]+=___SMMUL(O[i]-P[i],rate);
}
outlet_o1=P[0];
outlet_o2=P[1];
outlet_o3=P[2];
outlet_o4=P[3];
outlet_o5=P[4];
outlet_o6=P[5];
outlet_o7=P[6];
outlet_o8=P[7];
outlet_o9=P[8];
outlet_o10=P[9];
outlet_o11=P[10];
outlet_o12=P[11];
outlet_o13=P[12];
outlet_o14=P[13];
outlet_o15=P[14];
outlet_o16=P[15];

prv=cnt;]]></code.krate>
      </object>
   </patchobj>
   <obj type="disp/chart p" uuid="58f42040a894006a5f73ed8cb8d0bd45481b28cd" name="chart_1" x="1344" y="238">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_1" x="420" y="336">
      <params>
         <frac32.u.map name="value" value="26.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/chart p" uuid="58f42040a894006a5f73ed8cb8d0bd45481b28cd" name="chart_2" x="1344" y="350">
      <params/>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="322" y="574" text="enabling glide when there is continuous change"/>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="retrigger at new note when gliding" x="560" y="574">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="a0a27308-be47-4ca7-b879-a20c674064de" name="change_3" x="322" y="588">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="a0a27308-be47-4ca7-b879-a20c674064de">
         <sDescription>Generates a trigger pulse when current input value is different from previous value.</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>change.axh</helpPatch>
         <inlets>
            <frac32 name="in" description="in"/>
         </inlets>
         <outlets>
            <bool32 name="trig" description="trigger pulse"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[   int ptrig;
   int32_t pval;
]]></code.declaration>
         <code.init><![CDATA[ptrig = 0;
pval = 0;
]]></code.init>
         <code.krate><![CDATA[if ((pval != inlet_in)) { 
  outlet_trig = 1;

  pval = inlet_in;

} else {
  outlet_trig = 0;
}]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="a0a27308-be47-4ca7-b879-a20c674064de" name="change_4" x="392" y="588">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="a0a27308-be47-4ca7-b879-a20c674064de">
         <sDescription>Generates a trigger pulse when current input value is different from previous value.</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>change.axh</helpPatch>
         <inlets>
            <frac32 name="in" description="in"/>
         </inlets>
         <outlets>
            <bool32 name="trig" description="trigger pulse"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[   int ptrig;
   int32_t pval;
]]></code.declaration>
         <code.init><![CDATA[ptrig = 0;
pval = 0;
]]></code.init>
         <code.krate><![CDATA[if ((pval != inlet_in)) { 
  outlet_trig = 1;

  pval = inlet_in;

} else {
  outlet_trig = 0;
}]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="406" y="686" text="retriggering at new notes when gliding"/>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_1" x="182" y="700">
      <params>
         <frac32.u.map name="amp" value="9.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_1" x="280" y="700">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/change" uuid="42071f8cb4cfe1f35956c0bd5a313a57e049bec4" name="change_1" x="434" y="700">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_1" x="518" y="700">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_1" x="588" y="700">
      <params/>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_1" x="658" y="700">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-14.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_1" x="756" y="700">
      <params>
         <frac32.u.map name="time" value="28.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="osc/saw" uuid="739ecc36017ef3249479b8f01716b8bbfba9abc1" name="saw_1" x="826" y="700">
      <params>
         <frac32.s.map name="pitch" value="-25.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="924" y="700">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_3" x="182" y="812">
      <params>
         <frac32.u.map name="amp" value="20.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_2" x="280" y="812">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/change" uuid="42071f8cb4cfe1f35956c0bd5a313a57e049bec4" name="change_2" x="434" y="812">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_2" x="518" y="812">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_2" x="588" y="812">
      <params/>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_2" x="658" y="812">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-11.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_2" x="756" y="812">
      <params>
         <frac32.u.map name="time" value="29.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="osc/saw" uuid="739ecc36017ef3249479b8f01716b8bbfba9abc1" name="saw_2" x="826" y="812">
      <params>
         <frac32.s.map name="pitch" value="-25.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_2" x="924" y="812">
      <params/>
      <attribs/>
   </obj>
   <obj type="mix/mix 4 sq" uuid="f107ee8ee1e69e4443b27ddf7eb7d72e9b9cc9ba" name="mix_1" x="1008" y="812">
      <params>
         <frac32.u.map name="gain1" value="42.5"/>
         <frac32.u.map name="gain2" value="38.5"/>
         <frac32.u.map name="gain3" value="32.0"/>
         <frac32.u.map name="gain4" value="32.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_2" x="1106" y="812">
      <params>
         <frac32.u.map name="amp" value="42.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="1204" y="812">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="square_1" outlet="wave"/>
         <dest obj="counter_1" inlet="trig"/>
         <dest obj="counter_3" inlet="trig"/>
         <dest obj="counter_4" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_1" outlet="o"/>
         <dest obj="sel_1" inlet="in"/>
      </net>
      <net>
         <source obj="alloc_1" outlet="o1"/>
         <dest obj="chart_1" inlet="in"/>
         <dest obj="*c_1" inlet="in"/>
         <dest obj="change_3" inlet="in"/>
      </net>
      <net>
         <source obj="button_1" outlet="o"/>
         <dest obj="alloc_1" inlet="rnd"/>
      </net>
      <net>
         <source obj="alloc_1" outlet="o2"/>
         <dest obj="chart_2" inlet="in"/>
         <dest obj="*c_3" inlet="in"/>
         <dest obj="change_4" inlet="in"/>
      </net>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="note_1" inlet="note"/>
      </net>
      <net>
         <source obj="note_1" outlet="note"/>
         <dest obj="glide_1" inlet="in"/>
         <dest obj="change_1" inlet="in"/>
      </net>
      <net>
         <source obj="saw_1" outlet="wave"/>
         <dest obj="vca_1" inlet="a"/>
      </net>
      <net>
         <source obj="ad_1" outlet="env"/>
         <dest obj="vca_1" inlet="v"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="mix_1" inlet="in1"/>
      </net>
      <net>
         <source obj="*c_2" outlet="out"/>
         <dest obj="out_1" inlet="left"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="dial_1" outlet="out"/>
         <dest obj="note_1" inlet="offset"/>
         <dest obj="note_2" inlet="offset"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="*c_2" inlet="in"/>
      </net>
      <net>
         <source obj="*c_3" outlet="out"/>
         <dest obj="note_2" inlet="note"/>
      </net>
      <net>
         <source obj="note_2" outlet="note"/>
         <dest obj="change_2" inlet="in"/>
         <dest obj="glide_2" inlet="in"/>
      </net>
      <net>
         <source obj="saw_2" outlet="wave"/>
         <dest obj="vca_2" inlet="a"/>
      </net>
      <net>
         <source obj="ad_2" outlet="env"/>
         <dest obj="vca_2" inlet="v"/>
      </net>
      <net>
         <source obj="vca_2" outlet="o"/>
         <dest obj="mix_1" inlet="in2"/>
      </net>
      <net>
         <source obj="counter_2" outlet="o"/>
         <dest obj="latch_2" inlet="i"/>
      </net>
      <net>
         <source obj="counter_3" outlet="c"/>
         <dest obj="counter_2" inlet="trig"/>
      </net>
      <net>
         <source obj="latch_1" outlet="o"/>
         <dest obj="alloc_1" inlet="count1"/>
      </net>
      <net>
         <source obj="latch_2" outlet="o"/>
         <dest obj="alloc_1" inlet="count2"/>
      </net>
      <net>
         <source obj="sel_1" outlet="o1"/>
         <dest obj="latch_1" inlet="trig"/>
         <dest obj="or_1" inlet="i2"/>
      </net>
      <net>
         <source obj="sel_1" outlet="o2"/>
         <dest obj="latch_2" inlet="trig"/>
         <dest obj="or_2" inlet="i2"/>
      </net>
      <net>
         <source obj="change_1" outlet="trig"/>
         <dest obj="and_1" inlet="i1"/>
      </net>
      <net>
         <source obj="or_1" outlet="o"/>
         <dest obj="ad_1" inlet="trig"/>
      </net>
      <net>
         <source obj="change_2" outlet="trig"/>
         <dest obj="and_2" inlet="i1"/>
      </net>
      <net>
         <source obj="or_2" outlet="o"/>
         <dest obj="ad_2" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_4" outlet="c"/>
         <dest obj="counter_5" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_5" outlet="o"/>
         <dest obj="latch_1" inlet="i"/>
      </net>
      <net>
         <source obj="change_3" outlet="trig"/>
         <dest obj="glide_1" inlet="en"/>
      </net>
      <net>
         <source obj="glide_1" outlet="out"/>
         <dest obj="saw_1" inlet="pitch"/>
      </net>
      <net>
         <source obj="glide_2" outlet="out"/>
         <dest obj="saw_2" inlet="pitch"/>
      </net>
      <net>
         <source obj="change_4" outlet="trig"/>
         <dest obj="glide_2" inlet="en"/>
      </net>
      <net>
         <source obj="and_1" outlet="o"/>
         <dest obj="or_1" inlet="i1"/>
      </net>
      <net>
         <source obj="retrigger at new note when gliding" outlet="o"/>
         <dest obj="and_1" inlet="i2"/>
         <dest obj="and_2" inlet="i2"/>
      </net>
      <net>
         <source obj="and_2" outlet="o"/>
         <dest obj="or_2" inlet="i1"/>
      </net>
      <net>
         <source obj="counter_1" outlet="c"/>
         <dest obj="counter_6" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_6" outlet="c"/>
         <dest obj="and_3" inlet="i1"/>
      </net>
      <net>
         <source obj="reset" outlet="o"/>
         <dest obj="and_3" inlet="i2"/>
      </net>
      <net>
         <source obj="and_3" outlet="o"/>
         <dest obj="counter_4" inlet="r"/>
         <dest obj="counter_5" inlet="r"/>
         <dest obj="counter_3" inlet="r"/>
         <dest obj="counter_2" inlet="r"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>22</y>
      <width>1936</width>
      <height>1066</height>
   </windowPos>
</patch-1.0>