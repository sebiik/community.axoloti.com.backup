<patch-1.0 appVersion="1.0.12">
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_3" x="434" y="0">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_2" x="14" y="28">
      <params>
         <frac32.s.map name="value" value="-5.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/square" uuid="de6909eb64db13af5b43f979a4c130024b3a4793" name="square_1" x="84" y="28">
      <params>
         <frac32.s.map name="pitch" value="-12.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="edrum/bd1" uuid="ef1373a8-e000-4944-b0b2-59abacffa9e4" name="obj_1" x="196" y="28">
      <params>
         <frac32.s.map name="d1" value="-11.0"/>
         <frac32.s.map name="lp1" value="-29.0"/>
         <frac32.s.map name="d2" value="12.0"/>
         <frac32.u.map name="amt" value="37.0"/>
         <frac32.s.map name="sine_1" value="-30.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_2" x="294" y="28">
      <params>
         <int32 name="maximum" value="3"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_1" x="378" y="28">
      <params/>
      <attribs/>
   </obj>
   <obj type="timer/pulselength" uuid="ca68725237d8ba8407773340801660a9fd9b0dba" name="pulselength_1" x="532" y="28">
      <params>
         <frac32.s.map name="delay" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_3" x="476" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_3" x="742" y="70">
      <params>
         <int32 name="maximum" value="2"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_1" x="840" y="70">
      <params>
         <int32 name="maximum" value="16"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/or 2" uuid="3805d3c84d30032a44fbdbe42d9a2988a1790a3e" name="or_2" x="924" y="70">
      <params/>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_13" x="994" y="70">
      <params>
         <int32 name="max" value="35"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_14" x="1078" y="70">
      <params>
         <int32 name="max" value="35"/>
      </params>
      <attribs/>
   </obj>
   <obj type="edrum/hh" uuid="7c6d1e7d-6899-43bd-ba01-928b68571cc5" name="obj_2" x="1162" y="70">
      <params>
         <frac32.s.map name="env" value="-49.0"/>
         <frac32.s.map name="bpf:pitch" value="58.0"/>
         <frac32.u.map name="bpf:reso" value="21.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="edrum/hh" uuid="7c6d1e7d-6899-43bd-ba01-928b68571cc5" name="obj_3" x="1330" y="70">
      <params>
         <frac32.s.map name="env" value="-11.0"/>
         <frac32.s.map name="bpf:pitch" value="1.0"/>
         <frac32.u.map name="bpf:reso" value="28.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/square" uuid="de6909eb64db13af5b43f979a4c130024b3a4793" name="square_2" x="1498" y="84">
      <params>
         <frac32.s.map name="pitch" value="12.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_2" x="1596" y="84">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="-17.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" uuid="7a141ba82230e54e5f5cd12da5dbe5a74ba854a5" name="counter_4" x="336" y="98">
      <params>
         <int32 name="maximum" value="8"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_1" x="644" y="112">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="4.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_1" x="14" y="140">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_12" x="84" y="140">
      <params>
         <int32 name="max" value="2"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_4" x="546" y="154">
      <params>
         <frac32.s.map name="value" value="36.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_2" x="448" y="168">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_3" x="322" y="182">
      <params>
         <frac32.s.map name="value" value="27.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/change" uuid="96e39ae624c3f3c952cec4a95e1986ee0104f718" name="change_1" x="812" y="182">
      <params/>
      <attribs/>
   </obj>
   <obj type="timer/delayedpulsem" uuid="edae71bda6092aa94232876fd3f8a107bdb9ebcf" name="delayedpulsem_1" x="896" y="182">
      <params>
         <frac32.s.map name="delay" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="timer/delayedpulsem" uuid="edae71bda6092aa94232876fd3f8a107bdb9ebcf" name="delayedpulsem_2" x="1008" y="182">
      <params>
         <frac32.s.map name="delay" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_11" x="70" y="196">
      <params>
         <int32 name="max" value="65"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/latch" uuid="14750683752bd43205826430adb7168dae3cc2c" name="latch_1" x="1162" y="224">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_1" x="742" y="238">
      <params>
         <frac32.s.map name="value" value="27.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_2" x="0" y="252">
      <params>
         <int32 name="max" value="24"/>
      </params>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_2" x="84" y="266">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/osc/fm8xRandom" uuid="c500e8ec-ec5b-4f90-b36b-d04e665bd55d" name="fm8xRandom_1" x="238" y="266">
      <params>
         <frac32.s.map name="pitch" value="-24.0"/>
         <frac32.s.map name="fm" value="-38.0"/>
         <bool32.mom name="rndFM" value="0"/>
         <bool32.mom name="rndHrm" value="0"/>
         <int32 name="range" value="83"/>
         <int32 name="voices" value="8"/>
      </params>
      <attribs/>
   </obj>
   <obj type="filter/vcf3" uuid="92455c652cd098cbb682a5497baa18abbf2ef865" name="vcf3_1" x="378" y="266">
      <params>
         <frac32.s.map name="pitch" value="32.0"/>
         <frac32.u.map name="reso" value="30.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_1" x="476" y="266">
      <params>
         <frac32.s.map name="a" value="58.0"/>
         <frac32.s.map name="d" value="0.0"/>
         <frac32.u.map name="s" value="64.0"/>
         <frac32.s.map name="r" value="63.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_1" x="938" y="294">
      <params>
         <int32 name="max" value="35"/>
      </params>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_1" x="1022" y="294">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_3" x="1176" y="294">
      <params>
         <frac32.u.map name="time" value="61.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_15" x="0" y="308">
      <params>
         <int32 name="max" value="28"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_1" x="868" y="322">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_5" x="14" y="364">
      <params>
         <frac32.s.map name="value" value="34.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_6" x="84" y="364">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_2" x="686" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="742" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_2" x="798" y="364">
      <params>
         <frac32.u.map name="amp" value="49.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/latch" uuid="14750683752bd43205826430adb7168dae3cc2c" name="latch_2" x="1386" y="378">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="264cc999-a6fd-40e7-bf1c-57d4b9d9f724" name="divremc_1" x="1498" y="378">
      <params>
         <int32 name="ofs" value="8"/>
      </params>
      <attribs>
         <spinner attributeName="denominator" value="12"/>
      </attribs>
      <object id="patch/object" uuid="264cc999-a6fd-40e7-bf1c-57d4b9d9f724">
         <sDescription>divide integer with constant, also outputs remainder (modulo)</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>math.axh</helpPatch>
         <inlets>
            <int32 name="a" description="nominator"/>
         </inlets>
         <outlets>
            <int32 name="div" description="a divided by denominator"/>
            <int32 name="rem" description="remainder of division by denominator"/>
         </outlets>
         <displays/>
         <params>
            <int32 name="ofs">
               <MinValue i="-12"/>
               <MaxValue i="12"/>
            </int32>
         </params>
         <attribs>
            <spinner name="denominator" MinValue="1" MaxValue="128" DefaultValue="1"/>
         </attribs>
         <includes/>
         <code.krate><![CDATA[int r;
if ((inlet_a-param_ofs) >=0)
  r = ((unsigned int)inlet_a-param_ofs)/attr_denominator;
else  r = -(((unsigned int)(attr_denominator-inlet_a+param_ofs))/attr_denominator);
outlet_div= r;
outlet_rem = inlet_a-(r*attr_denominator);]]></code.krate>
      </object>
   </patchobj>
   <obj type="osc/sine" uuid="6e094045cca76a9dbf7ebfa72e44e4700d2b3ba" name="sine_1" x="1610" y="378">
      <params>
         <frac32.s.map name="pitch" value="-36.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_7" x="938" y="392">
      <params>
         <int32 name="max" value="35"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/inv" uuid="4236d8dd952427e2aec6e830a48fddfba98dd4ad" name="inv_1" x="1050" y="392">
      <params/>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_4" x="1120" y="392">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_8" x="1274" y="392">
      <params>
         <frac32.u.map name="time" value="48.679999351501465"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_5" x="1708" y="392">
      <params/>
      <attribs/>
   </obj>
   <obj type="osc/sine" uuid="6e094045cca76a9dbf7ebfa72e44e4700d2b3ba" name="sine_2" x="378" y="406">
      <params>
         <frac32.s.map name="pitch" value="-12.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_2" x="588" y="406">
      <params>
         <frac32.s.map name="a" value="64.0"/>
         <frac32.s.map name="d" value="0.0"/>
         <frac32.u.map name="s" value="64.0"/>
         <frac32.s.map name="r" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_3" x="476" y="462">
      <params>
         <frac32.u.map name="amp" value="26.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_3" x="896" y="490">
      <params>
         <int32 name="max" value="49"/>
      </params>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_3" x="980" y="490">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_4" x="1134" y="490">
      <params>
         <frac32.u.map name="time" value="24.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_10" x="1218" y="490">
      <params>
         <int32 name="max" value="48"/>
      </params>
      <attribs/>
   </obj>
   <obj type="harmony/note scale" uuid="d5343a4fea87a3e4f4dae20287226084550ea8d3" name="note_5" x="1414" y="490">
      <params>
         <bin12 name="b12" value="2741"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/inv" uuid="565521d3699b36d8095aa1c79b9ad0046fb133ce" name="inv_2" x="1568" y="490">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_9" x="1624" y="490">
      <params>
         <frac32.u.map name="time" value="62.30499887466431"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 1 sq" uuid="cf790039775b62697a4b34e7a5389a5a8cc36e30" name="mix_4" x="784" y="532">
      <params>
         <frac32.u.map name="gain1" value="25.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_8" x="42" y="546">
      <params>
         <int32 name="max" value="52"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_6" x="154" y="546">
      <params>
         <int32 name="max" value="22"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_9" x="252" y="546">
      <params>
         <int32 name="max" value="31"/>
      </params>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_4" x="378" y="546">
      <params>
         <int32 name="max" value="95"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_5" x="42" y="602">
      <params>
         <frac32.u.map name="time" value="61.72999906539917"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_6" x="112" y="602">
      <params>
         <frac32.u.map name="time" value="61.91499948501587"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_7" x="182" y="602">
      <params>
         <frac32.u.map name="time" value="61.05499887466431"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_1" x="252" y="602">
      <params>
         <frac32.u.map name="time" value="61.944997787475586"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_1" x="322" y="602">
      <params/>
      <attribs/>
   </obj>
   <obj type="rand/uniform i" uuid="9b1f945f346af0165ed99b8e19136cdbf744e594" name="uniform_5" x="434" y="630">
      <params>
         <int32 name="max" value="95"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/glide" uuid="cfa0324c7cc8ebfd6e03c6b92f41115e3172d0d9" name="glide_2" x="518" y="630">
      <params>
         <frac32.u.map name="time" value="60.364999294281006"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/interp" uuid="d68c1a8709d8b55e3de8715d727ec0a2d8569d9a" name="interp_1" x="588" y="630">
      <params/>
      <attribs/>
   </obj>
   <obj type="conv/interp" uuid="d68c1a8709d8b55e3de8715d727ec0a2d8569d9a" name="interp_2" x="658" y="630">
      <params/>
      <attribs/>
   </obj>
   <obj type="mix/mix 4 sq" uuid="f107ee8ee1e69e4443b27ddf7eb7d72e9b9cc9ba" name="mix_2" x="728" y="630">
      <params>
         <frac32.u.map name="gain1" value="18.5"/>
         <frac32.u.map name="gain2" value="33.0"/>
         <frac32.u.map name="gain3" value="32.0"/>
         <frac32.u.map name="gain4" value="21.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 1 sq" uuid="cf790039775b62697a4b34e7a5389a5a8cc36e30" name="mix_3" x="840" y="630">
      <params>
         <frac32.u.map name="gain1" value="21.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_3" x="938" y="630">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="916bceb9-8213-45b8-84fd-c2a43092c9a8" name="write_1" x="994" y="630">
      <params>
         <frac32.s.map name="delayU" value="-55.0"/>
         <frac32.s.map name="delayD" value="-54.0"/>
         <frac32.s.map name="PUP" value="-9.0"/>
         <frac32.s.map name="PDOWN" value="11.0"/>
         <frac32.s.map name="FUP" value="-31.0"/>
         <frac32.s.map name="FDOWN" value="32.0"/>
         <frac32.s.map name="Pfeed" value="-38.0"/>
         <frac32.s.map name="Ffeed" value="-35.0"/>
         <frac32.s.map name="high" value="-21.0"/>
         <frac32.s.map name="center" value="12.0"/>
         <frac32.s.map name="low" value="-21.0"/>
         <frac32.u.map name="select" value="45.5"/>
      </params>
      <attribs>
         <combo attributeName="delay" selection="131072 (2.73s)"/>
         <combo attributeName="window" selection="65536 (1.36s)"/>
         <spinner attributeName="rndwindow" value="5"/>
      </attribs>
      <object id="patch/object" uuid="916bceb9-8213-45b8-84fd-c2a43092c9a8">
         <sDescription>Parallel pitchshifting and frequencyshifting dual delayline.

One delayline is used as channel where frequencies go up in time.
The other delayline is used as channel where frequencies go down in time.

When the &quot;up&quot; channel reaches the &quot;high&quot; frequency, it&apos;s crossfaded, with higher frequencies going into the &quot;down&quot; path.
When the &quot;down&quot; channel reaches the &quot;down&quot; frequency, it&apos;s crossfaded, with lower frequencies going into the &quot;high&quot; path.

Thus using the pitchshifters and frequencyshifters (both for both up and down channel), you can force the pitch/frequency shift to lower or go higher on both channels.
When the shift is in the right direction (up for up channel and down for down channel), the crossfaders will make the sounds go round and round through both channels.
When the shift is in the opposite direction, the frequencies won&apos;t reach the crossfader and the sound die out as they go lower and lower or higher and higher.

The center sets the frequency of the input-crossover, forcing higher frequencies into the down-delayline and lower frequencies into the up-delayline</sDescription>
         <author>Remco van der Most</author>
         <license>BSD</license>
         <helpPatch>delay.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="wave input"/>
            <frac32 name="PUP"/>
            <frac32 name="PDOWN"/>
            <frac32 name="FUP"/>
            <frac32 name="FDOWN"/>
            <frac32buffer name="delayU"/>
            <frac32buffer name="delayD"/>
            <frac32 name="high"/>
            <frac32 name="center"/>
            <frac32 name="low"/>
         </inlets>
         <outlets>
            <frac32buffer name="out"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map name="delayU" description="delaytime up-delayline"/>
            <frac32.s.map name="delayD" description="delaytime down-delayline"/>
            <frac32.s.map name="PUP" description="pitchshift up-delayline"/>
            <frac32.s.map name="PDOWN" description="pitchshift down-delayline"/>
            <frac32.s.map name="FUP" description="frequencyshift up-delayline"/>
            <frac32.s.map name="FDOWN" description="frequencyshift down-delayline"/>
            <frac32.s.map name="Pfeed" description="pitchshifter amount&amp;feedback"/>
            <frac32.s.map name="Ffeed" description="frequencyshifter amount&amp;feedback"/>
            <frac32.s.map.pitch name="high" description="inline crossover, puts higher frequencies from the up-delayline in the down-delayline"/>
            <frac32.s.map.pitch name="center" description="input crossover, puts higher frequencies into the down-delayline and lower frequencies in the up-delayline"/>
            <frac32.s.map.pitch name="low" description="inline crossover, puts lower frequencies from the down-delayline in the up-delayline"/>
            <frac32.u.map name="select"/>
         </params>
         <attribs>
            <combo name="delay">
               <MenuEntries>
                  <string>256 (5.33ms)</string>
                  <string>512 (10.66ms)</string>
                  <string>1024 (21.33ms)</string>
                  <string>2048 (42.66ms)</string>
                  <string>4096 (85.33ms)</string>
                  <string>8192 (170ms)</string>
                  <string>16384 (341ms)</string>
                  <string>32768 (682ms)</string>
                  <string>65536 (1.36s)</string>
                  <string>131072 (2.73s)</string>
                  <string>262144 (5.46s)</string>
                  <string>524288 (10.9s)</string>
                  <string>1048576 (21.8s)</string>
                  <string>2097152 (43.7s)</string>
               </MenuEntries>
               <CEntries>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
                  <string>15</string>
                  <string>16</string>
                  <string>17</string>
                  <string>18</string>
                  <string>19</string>
                  <string>20</string>
                  <string>21</string>
               </CEntries>
            </combo>
            <combo name="window">
               <MenuEntries>
                  <string>256 (5.33ms)</string>
                  <string>512 (10.66ms)</string>
                  <string>1024 (21.33ms)</string>
                  <string>2048 (42.66ms)</string>
                  <string>4096 (85.33ms)</string>
                  <string>8192 (170ms)</string>
                  <string>16384 (341ms)</string>
                  <string>32768 (682ms)</string>
                  <string>65536 (1.36s)</string>
                  <string>131072 (2.73s)</string>
                  <string>262144 (5.46s)</string>
                  <string>524288 (10.9s)</string>
                  <string>1048576 (21.8s)</string>
                  <string>2097152 (43.7s)</string>
               </MenuEntries>
               <CEntries>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
                  <string>15</string>
                  <string>16</string>
                  <string>17</string>
                  <string>18</string>
                  <string>19</string>
                  <string>20</string>
                  <string>21</string>
               </CEntries>
            </combo>
            <spinner name="rndwindow" MinValue="0" MaxValue="7" DefaultValue="0"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[static const uint32_t LENGTHPOW = (attr_window);
static const uint32_t LENGTH = (1<<attr_window);
static const uint32_t LENGTHMASK = ((1<<attr_window)-1);
static const uint32_t dLENGTHPOW = (attr_delay);
static const uint32_t dLENGTH = (1<<attr_delay);
static const uint32_t dLENGTHMASK = ((1<<attr_delay)-1);


int32_t pLENGTHPOW;
int32_t pLENGTH ;
int32_t pLENGTHMASK;

int32_t LPOW;
int16_t *array;
int16_t *a1;
uint32_t writepos,wp;
int32_t lp[2],hp[2],shift[2],lf[2],hf[2],frq[2];
uint32_t pphs[2];
uint32_t v30=1<<30;
uint32_t v31=(uint32_t)(1<<31);
int32_t pout[2];
int i,j;
int32_t Ffeed,Pfeed;
int32_t LP,HP,FLP,FHP,CLP;

void PSHIFT(int32_t in,int I){
int k=I<<LENGTHPOW;
hp[I]+=___SMMUL(in-hp[I],hf[I])<<1;
lp[I]+=___SMMUL(in-hp[I]-lp[I],lf[I])<<1;
//in=lp[I];
//in+=in>>4;
array[writepos+k] = __SSAT(in>>14,16); 
pphs[I]+=frq[I];
int32_t p1,p2;
p1=((uint32_t)pphs[I])>>1;
p2=((uint32_t)pphs[I]+v31)>>1;
int32_t mask1;
SINE2TINTERP(((uint32_t)p1<<1)-v30,mask1)
SINE2TINTERP(mask1>>1,mask1)
mask1=(mask1>>1)+v30;
int32_t tp1=(p1>>LPOW);
int32_t tp2=(p2>>LPOW);
int32_t mix1=p1-(tp1<<LPOW)<<31-LPOW;
int32_t mix2=p2-(tp2<<LPOW)<<31-LPOW;
int32_t tmp1a=array[((writepos+tp1-(1<<pLENGTHPOW-1)-1)&pLENGTHMASK)+k]<<14;
int32_t tmp1b=array[((writepos+1+tp1-(1<<pLENGTHPOW-1)-1)&pLENGTHMASK)+k]<<14;
int32_t tmp2a=array[((writepos+tp2-(1<<pLENGTHPOW-1)-1)&pLENGTHMASK)+k]<<14;
int32_t tmp2b=array[((writepos+1+tp2-(1<<pLENGTHPOW-1)-1)&pLENGTHMASK)+k]<<14;
tmp1a+=___SMMUL(tmp1b-tmp1a,mix1)<<1;
tmp2a+=___SMMUL(tmp2b-tmp2a,mix2)<<1;
pout[I]=tmp2a+(___SMMUL(mask1,tmp1a-tmp2a)<<1);
}




int32_t s_mid_t1[2][9];
int32_t s_mid_t2[2][9];
int32_t mid_t1[2][9];
int32_t mid_t2[2][9];
int32_t phs[2];
int32_t low[2];
int32_t high[2];

int32_t FSHIFT(int32_t in,int I){
phs[I]+=shift[I];
int32_t SIN,COS;
SINE2TINTERP(phs[I],SIN)
SINE2TINTERP(phs[I]+v30,COS)
int32_t in_t1 = in;

int32_t mid0_t=___SMMLA(0.4794008656*UINT32_MAX,in_t1+mid_t2[I][0],mid_t2[I][8]);
int32_t s1 = mid0_t+mid_t2[I][1];
int32_t mid1_t=___SMMLS(UINT32_MAX*(1-0.8762184935),s1,s1-mid_t2[I][0]);
int32_t s2 = mid1_t+mid_t2[I][2];
int32_t mid2_t=___SMMLS(UINT32_MAX*(1-0.9765975895),s2,s2-mid_t2[I][1]);
int32_t s3 = mid2_t+mid_t2[I][6];
int32_t out0_t=___SMMLS(UINT32_MAX*(1-0.9974992559),s3,s3-mid_t2[I][2]);

int32_t mid3_t=___SMMLA(0.1617584983*UINT32_MAX,in_t1+mid_t2[I][3],mid_t1[I][8]);
int32_t s4 = mid3_t+mid_t2[I][4];
int32_t mid4_t=___SMMLS(UINT32_MAX*(1-0.7330289323),s4,s4-mid_t2[I][3]);
int32_t s5 = mid4_t+mid_t2[I][5];
int32_t mid5_t=___SMMLS(UINT32_MAX*(1-0.9453497003),s5,s5-mid_t2[I][4]);
int32_t s6 = mid5_t+mid_t2[I][7];
int32_t out1_t=___SMMLS(UINT32_MAX*(1-0.9905991567),s6,s6-mid_t2[I][5]);

int32_t t1,t2;
t1=___SMMUL(out0_t,SIN)<<1;
t2=___SMMUL(out1_t,COS)<<1;
low[I]=t1+t2;
high[I]=-t1+t2;


// swap
int32_t tmp;
for(int i=0;i<9;i++){
tmp = mid_t2[I][i];
mid_t2[I][i] = mid_t1[I][i];
mid_t1[I][i] = tmp;
}

mid_t1[I][0] = mid0_t;
mid_t1[I][1] = mid1_t;
mid_t1[I][2] = mid2_t;
mid_t1[I][3] = mid3_t;
mid_t1[I][4] = mid4_t;
mid_t1[I][5] = mid5_t;
mid_t1[I][6] = out0_t;
mid_t1[I][7] = out1_t;
mid_t1[I][8] = -in_t1;
}]]></code.declaration>
         <code.init><![CDATA[static int16_t _array[attr_poly][LENGTH<<1]  __attribute__ ((section (".sdram")));
array = &_array[parent->polyIndex][0];
static int16_t _a1[attr_poly][1<<attr_delay+1]  __attribute__ ((section (".sdram")));
a1 = &_a1[parent->polyIndex][0];

   int i;
   writepos = 0;
   for(i=0;i<LENGTH<<1;i++) {array[i] = 0;}
   for(i=0;i<dLENGTH<<1;i++) {a1[i] = 0;}

for(i=0;i<8;i++){
for(j=0;j<2;j++){
mid_t1[j][i] = s_mid_t1[j][i];
mid_t2[j][i] = s_mid_t2[j][i];
}}
phs[1]=phs[0]=0;

int RAND=attr_window-(int32_t)(GenerateRandomNumber()%6);
pLENGTHPOW = (RAND);
pLENGTH = (1<<RAND);
pLENGTHMASK = ((1<<RAND)-1);

LPOW=(31-pLENGTHPOW+1);]]></code.init>
         <code.krate><![CDATA[int32_t LW,HG;
MTOF(param_high+inlet_high,HG)
MTOF(param_low+inlet_low,LW)
int32_t center;
MTOF(param_center+inlet_center,center)

int32_t Pshift=param_PUP+inlet_PUP;
MTOFEXTENDED((1<<27)-(Pshift>0?Pshift:0),lf[0])
MTOF(-(1<<26)-(Pshift<0?Pshift:0),hf[0])
int32_t base;
MTOFEXTENDED(0,base)
float32_t ratio;
MTOFEXTENDED(Pshift,frq[0])
ratio=(float32_t)frq[0]/base;
frq[0]=-(1<<LPOW+1)+ratio*(1<<LPOW+1);

Pshift=param_PDOWN+inlet_PDOWN;
MTOFEXTENDED((1<<27)-(Pshift>0?Pshift:0),lf[1])
MTOF(-(1<<26)-(Pshift<0?Pshift:0),hf[1])

MTOFEXTENDED(Pshift,frq[1])
ratio=(float32_t)frq[1]/base;
frq[1]=-(1<<LPOW+1)+ratio*(1<<LPOW+1);

shift[0]=param_FUP+inlet_FUP;
shift[1]=param_FDOWN+inlet_FDOWN;

for(i=0;i<2;i++){
MTOFEXTENDED((-64<<21)+((shift[i]>0?shift[i]:-shift[i])),shift[i])

shift[i]-=731556;
}]]></code.krate>
         <code.srate><![CDATA[writepos = (writepos + 1)&pLENGTHMASK;
wp=(wp+1)&dLENGTHMASK;
int32_t PdelU,PdelD;
MTOF(-param_delayU-inlet_delayU,PdelU)
PdelU=PdelU>>2;
PdelU=__USAT(PdelU,27)>>27-dLENGTHPOW;

MTOF(-param_delayD-inlet_delayD,PdelD)
PdelD=PdelD>>2;
PdelD=__USAT(PdelD,27)>>27-dLENGTHPOW;


//0=up,1=down
int32_t up,down;
int32_t audioin=inlet_in;

up=(a1[(wp-PdelU)&dLENGTHMASK]<<14);
down=(a1[((wp-PdelD)&dLENGTHMASK)+dLENGTH]<<14);

outlet_out=up+down;

CLP+=___SMMUL(audioin-CLP,center)<<1;
up=__SSAT(CLP+up,29);
down=__SSAT(audioin-CLP+down,29);

LP+=___SMMUL(up-LP,HG)<<1;
HP+=___SMMUL(down-HP,LW)<<1;
int32_t iLP=up-LP;
int32_t iHP=HP;
up=LP-iHP;
down=down-HP+iLP;





PSHIFT(up,0);
PSHIFT(down,1);

int32_t m1,m2;
m1=up+___SMMUL(pout[0]-up<<2,param_select<<3);
m2=down+___SMMUL(pout[1]-down<<2,param_select<<3);
FSHIFT(m1,0);
FSHIFT(m2,1);

int32_t px=__SSAT(___SMMUL(__SSAT(pout[0]>>14,16)<<5,param_Pfeed)+___SMMUL(__SSAT((param_FUP>0?high[0]:low[0])>>14,16)<<5,param_Ffeed),16);
int32_t py=__SSAT(___SMMUL(__SSAT(pout[1]>>14,16)<<5,param_Pfeed)+___SMMUL(__SSAT((param_FDOWN<0?low[1]:high[1])>>14,16)<<5,param_Ffeed),16);
a1[wp]=px;
a1[wp+dLENGTH]=py;]]></code.srate>
      </object>
   </patchobj>
   <obj type="filter/hp1" uuid="abea7276611b289bed35b80345a6bc4efd4d9a4e" name="hp1_1" x="1120" y="630">
      <params>
         <frac32.s.map name="freq" value="-29.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 5 sq" uuid="af3306d05140be12b80a6d9fbfa164456e98eb48" name="mix_1" x="1232" y="630">
      <params>
         <frac32.u.map name="gain1" value="36.5"/>
         <frac32.u.map name="gain2" value="18.5"/>
         <frac32.u.map name="gain3" value="20.0"/>
         <frac32.u.map name="gain4" value="50.0"/>
         <frac32.u.map name="gain5" value="23.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_4" x="1330" y="630">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_1" x="1386" y="630">
      <params>
         <frac32.u.map name="amp" value="54.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/delay/shimmerDelay" uuid="564a039f-d1ad-42f4-a640-2fa9743abc84" name="shimmerDelay_1" x="1484" y="630">
      <params>
         <frac32.s.map name="rate" value="-41.0"/>
         <frac32.u.map name="feed" value="49.5"/>
         <frac32.u.map name="slope" value="53.5"/>
         <frac32.u.map name="depth" value="13.5"/>
         <frac32.u.map name="spread" value="54.5"/>
         <frac32.s.map name="damp" value="60.0"/>
         <frac32.s.map name="panRate" value="-51.0"/>
         <int32 name="panSpread" value="994"/>
         <frac32.u.map name="wet" value="12.0"/>
      </params>
      <attribs>
         <combo attributeName="size" selection="131072 (2.73s)"/>
         <spinner attributeName="stages" value="5"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="f272b445-a4a4-4cfa-8982-a412d2391836" name="compander_7" x="1610" y="630">
      <params>
         <frac32.u.map name="gainIn" MidiCC="61" value="29.0"/>
         <frac32.u.map name="tresh" value="32.0"/>
         <frac32.u.map name="ratio" value="64.0"/>
         <frac32.u.map name="expand" MidiCC="62" value="64.0">
            <presets/>
         </frac32.u.map>
         <frac32.s.map name="release" MidiCC="65" value="-50.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="f272b445-a4a4-4cfa-8982-a412d2391836">
         <sDescription>Dynamic range compressor/limiter/expander.</sDescription>
         <author>Remco van der Most</author>
         <license>BSD</license>
         <helpPatch>comp.axh</helpPatch>
         <inlets>
            <frac32buffer name="l"/>
            <frac32buffer name="r"/>
         </inlets>
         <outlets>
            <frac32buffer name="l"/>
            <frac32buffer name="r"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map name="gainIn" description="adds gain to the incoming signal, before compressing"/>
            <frac32.u.map name="tresh" description="sets the limiter/compressor treshold and goal for expander"/>
            <frac32.u.map name="ratio" description="sets the ratio amount of the gain reduction/addition"/>
            <frac32.u.map name="expand" description="sets the amount of expansion towards the treshold when below"/>
            <frac32.s.map.lfopitch name="release" description="sets release time"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int32_t frac_log(int32_t a) {
	Float_t f;
	f.f = a;
	int32_t r1 = ((f.parts.exponent&0x7F)-18) << 24;
	int32_t r3 = logt[f.parts.mantissa>>15]<<10;
	return r1 + r3;
}

int32_t frac_exp(int32_t a) {
	int8_t s = (a>>24)+4;
	uint8_t ei = a>>16;
	if (s>=0)
	     return expt[ei]<<s;
	else return expt[ei]>>(-s);
}
int32_t accum[2];
int i;
int32_t rel;
int32_t lp[2];
int32_t treshlog;
int32_t COMPAND(int32_t IN,int32_t gainIn,int32_t ratio,int32_t expand,int I){
IN=__SSAT(IN+__SSAT(__SSAT(___SMMUL(IN,gainIn)<<5,26)<<2,29),29);
int32_t in=IN>0?IN:-IN;
accum[I]=in>accum[I]?in:(accum[I]+(___SMMUL(in-accum[I],rel)>>2));
int32_t inlog = frac_log(accum[I]);
int32_t over = inlog-treshlog;
int32_t gain;
if (over<0){
	over=(over>>3)*7;
	int32_t tmp=frac_exp(over)<<8;
	tmp=(___SMMUL(tmp,-0x80000+frac_exp(-___SMMUL(over,ratio)<<5))<<5);
	gain = 0x80000+(___SMMUL(tmp,expand)<<5);
} else {
	gain = frac_exp(-___SMMUL(over,ratio)<<5);
}
gain = (gain<<8);
lp[I]=gain<lp[I]?gain:(lp[I]+(___SMMUL(gain-lp[I],rel)>>2));
int32_t out =  __SSAT(___SMMUL(IN,lp[I])<<5,28);
return out;
}]]></code.declaration>
         <code.init><![CDATA[for(i=0;i<2;i++){
accum[i]=0;
lp[i]=0;
}]]></code.init>
         <code.krate><![CDATA[MTOF(-param_release,rel)
treshlog = frac_log(param_tresh);]]></code.krate>
         <code.srate><![CDATA[outlet_l=COMPAND(inlet_l,param_gainIn,param_ratio,param_expand,0);
outlet_r=COMPAND(inlet_r,param_gainIn,param_ratio,param_expand,1);]]></code.srate>
      </object>
   </patchobj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="1708" y="630">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="write_1" outlet="out"/>
         <dest obj="hp1_1" inlet="in"/>
      </net>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="shimmerDelay_1" inlet="in"/>
      </net>
      <net>
         <source obj="or_1" outlet="o"/>
         <dest obj="uniform_2" inlet="trig"/>
         <dest obj="ad_1" inlet="trig"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="*c_2" inlet="in"/>
      </net>
      <net>
         <source obj="dial_1" outlet="out"/>
         <dest obj="note_1" inlet="offset"/>
         <dest obj="note_3" inlet="offset"/>
         <dest obj="note_4" inlet="offset"/>
         <dest obj="note_5" inlet="offset"/>
      </net>
      <net>
         <source obj="uniform_1" outlet="v"/>
         <dest obj="note_1" inlet="note"/>
      </net>
      <net>
         <source obj="dial_2" outlet="out"/>
         <dest obj="square_1" inlet="pitch"/>
         <dest obj="square_2" inlet="pitch"/>
      </net>
      <net>
         <source obj="uniform_2" outlet="v"/>
         <dest obj="note_2" inlet="note"/>
      </net>
      <net>
         <source obj="note_2" outlet="note"/>
         <dest obj="vcf3_1" inlet="pitch"/>
         <dest obj="fm8xRandom_1" inlet="pitch"/>
         <dest obj="latch_2" inlet="i"/>
      </net>
      <net>
         <source obj="dial_3" outlet="out"/>
         <dest obj="note_2" inlet="offset"/>
      </net>
      <net>
         <source obj="uniform_3" outlet="v"/>
         <dest obj="note_3" inlet="note"/>
      </net>
      <net>
         <source obj="ad_1" outlet="env"/>
         <dest obj="vca_1" inlet="v"/>
      </net>
      <net>
         <source obj="or_2" outlet="o"/>
         <dest obj="uniform_4" inlet="trig"/>
         <dest obj="uniform_5" inlet="trig"/>
         <dest obj="uniform_6" inlet="trig"/>
         <dest obj="uniform_8" inlet="trig"/>
         <dest obj="uniform_9" inlet="trig"/>
         <dest obj="uniform_10" inlet="trig"/>
         <dest obj="fm8xRandom_1" inlet="rndFM"/>
         <dest obj="fm8xRandom_1" inlet="rndHrm"/>
         <dest obj="uniform_11" inlet="trig"/>
         <dest obj="uniform_12" inlet="trig"/>
         <dest obj="uniform_13" inlet="trig"/>
         <dest obj="latch_2" inlet="trig"/>
      </net>
      <net>
         <source obj="uniform_4" outlet="v"/>
         <dest obj="glide_1" inlet="in"/>
      </net>
      <net>
         <source obj="glide_1" outlet="out"/>
         <dest obj="interp_1" inlet="i"/>
      </net>
      <net>
         <source obj="uniform_12" outlet="v"/>
         <dest obj="glide_1" inlet="en"/>
         <dest obj="glide_2" inlet="en"/>
         <dest obj="glide_4" inlet="en"/>
         <dest obj="glide_3" inlet="en"/>
         <dest obj="glide_5" inlet="en"/>
         <dest obj="glide_7" inlet="en"/>
         <dest obj="glide_6" inlet="en"/>
         <dest obj="glide_8" inlet="en"/>
         <dest obj="glide_9" inlet="en"/>
      </net>
      <net>
         <source obj="uniform_5" outlet="v"/>
         <dest obj="glide_2" inlet="in"/>
      </net>
      <net>
         <source obj="glide_2" outlet="out"/>
         <dest obj="interp_2" inlet="i"/>
      </net>
      <net>
         <source obj="shimmerDelay_1" outlet="outL"/>
         <dest obj="compander_7" inlet="l"/>
      </net>
      <net>
         <source obj="shimmerDelay_1" outlet="outR"/>
         <dest obj="compander_7" inlet="r"/>
      </net>
      <net>
         <source obj="*c_2" outlet="out"/>
         <dest obj="mix_2" inlet="bus_in"/>
         <dest obj="mix_4" inlet="bus_in"/>
      </net>
      <net>
         <source obj="note_1" outlet="note"/>
         <dest obj="i_1" inlet="in"/>
         <dest obj="glide_3" inlet="in"/>
      </net>
      <net>
         <source obj="note_3" outlet="note"/>
         <dest obj="glide_4" inlet="in"/>
      </net>
      <net>
         <source obj="uniform_8" outlet="v"/>
         <dest obj="glide_5" inlet="in"/>
      </net>
      <net>
         <source obj="uniform_6" outlet="v"/>
         <dest obj="glide_6" inlet="in"/>
      </net>
      <net>
         <source obj="uniform_9" outlet="v"/>
         <dest obj="glide_7" inlet="in"/>
      </net>
      <net>
         <source obj="glide_3" outlet="out"/>
         <dest obj="write_1" inlet="PUP"/>
      </net>
      <net>
         <source obj="glide_4" outlet="out"/>
         <dest obj="write_1" inlet="FUP"/>
      </net>
      <net>
         <source obj="vca_2" outlet="o"/>
         <dest obj="vca_1" inlet="a"/>
      </net>
      <net>
         <source obj="vcf3_1" outlet="out"/>
         <dest obj="vca_2" inlet="a"/>
      </net>
      <net>
         <source obj="adsr_1" outlet="env"/>
         <dest obj="vca_2" inlet="v"/>
         <dest obj="vca_4" inlet="v"/>
      </net>
      <net>
         <source obj="toggle_2" outlet="o"/>
         <dest obj="adsr_1" inlet="gate"/>
         <dest obj="change_1" inlet="in"/>
         <dest obj="latch_1" inlet="i"/>
      </net>
      <net>
         <source obj="glide_5" outlet="out"/>
         <dest obj="+_1" inlet="in1"/>
      </net>
      <net>
         <source obj="glide_6" outlet="out"/>
         <dest obj="write_1" inlet="center"/>
      </net>
      <net>
         <source obj="glide_7" outlet="out"/>
         <dest obj="+_1" inlet="in2"/>
         <dest obj="write_1" inlet="low"/>
      </net>
      <net>
         <source obj="interp_1" outlet="o"/>
         <dest obj="write_1" inlet="delayU"/>
      </net>
      <net>
         <source obj="interp_2" outlet="o"/>
         <dest obj="write_1" inlet="delayD"/>
      </net>
      <net>
         <source obj="uniform_7" outlet="v"/>
         <dest obj="inv_1" inlet="in"/>
      </net>
      <net>
         <source obj="note_4" outlet="note"/>
         <dest obj="glide_8" inlet="in"/>
      </net>
      <net>
         <source obj="glide_8" outlet="out"/>
         <dest obj="write_1" inlet="PDOWN"/>
      </net>
      <net>
         <source obj="uniform_10" outlet="v"/>
         <dest obj="note_5" inlet="note"/>
      </net>
      <net>
         <source obj="note_5" outlet="note"/>
         <dest obj="inv_2" inlet="in"/>
      </net>
      <net>
         <source obj="change_1" outlet="trig"/>
         <dest obj="delayedpulsem_1" inlet="trig"/>
      </net>
      <net>
         <source obj="latch_1" outlet="o"/>
         <dest obj="adsr_2" inlet="gate"/>
      </net>
      <net>
         <source obj="delayedpulsem_1" outlet="pulse"/>
         <dest obj="delayedpulsem_2" inlet="trig"/>
      </net>
      <net>
         <source obj="adsr_2" outlet="env"/>
         <dest obj="vca_3" inlet="v"/>
      </net>
      <net>
         <source obj="inv_1" outlet="out"/>
         <dest obj="note_4" inlet="note"/>
      </net>
      <net>
         <source obj="glide_9" outlet="out"/>
         <dest obj="write_1" inlet="FDOWN"/>
      </net>
      <net>
         <source obj="square_1" outlet="wave"/>
         <dest obj="counter_2" inlet="trig"/>
         <dest obj="obj_1" inlet="trig"/>
         <dest obj="inv_3" inlet="i"/>
         <dest obj="counter_3" inlet="trig"/>
         <dest obj="counter_1" inlet="trig"/>
         <dest obj="square_2" inlet="reset"/>
         <dest obj="counter_4" inlet="trig"/>
      </net>
      <net>
         <source obj="obj_1" outlet="out"/>
         <dest obj="*c_3" inlet="in"/>
         <dest obj="mix_2" inlet="in1"/>
      </net>
      <net>
         <source obj="*c_3" outlet="out"/>
         <dest obj="mix_1" inlet="bus_in"/>
      </net>
      <net>
         <source obj="inv_3" outlet="o"/>
         <dest obj="obj_2" inlet="trig"/>
      </net>
      <net>
         <source obj="obj_2" outlet="out"/>
         <dest obj="mix_1" inlet="in3"/>
         <dest obj="mix_2" inlet="in2"/>
      </net>
      <net>
         <source obj="toggle_3" outlet="o"/>
         <dest obj="pulselength_1" inlet="trig"/>
         <dest obj="fm8xRandom_1" inlet="active"/>
      </net>
      <net>
         <source obj="pulselength_1" outlet="pulse"/>
         <dest obj="or_1" inlet="i2"/>
         <dest obj="or_2" inlet="i2"/>
      </net>
      <net>
         <source obj="counter_2" outlet="c"/>
         <dest obj="or_1" inlet="i1"/>
         <dest obj="uniform_1" inlet="trig"/>
      </net>
      <net>
         <source obj="counter_1" outlet="c"/>
         <dest obj="or_2" inlet="i1"/>
         <dest obj="uniform_15" inlet="trig"/>
      </net>
      <net>
         <source obj="delayedpulsem_2" outlet="pulse"/>
         <dest obj="latch_1" inlet="trig"/>
      </net>
      <net>
         <source obj="fm8xRandom_1" outlet="wave"/>
         <dest obj="vcf3_1" inlet="in"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="vca_4" inlet="a"/>
      </net>
      <net>
         <source obj="vca_4" outlet="o"/>
         <dest obj="*c_1" inlet="in"/>
      </net>
      <net>
         <source obj="+_1" outlet="out"/>
         <dest obj="write_1" inlet="high"/>
      </net>
      <net>
         <source obj="uniform_11" outlet="v"/>
         <dest obj="fm8xRandom_1" inlet="fm"/>
      </net>
      <net>
         <source obj="counter_3" outlet="o"/>
         <dest obj="uniform_14" inlet="trig"/>
         <dest obj="obj_3" inlet="trig"/>
      </net>
      <net>
         <source obj="obj_3" outlet="out"/>
         <dest obj="mix_1" inlet="in4"/>
         <dest obj="mix_2" inlet="in3"/>
      </net>
      <net>
         <source obj="compander_7" outlet="l"/>
         <dest obj="out_1" inlet="left"/>
      </net>
      <net>
         <source obj="compander_7" outlet="r"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="inv_2" outlet="out"/>
         <dest obj="glide_9" inlet="in"/>
      </net>
      <net>
         <source obj="square_2" outlet="wave"/>
         <dest obj="ad_2" inlet="trig"/>
         <dest obj="uniform_3" inlet="trig"/>
      </net>
      <net>
         <source obj="ad_2" outlet="env"/>
         <dest obj="vca_5" inlet="v"/>
      </net>
      <net>
         <source obj="sine_1" outlet="wave"/>
         <dest obj="vca_5" inlet="a"/>
      </net>
      <net>
         <source obj="vca_5" outlet="o"/>
         <dest obj="mix_2" inlet="in4"/>
         <dest obj="mix_1" inlet="in5"/>
      </net>
      <net>
         <source obj="sine_2" outlet="wave"/>
         <dest obj="mix_3" inlet="in1"/>
         <dest obj="mix_4" inlet="in1"/>
      </net>
      <net>
         <source obj="divremc_1" outlet="rem"/>
         <dest obj="sine_1" inlet="pitch"/>
      </net>
      <net>
         <source obj="latch_2" outlet="o"/>
         <dest obj="divremc_1" inlet="a"/>
      </net>
      <net>
         <source obj="mix_2" outlet="out"/>
         <dest obj="mix_3" inlet="bus_in"/>
      </net>
      <net>
         <source obj="mix_3" outlet="out"/>
         <dest obj="vca_3" inlet="a"/>
      </net>
      <net>
         <source obj="vca_3" outlet="o"/>
         <dest obj="write_1" inlet="in"/>
      </net>
      <net>
         <source obj="dial_5" outlet="out"/>
         <dest obj="note_6" inlet="offset"/>
      </net>
      <net>
         <source obj="note_6" outlet="note"/>
         <dest obj="sine_2" inlet="pitch"/>
      </net>
      <net>
         <source obj="uniform_15" outlet="v"/>
         <dest obj="note_6" inlet="note"/>
      </net>
      <net>
         <source obj="mix_4" outlet="out"/>
         <dest obj="mix_1" inlet="in2"/>
      </net>
      <net>
         <source obj="counter_4" outlet="c"/>
         <dest obj="uniform_7" inlet="trig"/>
      </net>
      <net>
         <source obj="hp1_1" outlet="out"/>
         <dest obj="mix_1" inlet="in1"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>-8</y>
      <width>1818</width>
      <height>1096</height>
   </windowPos>
</patch-1.0>