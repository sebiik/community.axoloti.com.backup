<objdefs appVersion="1.0.12">
   <obj.normal id="ad m" uuid="8fa22d77-8442-4aac-967c-0302c007c99a">
      <sDescription>Attack/decay envelope with modulation inputs</sDescription>
      <author>burek, modified from Johannes Taelman&apos;s ADSR M object</author>
      <license>BSD</license>
      <helpPatch>env.axh</helpPatch>
      <inlets>
         <bool32.risingfalling name="gate" description="gate"/>
         <frac32.bipolar name="a" description="attack time modulation"/>
         <frac32.bipolar name="d" description="decay/release time modulation"/>
      </inlets>
      <outlets>
         <frac32.positive name="env" description="envelope output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="a"/>
         <frac32.s.map name="d"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int8_t stage;
int ntrig;
int32_t val;]]></code.declaration>
      <code.init><![CDATA[stage = 0;
ntrig = 0;
val = 0;]]></code.init>
      <code.krate><![CDATA[if ((inlet_gate>0) && !ntrig) {
   stage = 1;
   ntrig = 1;
}
if (!(inlet_gate>0) && ntrig) {
   stage = 0;
   ntrig = 0;
}
if (stage == 0){
   int32_t r1;
 //  int32_t r2;
   MTOF(- param_d - inlet_d, r1);
   r1 = 0x7FFFFFFF - (r1 >> 2);
   val = ___SMMUL(val,r1)<<1;
} else if (stage == 1){
   int32_t a;
   MTOF(- param_a - inlet_a,a);
   a = a >> 2;
   val = val + a;
   if (val<0) {
      val =0x7FFFFFFF;
      stage = 0;
   }
} 
outlet_env = val>>4;]]></code.krate>
   </obj.normal>
</objdefs>