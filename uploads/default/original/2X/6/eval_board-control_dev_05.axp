<patch-1.0 appVersion="1.0.12">
   <comment type="patch/comment" x="14" y="28" text="CONNECTION (MCP4x22)"/>
   <comment type="patch/comment" x="14" y="56" text="PA4 = NSS/CS (MCP4x22: Pin2)"/>
   <comment type="patch/comment" x="14" y="70" text="PA5 = SCK (MCP4x22: Pin3)"/>
   <patchobj type="patch/object" uuid="06729976-b7fd-49a2-a00c-9ecbb8ae89c3" name="object_1" x="322" y="70">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="06729976-b7fd-49a2-a00c-9ecbb8ae89c3">
         <inlets>
            <frac32.positive name="i1"/>
            <frac32.positive name="i2"/>
         </inlets>
         <outlets/>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[uint8_t *txbuf;
uint8_t *rxbuf;

const uint8_t RESET = 0;
const uint8_t CLR = 2;
const uint8_t BUSY = 1;
const uint8_t LDAC = 3;
const uint8_t SYNC = 4;

// SPI 
const uint8_t CLK = 5;
const uint8_t MOSI = 7;


void updateDAC(void) {
	// Pulse LDAC to update outputs
	palWritePad(GPIOA,LDAC,0);
	chThdSleepMicroseconds(1);
	palWritePad(GPIOA,LDAC,1);
}
void setDACLevel(uint8_t output, uint16_t level) {
	txbuf[2] = 0x00; // compose 24bit word out of three bytes

	// Dev
	// Set output 0 to FFFF
	// mode 	adress 	dac value	
	// 00 	001000 	1111 1111 1111 1111
	//txbuf[0] = 0b00010000;
	txbuf[0] = 0b11001000;
	txbuf[1] = 0x80; 
	txbuf[2]= 0b00010011;

	// Write Sequence
	///*
	spiSelect(&SPID1); 
	spiSend(&SPID1,3,txbuf);        
	spiUnselect(&SPID1);
	//*/
	
	/* Bit banging 
	palWritePad(GPIOA, CLK, 0); 

	palWritePad(GPIOA,SYNC,1); 
	palWritePad(GPIOA,SYNC,0);
	
	// Generate 24 falling clock edges	
	for(int i=0; i<24; i++) { // MSB First
		// set Data - MSB First 
		if (i<8) { 			
			if (txbuf[0] & (1 << (7-i))) {
				palWritePad(GPIOA, MOSI, 1);
			} else {
				palWritePad(GPIOA, MOSI, 0);
			}
		} else if(i < 16) {
			if (txbuf[1] & (1 << (7-(i-8)))) {
				palWritePad(GPIOA, MOSI, 1);
			} else {
				palWritePad(GPIOA, MOSI, 0);
			}
		} else {
			if (txbuf[2] & (1 << (7-(i-16)))) {
				palWritePad(GPIOA, MOSI, 1);
			} else {
				palWritePad(GPIOA, MOSI, 0);
			}
		}
		
		palWritePad(GPIOA, CLK, 1);
		palWritePad(GPIOA, CLK, 0); 	 
	}
	
	palWritePad(GPIOA,SYNC,1); 
	palWritePad(GPIOA,SYNC,0);
	
	palWritePad(GPIOA,LDAC,0);
	palWritePad(GPIOA,LDAC,1);	
	*/
}]]></code.declaration>
         <code.init><![CDATA[static uint8_t _txbuf[8] __attribute__ ((section (".sram2")));
static uint8_t _rxbuf[8] __attribute__ ((section (".sram2")));

txbuf = _txbuf;
rxbuf = _rxbuf;

/* DA5370 - Axoloti Connection 
DIN   -  PA7
SCLK  -  PA5
SYNC  -  PA4
LDAC  -  PA3
CLR   -  PA2
BUSY  -  PA1 
RESET -  PA0
*/

// Axolit Pin setup 
/* PAL MODES:
PAL_MODE_RESET
PAL_MODE_UNCONNECTED
PAL_MODE_INPUT
PAL_MODE_INPUT_PULLUP
PAL_MODE_INPUT_PULLDOWN
PAL_MODE_INPUT_ANALOG,
PAL_MODE_OUTPUT_PUSHPULL
PAL_MODE_OUTPUT_OPENDRAIN
*/

// x=palReadPad(GPIOA,1) // Read the Pad

/* Pin setup
--------------------------------------------------------------------- */
palSetPadMode(GPIOA,RESET,PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(GPIOA,CLR,PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(GPIOA,BUSY,PAL_MODE_INPUT);
palSetPadMode(GPIOA,LDAC,PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(GPIOA,SYNC,PAL_MODE_OUTPUT_PUSHPULL);

palSetPadMode(GPIOA,CLK,PAL_MODE_OUTPUT_PUSHPULL);
palSetPadMode(GPIOA,MOSI,PAL_MODE_OUTPUT_PUSHPULL);

/* Initialisiation steps
--------------------------------------------------------------------- */
// set RESET Pin to HIGH (rising Edge triggered) to load Defaults
palWritePad(GPIOA,RESET,1);
// Set CLR to HIGH // to enable Outputs
palWritePad(GPIOA,CLR,1);
// Set SYNC to HIGH. On falling Edge it will start the write operation.
palWritePad(GPIOA,SYNC,1);
// Set LDAC to HIGH because it is falling Edge triggered
palWritePad(GPIOA,LDAC,1);

chThdSleepMilliseconds(1);



/* Calibration init values for registers M and C 
--------------------------------------------------------------------- */
 // M(multiplier) is always 6A9F => range of 5.0V, ‭D53E‬ => range of 10.0V
 // C(offset) is individually measured per channel 

setDACLevel(0, 0x00FF);]]></code.init>
         <code.dispose><![CDATA[palSetPadMode(GPIOA, RESET, PAL_MODE_INPUT_ANALOG);
palSetPadMode(GPIOA, CLR, PAL_MODE_INPUT_ANALOG);
palSetPadMode(GPIOA, BUSY, PAL_MODE_INPUT_ANALOG);
palSetPadMode(GPIOA, LDAC, PAL_MODE_INPUT_ANALOG);
palSetPadMode(GPIOA, SYNC, PAL_MODE_INPUT_ANALOG);

palSetPadMode(GPIOA, CLK, PAL_MODE_INPUT_ANALOG);
palSetPadMode(GPIOA, MOSI, PAL_MODE_INPUT_ANALOG);]]></code.dispose>
         <code.krate><![CDATA[// by paul for axoloti script2 objekt.
// inlet1 = DACout A
// inlet2 = DACout B

//MCP4922 DAC (MCP4822: Bit 14 is ignored)
// dacA: 0x7 (Bits: 0111)= select output A, Buffer enable, Gain *1, SHDN (active mode operation) + 12bit Value of in1
// dacB: 0xF (Bits: 1111)= select output A, Buffer enable, Gain *1, SHDN (active mode operation) + 12bit Value of in2

/*uint16_t dacOutA = (0x7 << 12) | ( inlet_i1>>15 );
uint16_t dacOutB = (0xF << 12) | ( inlet_i2>>15 );

spiSelect(&SPID1);
txbuf[0] = (dacOutA >> 8);
txbuf[1] = (dacOutA & 0xFF);
	spiSend(&SPID1,2,txbuf);
	spiUnselect(&SPID1);

spiSelect(&SPID1);
txbuf[0] = (dacOutB >> 8);
txbuf[1] = (dacOutB & 0xFF);
	spiSend(&SPID1,2,txbuf);
	spiUnselect(&SPID1);

chThdSleepMilliseconds(1);*/
//setDACLevel(0, 0xFFFF);]]></code.krate>
      </object>
   </patchobj>
   <comment type="patch/comment" x="14" y="84" text="PA7 = MOSI (MCP4x22: Pin4)"/>
   <comment type="patch/comment" x="14" y="98" text="MCP4x22 LDAC = GND"/>
   <obj type="gpio/spi/config" uuid="d3e75d8a02e2ccabbbc2af3bc2fcdb8ea65a6133" name="config_1" x="84" y="140">
      <params/>
      <attribs>
         <combo attributeName="clock_polarity" selection="CPOL=0"/>
         <combo attributeName="clock_phase" selection="CPHA=0"/>
         <combo attributeName="baudrate" selection="FPCLK/64"/>
         <combo attributeName="format" selection="MSB first"/>
      </attribs>
   </obj>
   <obj type="disp/chart p" uuid="58f42040a894006a5f73ed8cb8d0bd45481b28cd" name="chart_1" x="630" y="238">
      <params/>
      <attribs/>
   </obj>
   <obj type="midi/in/cc any" uuid="eca13eae3f7625f3ca80cadd19a90de033698aa" name="cc_1" x="434" y="252">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_1" x="28" y="280">
      <params>
         <frac32.s.map name="pitch" value="13.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_1" x="154" y="280">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_2" x="28" y="392">
      <params>
         <frac32.s.map name="pitch" value="-15.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_2" x="154" y="392">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="cc_1" outlet="value"/>
         <dest obj="chart_1" inlet="in"/>
      </net>
      <net>
         <source obj="sine_1" outlet="wave"/>
         <dest obj="bipolar2unipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="sine_2" outlet="wave"/>
         <dest obj="bipolar2unipolar_2" inlet="i"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>397</x>
      <y>498</y>
      <width>1936</width>
      <height>1178</height>
   </windowPos>
</patch-1.0>