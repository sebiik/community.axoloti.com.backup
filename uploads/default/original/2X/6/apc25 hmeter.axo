<objdefs appVersion="1.0.12">
   <obj.normal id="apc25 hmeter" uuid="cb89882d-3f30-457e-9a82-cf4a21f0412g">
      <author>Fabio Barbon</author>
      <license>GPL</license>
      <inlets>
         <frac32.positive name="in" description="input control value"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <combo name="device">
            <MenuEntries>
               <string>din</string>
               <string>usb host port 1</string>
               <string>usb host port 2</string>
               <string>usb host port 3</string>
               <string>usb host port 4</string>
               <string>internal port 1</string>
               <string>internal port 2</string>
               <string>usb device port 1</string>
            </MenuEntries>
            <CEntries>
               <string>MIDI_DEVICE_DIN, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 2</string>
               <string>MIDI_DEVICE_USB_HOST, 3</string>
               <string>MIDI_DEVICE_USB_HOST, 4</string>
               <string>MIDI_DEVICE_INTERNAL, 1</string>
               <string>MIDI_DEVICE_INTERNAL, 2</string>
               <string>MIDI_DEVICE_USB_DEVICE, 1</string>
            </CEntries>
         </combo>
         <combo name="color">
            <MenuEntries>
               <string>green</string>
               <string>red</string>
               <string>yellow</string>
            </MenuEntries>
            <CEntries>
               <string>1</string>
               <string>3</string>
               <string>5</string>
            </CEntries>
         </combo>
         <spinner name="y" MinValue="0" MaxValue="5" DefaultValue="0"/>
      </attribs>
      <code.declaration><![CDATA[int x;
int status_x[8];
int norm_val;]]></code.declaration>
      <code.init><![CDATA[for(x=0;x<8;x++) {
	status_x[x]=0;
}
for(x=0;x<40;x++){
	MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + 0, x, 0);
}]]></code.init>
      <code.krate><![CDATA[norm_val = inlet_in==0 ? -1 : ConvertFracToInt(inlet_in)*8/64;
for(x=0;x<8;x++){
	if(norm_val >= x){
		if(!status_x[x]){
			MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + 0, attr_y*8 + x%8, attr_color);
			status_x[x]=1;	
		}
	} else {
		if(status_x[x]){
			MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + 0, attr_y*8 + x%8, 0);
			status_x[x]=0;	
		}
	}
}]]></code.krate>
   </obj.normal>
</objdefs>