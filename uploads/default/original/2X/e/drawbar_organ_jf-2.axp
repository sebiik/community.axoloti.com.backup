<patch-1.0 appVersion="1.0.11">
   <patchobj type="patch/object" uuid="8b03c296-8c05-4a5c-9658-abcad2174dcf" name="object_1" x="14" y="14">
      <params>
         <frac32.u.map name="d16" value="64.0"/>
         <frac32.u.map name="d513" value="0.0"/>
         <frac32.u.map name="d8" value="0.0"/>
         <frac32.u.map name="d4" value="0.0"/>
         <frac32.u.map name="d223" value="0.0"/>
         <frac32.u.map name="d2" value="0.0"/>
         <frac32.u.map name="d135" value="0.0"/>
         <frac32.u.map name="d113" value="0.0"/>
         <frac32.u.map name="d1" value="0.0"/>
         <frac32.u.map name="percvolume" value="64.0"/>
         <frac32.u.map name="percdecay" value="10.0"/>
         <bool32.tgl name="perc2nd3rd" value="1"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="8b03c296-8c05-4a5c-9658-abcad2174dcf">
         <sDescription>Drawbar organ</sDescription>
         <author>Jani Frilander</author>
         <license>BSD</license>
         <inlets/>
         <outlets>
            <frac32buffer.bipolar name="out"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map name="d16"/>
            <frac32.u.map name="d513"/>
            <frac32.u.map name="d8"/>
            <frac32.u.map name="d4"/>
            <frac32.u.map name="d223"/>
            <frac32.u.map name="d2"/>
            <frac32.u.map name="d135"/>
            <frac32.u.map name="d113"/>
            <frac32.u.map name="d1"/>
            <frac32.u.map name="percvolume"/>
            <frac32.u.map name="percdecay"/>
            <bool32.tgl name="perc2nd3rd"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[static const int tonewheels = 91;
uint8_t key[128];
int32_t keys=0;
int32_t percussion_tonewheel=0;
int32_t percussion_gain=0;
int32_t percussion_key=0;
int32_t new_note=0;
int32_t gain[tonewheels];
int32_t multiplier[tonewheels]={
	140,149,157,167,177,187,198,210,223,236,
	250,265,280,297,315,334,353,374,397,420,
	445,472,500,529,561,594,630,667,707,749,
	794,841,890,944,1000,1059,1122,1188,1260,1334,
	1414,1497,1587,1681,1780,1887,1999,2117,2243,2376,
	2519,2668,2827,2994,3173,3361,3560,3773,3996,4232,
	4484,4750,5034,5332,5648,5981,6338,6714,7109,7533,
	7977,8447,8947,9475,10038,10628,11254,11912,12617,13357,
	14133,14965,15835,16754,17744,18778,19860,20991,22200,23458,
	24780};
int32_t oscillator_x[tonewheels];
int32_t oscillator_y[tonewheels];
int32_t percussion_oscillator_x=0;
int32_t percussion_oscillator_y=0;]]></code.declaration>
         <code.init><![CDATA[int i;
for(i=0;i<tonewheels;i++) {
	oscillator_x[i]=0;
	oscillator_y[i]=16384;
	gain [i]=0;
}

for (i=0;i<128;i++)
	key[i]=0;]]></code.init>
         <code.krate><![CDATA[int i,j;
for(i=0;i<tonewheels;i++){
	gain[i]=0;
}

if (!key[percussion_key])
	percussion_gain=0;

/* percussion and key click*/
if(new_note){
	/*percussion*/
	if (keys==1)
	{
		percussion_tonewheel=new_note;
		percussion_key=new_note;
		if (param_perc2nd3rd)
			percussion_tonewheel +=7;
		if (percussion_tonewheel<tonewheels){
			percussion_gain=param_percvolume;
			percussion_oscillator_x=oscillator_x[percussion_tonewheel];
			percussion_oscillator_y=oscillator_y[percussion_tonewheel];
		}
		else
		{
			percussion_tonewheel=0;
			percussion_gain=0;
		}
	}
	/*key click*/
	new_note=0;
}

/*total 61 keys*/

/*no foldback*/

for(i=0;i<43;i++){
	if (key[i+24]) {
		gain[i] += param_d16;
		gain[i+19] += param_d513;
		gain[i+12] += param_d8;
		gain[i+24] += param_d4;
		gain[i+31] += param_d223;
		gain[i+36] += param_d2;
		gain[i+40] += param_d135;
		gain[i+43] += param_d113;
		gain[i+48] += param_d1;
	}
}

/*foldback drawbar 9*/
 
for(i=43;i<48;i++){
	if (key[i+24]) {
		gain[i] += param_d16;
		gain[i+19] += param_d513;
		gain[i+12] += param_d8;
		gain[i+24] += param_d4;
		gain[i+31] += param_d223;
		gain[i+36] += param_d2;
		gain[i+40] += param_d135;
		gain[i+43] += param_d113;
		gain[i+36] += 3*(param_d1>>2);
	}
}

/*foldback drawbars 8,9*/

for(i=48;i<51;i++){
	if (key[i+24]) {
		gain[i] += param_d16;
		gain[i+19] += param_d513;
		gain[i+12] += param_d8;
		gain[i+24] += param_d4;
		gain[i+31] += param_d223;
		gain[i+36] += param_d2;
		gain[i+40] += param_d135;
		gain[i+31] += 3*(param_d113>>2);
		gain[i+36] += 3*(param_d1>>2);
	}
}

/*foldback drawbars 7,8,9*/
for(i=51;i<55;i++){
	if (key[i+24]) {
		gain[i] += param_d16;
		gain[i+19] += param_d513;
		gain[i+12] += param_d8;
		gain[i+24] += param_d4;
		gain[i+31] += param_d223;
		gain[i+36] += param_d2;
		gain[i+28] += 3*(param_d135>>2);
		gain[i+31] += 3*(param_d113>>2);
		gain[i+36] += 3*(param_d1>>2);
	}
}

/*foldback drawbars 6,7,8,2x9*/
for(i=55;i<60;i++){
	if (key[i+24]) {
		gain[i] += param_d16;
		gain[i+19] += param_d513;
		gain[i+12] += param_d8;
		gain[i+24] += param_d4;
		gain[i+31] += param_d223;
		gain[i+24] += 3*(param_d2>>2);
		gain[i+28] += 3*(param_d135>>2);
		gain[i+31] += 3*(param_d113>>2);
		gain[i+24] += 9*(param_d1>>4);
	}
}

/*foldback drawbars 5,6,7,2x8,2x9*/
if (key[84]) {
	gain[60] += param_d16;
	gain[60+19] += param_d513;
	gain[60+12] += param_d8;
	gain[60+24] += param_d4;
	gain[60+19] += 3*(param_d223>>2);
	gain[60+24] += 3*(param_d2>>2);
	gain[60+28] += 3*(param_d135>>2);
	gain[60+19] += 9*(param_d113>>4);
	gain[60+24] += 9*(param_d1>>4);
}


for(i=0;i<BUFSIZE;i++) {
	outlet_out[i]=__SMMLA(percussion_oscillator_x<<12,percussion_gain,0);
	int32_t temp = (percussion_oscillator_y * multiplier[percussion_tonewheel])>>15;
	percussion_oscillator_x -= temp;
	temp = (percussion_oscillator_x * multiplier[percussion_tonewheel])>>15;
	percussion_oscillator_y += temp;
	percussion_gain -= 1000+(param_percdecay>>13);
	if(percussion_gain<0)
		percussion_gain=0;
}

for(i=0;i<tonewheels;i++) {
	for(j=0;j<BUFSIZE;j++) {
		outlet_out[j] = __SMMLA(oscillator_x[i]<<12,gain[i],outlet_out[j]);
		int32_t temp = (oscillator_y[i] * multiplier[i])>>15;
		oscillator_x[i] -= temp;
		temp = (oscillator_x[i] * multiplier[i])>>15;
		oscillator_y[i] += temp;

	}
}]]></code.krate>
         <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
	if((data1>23)&&(data1<85))
	{
		key[data1]=1;
  		keys++;
		new_note=data1;
	}
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||(status == MIDI_NOTE_OFF + attr_midichannel)) {
   	key[data1]=0;
   	keys--;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="filter/lp" uuid="1427779cf086ab83c8b03eeeac69c2a97759c651" name="lp_1" x="126" y="14">
      <params>
         <frac32.s.map name="pitch" value="16.0"/>
         <frac32.u.map name="reso" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_1" x="266" y="14">
      <params>
         <frac32.u.map name="amp" value="10.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="dist/soft" uuid="e680d76a805e4866027cdf654c7efd8b2e54622" name="soft_1" x="378" y="14">
      <params/>
      <attribs/>
   </obj>
   <obj type="fx/chorus" uuid="222924b0-d303-45d6-8ae5-45f77ac802e1" name="obj_1" x="448" y="14">
      <params>
         <frac32.u.map name="depth" value="0.5"/>
         <frac32.s.map name="speed" value="6.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="574" y="14">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="obj_1" outlet="L"/>
         <dest obj="out_1" inlet="left"/>
      </net>
      <net>
         <source obj="obj_1" outlet="R"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="soft_1" outlet="out"/>
         <dest obj="obj_1" inlet="in"/>
      </net>
      <net>
         <source obj="gain_1" outlet="out"/>
         <dest obj="soft_1" inlet="in"/>
      </net>
      <net>
         <source obj="lp_1" outlet="out"/>
         <dest obj="gain_1" inlet="in"/>
      </net>
      <net>
         <source obj="object_1" outlet="out"/>
         <dest obj="lp_1" inlet="in"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>618</x>
      <y>69</y>
      <width>713</width>
      <height>641</height>
   </windowPos>
</patch-1.0>