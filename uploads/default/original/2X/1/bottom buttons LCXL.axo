<objdefs appVersion="1.0.12">
   <obj.normal id="bottom buttons LCXL" uuid="eeeefeed-3c69-4e41-9110-a63e6525a953">
      <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets/>
      <outlets>
         <bool32 name="button1" description="key pressed?"/>
         <bool32 name="button2"/>
         <bool32 name="button3"/>
         <bool32 name="button4"/>
         <bool32 name="button5"/>
         <bool32 name="button6"/>
         <bool32 name="button7"/>
         <bool32 name="button8"/>
         <bool32 name="button9"/>
         <bool32 name="button10"/>
         <bool32 name="button11"/>
         <bool32 name="button12"/>
         <bool32 name="button13"/>
         <bool32 name="button14"/>
         <bool32 name="button15"/>
         <bool32 name="button16"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="9"/>
      </attribs>
      <code.declaration><![CDATA[uint8_t _gate1;
uint8_t _gate2;
uint8_t _gate3;
uint8_t _gate4;
uint8_t _gate5;
uint8_t _gate6;
uint8_t _gate7;
uint8_t _gate8;
uint8_t _gate9;
uint8_t _gate10;
uint8_t _gate11;
uint8_t _gate12;
uint8_t _gate13;
uint8_t _gate14;
uint8_t _gate15;
uint8_t _gate16;
uint8_t _velo;
uint8_t _rvelo;]]></code.declaration>
      <code.krate><![CDATA[outlet_button1= _gate1<<27;
outlet_button2= _gate2<<27;
outlet_button3= _gate3<<27;
outlet_button4= _gate4<<27;
outlet_button5= _gate5<<27;
outlet_button6= _gate6<<27;
outlet_button7= _gate7<<27;
outlet_button8= _gate8<<27;
outlet_button9= _gate9<<27;
outlet_button10= _gate10<<27;
outlet_button11= _gate11<<27;
outlet_button12= _gate12<<27;
outlet_button13= _gate13<<27;
outlet_button14= _gate14<<27;
outlet_button15= _gate15<<27;
outlet_button16= _gate16<<27;]]></code.krate>
      <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + (attr_channel-1)) && (data2)) 
{
	
if (data1 == 41) 
{
   _gate1 = 1;
}

if (data1 == 42) 
{
   _gate2 = 1;
}

if (data1 == 43) 
{
   _gate3 = 1;
}

if (data1 == 44) 
{
   _gate4 = 1;
}
if (data1 == 57) 

{
   _gate5 = 1;
}

if (data1 == 58) 
{
   _gate6 = 1;
}

if (data1 == 59) 
{
   _gate7 = 1;
}

if (data1 == 60) 
{
   _gate8 = 1;
}
if (data1 == 73) 

{
   _gate9 = 1;
}

if (data1 == 74) 
{
   _gate10 = 1;
}

if (data1 == 75) 
{
   _gate11 = 1;
}

if (data1 == 76) 
{
   _gate12 = 1;
}
if (data1 == 89) 

{
   _gate13 = 1;
}

if (data1 == 90) 
{
   _gate14 = 1;
}

if (data1 == 91) 
{
   _gate15 = 1;
}

if (data1 == 92) 
{

   _gate16 = 1;
}

}
else if (((status == MIDI_NOTE_ON + (attr_channel-1)) && (!data2))||          (status == MIDI_NOTE_OFF + (attr_channel-1))) {
	
if (data1 == 41) 
{
   _gate1 = 0;
}

if (data1 == 42) 
{
   _gate2 = 0;
}

if (data1 == 43) 
{
   _gate3 = 0;
}

if (data1 == 44) 
{
   _gate4 = 0;
}
if (data1 == 57) 

{
   _gate5 = 0;
}

if (data1 == 58) 
{
   _gate6 = 0;
}

if (data1 == 59) 
{
   _gate7 = 0;
}

if (data1 == 60) 
{
   _gate8 = 0;
}
if (data1 == 73) 

{
   _gate9 = 0;
}

if (data1 == 74) 
{
   _gate10 = 0;
}

if (data1 == 75) 
{
   _gate11 = 0;
}

if (data1 == 76) 
{
   _gate12 = 0;
}
if (data1 == 89) 

{
   _gate13 = 0;
}

if (data1 == 90) 
{
   _gate14 = 0;
}

if (data1 == 91) 
{
   _gate15 = 0;
}

if (data1 == 92) 
{

   _gate16 = 0;
}

}]]></code.midihandler>
   </obj.normal>
</objdefs>